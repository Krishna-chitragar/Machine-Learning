{"version":3,"sources":["components/views/Spinner.js","components/config/config.js","components/views/Login.js","components/views/ForgotPassword.js","components/views/ResetPassword.js","components/views/common_view/Header.js","components/views/common_view/SideBar.js","components/views/common_view/CropDetailModal.js","components/views/common_view/ThreeMonthWaterCycleModal.js","components/views/common_view/ThreeMonthCropDetail.js","components/views/common_view/DeleteIncubator.js","components/views/common_view/RunProgram.js","components/views/common_view/NewEntryModal.js","components/views/common_view/Record.js","components/views/common_view/LiveImage.js","components/views/common_view/AtmosphereSlider.js","components/views/common_view/LightLevelSlider.js","components/views/common_view/EditWatarCycleGraphModal.js","components/views/common_view/LineChart.js","components/views/common_view/Graph.js","components/views/common_view/Home.js","PrivateRoute.js","PublicRoute.js","RouteComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Spinner","props","React","useState","open","setOpen","useEffect","loader","Dialog","className","onClose","value","aria-labelledby","CircularProgress","color","baseUrl","useStyles","makeStyles","theme","root","height","paper","margin","spacing","display","flexDirection","alignItems","marginTop","form","width","submit","backgroundColor","background","padding","borderRadius","Login","history","useHistory","classes","errMsg","setErrMsg","setLoader","formik","useFormik","initialValues","email","password","onSubmit","values","fetch","method","headers","body","JSON","stringify","then","res","json","results","error","setTimeout","password_status","localStorage","setItem","token","push","validate","errors","test","Grid","container","component","CssBaseline","item","xs","sm","md","src","Paper","elevation","square","Typography","variant","handleSubmit","TextField","textFiled","fullWidth","label","type","name","id","onChange","handleChange","onBlur","handleBlur","autoComplete","InputProps","endAdornment","InputAdornment","position","touched","to","FormControlLabel","control","Checkbox","icon","fontSize","checkedIcon","Button","ForgotPassword","handleClose","event","reason","Alert","status","onClick","console","log","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","ResetPassword","setEmail","setPassword","setToken","location","state","length","old_password","new_password","confirm_password","new_password_confirmation","readOnly","createStyles","search","marginRight","marginLeft","breakpoints","up","searchIcon","pointerEvents","justifyContent","cursor","inputRoot","inputInput","paddingLeft","transition","transitions","create","Header","AppBar","appBar","Toolbar","InputBase","placeholder","input","inputProps","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","palette","default","SideBar","selectedID","setSelectedID","incList","setIncList","getList","Number","undefined","setShowImage","getItem","incubator_id","openModal","updateList","Accept","Authorization","incubators_list","Drawer","anchor","Divider","List","map","text","index","ListItem","button","selected","ListItemText","primary","start_date","end_date","clear","useStylesBootstrap","arrow","common","black","tooltip","BootstrapTooltip","Tooltip","CropDetailModal","scroll","setScroll","descriptionElementRef","useRef","setId","setName","edit","setEdit","cropDetails","setFieldValue","descriptionElement","current","focus","temperature","co2","humidity","electrical_conductivity","pH","deep_red","red","white","blue","deep_blue","uv","scrollType","crop_name","temp","postCropData","atmosphere","light","classname","title","inCubeData","cb","DialogTitle","showEdit","e","preventDefault","updateFormMode","DialogContent","dividers","DialogContentText","disabled","target","onKeyDown","keyCode","DialogActions","fontFamily","ThreeMonthWaterCycleModal","inputTypeNumbers","document","querySelectorAll","a","onwheel","blur","setOpenModal","defaultValue","useStyles1","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","IconButton","aria-label","direction","Math","ceil","max","createData","sl_no","electrolyte","ph","mac_address","download","rows","sort","b","calories","ThreeMonthCropDetail","setPage","setRowsPerPage","emptyRows","min","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","slice","row","scope","style","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","DeleteIncubator","setDeleteErrMsg","aria-describedby","postDeleteData","msg","setUpdateList","setInCubeData","removeItem","window","reload","deleteIncubatorList","RunProgram","runData","selectedId","postRunData","record_status","setIsRecord","setDelayEdit","setAtmShowPen","setLightShowPen","rData","NewEntryModal","require","randomNo","setRandomNo","showLoader","setShowLoader","img","setImg","setCsvFile","fRef","showParentBtns","setShowParentBtns","setValue","errCSVMsg","setErrCSVMsg","progress","setProgress","setMac","setOpenManual","showScan","setShowScan","showCloudBtn","setShowCloudBtn","showTrayType","setShowTrayType","timer","setInterval","prevProgress","clearInterval","floor","random","regex","RegExp","onChangeHandler","tempCsvFile","files","flushFile","macAddress","htmlFor","accept","multiple","ref","Tabs","newValue","click","indicatorColor","textColor","Tab","Record","isBlue","setIsBlue","disableRecord","setDisableRecord","rs","isRecord","overflow","LiveImage","updated_on","showImage","image_url","alt","CustomSlider","withStyles","thumb","border","marginBottom","boxShadow","active","valueLabel","left","track","rail","Slider","CustomThumbComponent","AtmosphereSlider","checkedA","checkedB","checkedAmanual","setCheckedAmanual","checkedAauto","setCheckedAauto","setTemp","setHumidity","co","setCO","setElectrolyte","setpH","isDisabled","setIsDisabled","autoData","setAutoData","manualData","setManualData","isActive","setIsActive","atmosphere_status","postAutoData","fetchAutoData","postManualData","fetchManualData","onChangeCommitted","key","postData","ariaValueNow","togglebar","showAtmPen","lg","ThumbComponent","orientation","v","valueLabelDisplay","itemitem","checked","s","prevCheckedArr","LightLevelSlider","checkedC","checkedD","checkedE","checkedLmanual","setCheckedLmanual","checkedLauto","setCheckedLauto","checkedLautoamb","setCheckedLautoamb","deepRed","setdeepRed","setRed","setWhite","setBlue","deepBlue","setDeepBlue","setUV","lightManualData","setLightManualData","lightAutoData","setLightAutoData","lightAutoAmbData","setLightAutoAmbData","light_status","showLightPen","fetchLightManual","fetchLightautoambient","fetchLightAuto","togglebarlmanual","togglebarautoamb","postLightData","EditWatarCycleGraphModal","editPencil","setEditPencil","hour0","setHour0","hour1","setHour1","hour2","setHour2","hour3","setHour3","hour4","setHour4","hour5","setHour5","hour6","setHour6","hour7","setHour7","hour8","setHour8","hour9","setHour9","hour10","setHour10","hour11","setHour11","hour12","setHour12","hour13","setHour13","hour14","setHour14","hour15","setHour15","hour16","setHour16","hour17","setHour17","hour18","setHour18","hour19","setHour19","hour20","setHour20","hour21","setHour21","hour22","setHour22","hour23","setHour23","updateWaterCycleForm","postGraphData","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","twenty_one","twenty_two","twenty_three","twenty_four","onChangeHour0","onChangeHour1","onChangeHour2","onChangeHour3","onChangeHour4","onChangeHour5","onChangeHour6","onChangeHour7","onChangeHour8","onChangeHour9","onChangeHour10","onChangeHour11","onChangeHour12","onChangeHour13","onChangeHour14","onChangeHour15","onChangeHour16","onChangeHour17","onChangeHour18","onChangeHour19","onChangeHour20","onChangeHour21","onChangeHour22","onChangeHour23","LineChart","mapData","setMapData","cd","data","labels","datasets","fill","radius","pointRadius","pointHitRadius","lineTension","borderColor","isDynamicHour","tempD","hourVal","options","legend","scales","legendItem","datasetIndex","responsive","maintainAspectRatio","textAlign","secondary","card_margin_top","Graph","setSliderHeight","setSliderWidth","checkedgraphAmanual","setCheckedgraphAmanual","checkedgraphAauto","setCheckedgraphAauto","garphAutoData","setGraphAutoData","GraphManualData","setGraphManualData","showGraphIcon","ele","getElementById","postGraphAutoData","fetchGraphAutoData","postGraphManualdata","fetchGraphManualData","water_status","Container","paddingTop","paddingBottom","Home","newupdate","setDate","selectedName","disable","setDisable","deleteBtn","setDeleteBtn","runBtn","setRunBtn","setCropDetails","setShowEdit","delayEdit","setShowGraphIcon","water","setRunData","fetchApi","status_key","tempDate","Date","toUTCString","catch","rej","sidbar_tab","myClock","sId","maxWidth","Card","cropDetailData","PrivateRoute","Component","rest","render","PublicRoute","restricted","RouteComponent","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"wxBAIe,SAASA,EAAQC,GAAQ,IAAD,EAEXC,IAAMC,UAAS,GAFJ,mBAE5BC,EAF4B,KAEtBC,EAFsB,KAYnC,OAJAC,qBAAU,WACND,EAAQJ,EAAMM,UACf,CAACN,IAGA,8BACI,cAACO,EAAA,EAAD,CAAQC,UAAU,UAAUC,QAVhB,SAACC,GACjBN,GAAQ,IAS8CO,kBAAgB,sBAAsBR,KAAMA,EAA9F,SACKA,EACG,cAACS,EAAA,EAAD,CAAmBC,MAAM,cAC3B,OCrBlB,IAKeC,EALA,CAEXA,QAAQ,8BCoBNC,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQ,SAEZC,MAAO,CACHC,OAAQJ,EAAMK,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAWT,EAAMK,QAAQ,KAE7BK,KAAM,CACFC,MAAO,MACPF,UAAWT,EAAMK,QAAQ,IAE7BO,OAAQ,CACJR,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,GAC5BT,MAAO,OACPiB,gBAAiB,UACjB,UAAW,CACPC,WAAY,WAEhBC,QAAS,YACTC,aAAc,YAIP,SAASC,IAEpB,IAAMC,EAAUC,cAEVC,EAAUtB,IAJY,EAMAb,mBAAS,IANT,mBAMrBoC,EANqB,KAMbC,EANa,OAOFrC,mBAAS,IAPP,gCAQIA,mBAAS,KARb,gCASIA,oBAAS,IATb,gCAWAD,IAAMC,UAAS,IAXf,mBAWrBI,EAXqB,KAWbkC,EAXa,OAYJvC,IAAMC,UAAS,GAZX,mBAYfE,GAZe,WA6DtBqC,EAASC,YAAU,CACrBC,cAhDkB,CAClBC,MAAO,GACPC,SAAU,IA+CVC,SA5Ca,SAAAC,GACbP,GAAU,GACVQ,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,UAA6B,CAC9BmC,OAAQ,OACRC,QAAS,CACT,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACT,MAAOG,EAAOH,MAAOC,SAAUE,EAAOF,aACzDS,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACG,GACzBA,EAAQC,OACRnB,EAAUkB,EAAQC,OAClBlB,GAAU,GACVmB,YAAW,WAAQpB,EAAU,MAAO,MAC9BkB,EAAQG,iBACdpB,GAAU,GACVpC,GAAQ,GACRyD,aAAaC,QAAQ,QAAQL,EAAQM,OACrC5B,EAAQ6B,KAAK,WACNP,EAAQG,kBACfpB,GAAU,GACVpC,GAAQ,GACRyD,aAAaC,QAAQ,QAAQL,EAAQM,OACrC5B,EAAQ6B,KAAK,kBAAmB,CAAC,CAAEpB,MAAOG,EAAOH,MAAOC,SAAUE,EAAOF,SAAUkB,MAAON,EAAQM,cAsB1GE,SAjBa,SAAAlB,GACb,IAAImB,EAAS,GAUb,OARKnB,EAAOH,MAEA,4CAA4CuB,KAAKpB,EAAOH,SAChEsB,EAAOtB,MAAQ,4BAFfsB,EAAOtB,MAAQ,8BAIdG,EAAOF,WACRqB,EAAOrB,SAAW,+BAEfqB,KASX,OACI,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAO9D,UAAW6B,EAAQnB,KAApD,UACI,cAACqD,EAAA,EAAD,IACA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAjC,SACI,qBAAKnE,UAAU,cAAf,SACI,qBAAKoE,IAAI,oCAGjB,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWO,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,sBAAKvE,UAAW6B,EAAQjB,MAAxB,UACI,cAAC4D,EAAA,EAAD,CAAYV,UAAU,KAAKW,QAAQ,KAAKzE,UAAU,gBAAlD,mCAGA,uBAAMA,UAAW6B,EAAQV,KAAMmB,SAAUL,EAAOyC,aAAhD,UACI,cAACC,EAAA,EAAD,CAAW3E,UAAW6B,EAAQ+C,UAC1B/D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOH,MACrBkD,aAAa,MACbC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKfzD,EAAO0D,QAAQvD,OAASH,EAAOyB,OAAOtB,MAAQ,qBAAKpC,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOtB,QAAe,KACpG,cAACuC,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOF,SACrBiD,aAAa,MACbC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKfzD,EAAO0D,QAAQtD,UAAYJ,EAAOyB,OAAOrB,SAAW,qBAAKrC,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOrB,WAAkB,KAC7G,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,SACI,sBAAKjE,UAAU,QAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwB8B,IACxB,qBAAK9B,UAAU,eAAf,SACI,cAAC,IAAD,CAAS4F,GAAG,mBAAmB5F,UAAU,mBAAzC,qCAMZ,cAAC6F,EAAA,EAAD,CACI7F,UAAU,gBACV8F,QACI,cAACC,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,CAA0BC,SAAS,UACzCC,YAAa,cAAC,IAAD,CAAcD,SAAS,QAAQ5F,MAAM,YAClD2E,KAAK,aAGbF,MAAM,gBAEV,cAACqB,EAAA,EAAD,CACItB,WAAS,EACT7E,UAAW6B,EAAQR,OACnB0D,KAAK,SAHT,SAKI,sBAAM/E,UAAU,OAAhB,6BAKhB,cAAC,EAAD,CAASF,OAAQA,O,6BCvLvBS,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQ,SAEZC,MAAO,CACHC,OAAQJ,EAAMK,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAWT,EAAMK,QAAQ,KAE7BK,KAAM,CACFC,MAAO,MACPF,UAAWT,EAAMK,QAAQ,IAE7BO,OAAQ,CACJR,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,GAC5BT,MAAO,OACPiB,gBAAiB,UACjB,UAAW,CACPC,WAAY,WAEhBC,QAAS,aACTC,aAAc,YAIP,SAAS2E,IAEpB,IAAMvE,EAAUtB,IAFqB,EAITb,mBAAS,IAJA,mBAI9BoC,EAJ8B,KAItBC,EAJsB,OAKXrC,mBAAS,IALE,gCAObD,IAAMC,UAAS,IAPF,mBAO9BC,EAP8B,KAOxBC,EAPwB,OAQTH,IAAMC,UAAS,GARN,mBAQ9BI,EAR8B,KAQtBkC,EARsB,KAc/BqE,EAAc,SAACC,EAAOC,GACT,cAAXA,GAGJ3G,GAAQ,IAuCZ,SAAS4G,EAAMhH,GACX,OAAO,cAAC,IAAD,aAAU8E,UAAW,GAAIG,QAAQ,UAAajF,IAGzD,IAAMyC,EAASC,YAAU,CACrBC,cAzCkB,CAClBC,MAAO,IAyCPE,SAtCa,SAAAC,GACbP,GAAU,GACVQ,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,oBAAuC,CACxCmC,OAAQ,OACRC,QAAS,CACT,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACT,MAAOG,EAAOH,UACjCU,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACG,GACN,MAAnBA,EAAQwD,QACRzE,GAAU,GACVpC,GAAQ,KAERmC,EAAUkB,EAAQC,OAClBlB,GAAU,GACVmB,YAAW,WAAQpB,EAAU,MAAO,UAuB5C0B,SAlBa,SAAAlB,GACb,IAAImB,EAAS,GAOb,OALKnB,EAAOH,MAEA,4CAA4CuB,KAAKpB,EAAOH,SAChEsB,EAAOtB,MAAQ,4BAFfsB,EAAOtB,MAAQ,8BAIZsB,KAaX,OACI,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAO9D,UAAW6B,EAAQnB,KAApD,UACI,cAACqD,EAAA,EAAD,IACA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAjC,SACI,qBAAKnE,UAAU,qBAAf,SACI,qBAAKoE,IAAI,oCAGjB,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWO,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,sBAAKvE,UAAW6B,EAAQjB,MAAxB,UACI,cAAC4D,EAAA,EAAD,CAAYV,UAAU,KAAKW,QAAQ,KAAKzE,UAAU,eAAlD,6BAGA,uBAAMA,UAAW6B,EAAQV,KAAMmB,SAAUL,EAAOyC,aAAhD,UACI,cAACC,EAAA,EAAD,CAAW3E,UAAW6B,EAAQ+C,UAC1B/D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOH,MACrBkD,aAAa,MACbC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKfzD,EAAO0D,QAAQvD,OAASH,EAAOyB,OAAOtB,MAAQ,qBAAKpC,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOtB,QAAe,KACpG,qBAAKpC,UAAU,QAAf,SACI,+BAAO8B,MAEX,cAACqE,EAAA,EAAD,CACItB,WAAS,EACT7E,UAAW6B,EAAQR,OACnB0D,KAAK,SACL2B,QAlGJ,WAChBC,QAAQC,IAAI,WA6FI,SAMI,sBAAM5G,UAAU,OAAhB,uBAGR,cAAC6G,EAAA,EAAD,CACIC,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBrH,KAAMA,EACNsH,iBAAkB,IAClBhH,QAASoG,EAPb,SASI,cAACG,EAAD,CAAOxG,UAAU,gBAAgBC,QAASoG,EAAaa,SAAS,UAAhE,2EAIJ,cAACtD,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,SACI,8BACI,cAAC,IAAD,CAAS2B,GAAG,IAAI5F,UAAU,oBAA1B,uCAOhB,cAAC,EAAD,CAASF,OAAQA,O,8BClKvBS,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQ,SAEZC,MAAO,CACHC,OAAQJ,EAAMK,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,UAAWT,EAAMK,QAAQ,KAE7BK,KAAM,CACFC,MAAO,MACPF,UAAWT,EAAMK,QAAQ,IAE7BO,OAAQ,CACJR,OAAQJ,EAAMK,QAAQ,EAAG,EAAG,GAC5BT,MAAO,OACPiB,gBAAiB,UACjB,UAAW,CACPC,WAAY,WAEhBC,QAAS,aACTC,aAAc,YAIP,SAAS0F,EAAc3H,GAElC,IAAMmC,EAAUC,cAEVC,EAAUtB,IAJyB,EAMbb,mBAAS,IANI,mBAMlCoC,EANkC,KAM1BC,EAN0B,OAOfrC,mBAAS,IAPM,mBAOlC0C,EAPkC,KAO3BgF,EAP2B,OAQT1H,mBAAS,IARA,mBAQlC2C,EARkC,KAQxBgF,EARwB,OASf3H,mBAAS,IATM,mBASlC6D,EATkC,KAS3B+D,EAT2B,OAUD5H,mBAAS,IAVR,gCAWFA,mBAAS,KAXP,gCAYOA,mBAAS,KAZhB,gCAcjBD,IAAMC,UAAS,IAdE,mBAc5BE,GAd4B,aAebH,IAAMC,UAAS,GAfF,mBAelCI,EAfkC,KAe1BkC,EAf0B,KAuBzCnC,qBAAU,WACHL,EAAMmC,SAAWnC,EAAMmC,QAAQ4F,UAAY/H,EAAMmC,QAAQ4F,SAASC,OACjEhI,EAAMmC,QAAQ4F,SAASC,MAAMC,OAAS,IACtCL,EAAS5H,EAAMmC,QAAQ4F,SAASC,MAAM,GAAGpF,OACzCiF,EAAY7H,EAAMmC,QAAQ4F,SAASC,MAAM,GAAGnF,UAC5CiF,EAAS9H,EAAMmC,QAAQ4F,SAASC,MAAM,GAAGjE,UAE/C,CAAC/D,IAEH,IAoDMyC,EAASC,YAAU,CACrBC,cApEkB,CAClBuF,aAAa,GACbC,aAAc,GACdC,iBAAiB,IAkEjBtF,SAtDa,SAAAC,GACTA,EAAOoF,aAAiBpF,EAAOqF,iBAEnC5F,GAAU,GACVQ,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,mBAAsC,CACvCmC,OAAQ,OACRC,QAAS,CACT,OAAU,mBACV,eAAgB,mBAChB,cAAiBa,GAErBZ,KAAMC,KAAKC,UAAU,CAACT,MAAOA,EAAOsF,aAAcnF,EAAOmF,aACrDC,aAAcpF,EAAOoF,aAAcE,0BAA2BtF,EAAOqF,qBAClE9E,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACG,GAC7BA,EAAQC,OACRnB,EAAUkB,EAAQC,OAClBlB,GAAU,GACVmB,YAAW,WAAQpB,EAAU,MAAO,MAC9BkB,EAAQG,kBACdrB,EAAUkB,EAAQC,OAClBlB,GAAU,GACVpC,GAAQ,GACR+B,EAAQ6B,KAAK,UAiCrBC,SA5Ba,SAAAlB,GACb,IAAImB,EAAS,GAqBb,OAnBKnB,EAAOmF,eACRhE,EAAOgE,aAAe,sCAErBnF,EAAOoF,eACRjE,EAAOiE,aAAe,6BAErBpF,EAAOqF,mBACRlE,EAAOkE,iBAAmB,iCAEC,KAA5BrF,EAAOqF,kBAAmD,KAAxBrF,EAAOoF,cACpCpF,EAAOqF,mBAAqBrF,EAAOoF,eACnCjE,EAAOkE,iBAAmB,oDAGP,KAAxBrF,EAAOmF,cAA2C,KAApBnF,EAAOF,UAChCE,EAAOmF,eAAiBrF,IACxBqB,EAAOgE,aAAe,mCAGvBhE,KASX,OACI,eAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAO9D,UAAW6B,EAAQnB,KAApD,UACI,cAACqD,EAAA,EAAD,IACA,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAjC,SACI,qBAAKnE,UAAU,8BAAf,SACI,qBAAKoE,IAAI,oCAGjB,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWO,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACI,sBAAKvE,UAAW6B,EAAQjB,MAAxB,UACI,cAAC4D,EAAA,EAAD,CAAYV,UAAU,KAAKW,QAAQ,KAAKzE,UAAU,cAAlD,iCAGA,uBAAMA,UAAW6B,EAAQV,KAAMmB,SAAUL,EAAOyC,aAAhD,UACI,cAACC,EAAA,EAAD,aAAW3E,UAAW6B,EAAQ+C,UAC1B/D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,OACLC,KAAK,QACLC,GAAG,QACH/E,MAAOkC,EACPmD,WAAY,CACRuC,UAAU,GAEdxC,aAAa,OAXjB,aAYgB,CACRE,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKhB,cAACf,EAAA,EAAD,CAAW3E,UAAW6B,EAAQ+C,UAC1B/D,OAAO,SACPgE,WAAS,EACTC,MAAM,mBACNC,KAAK,WACLC,KAAK,eACLC,GAAG,eACHC,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOmF,aACrBpC,aAAa,MACbC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKfzD,EAAO0D,QAAQ+B,cAAgBzF,EAAOyB,OAAOgE,aAAe,qBAAK1H,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOgE,eAAsB,KACzH,cAAC/C,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,eACNC,KAAK,WACLC,KAAK,eACLC,GAAG,eACHC,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOoF,aACrBrC,aAAa,MACbC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKfzD,EAAO0D,QAAQgC,cAAgB1F,EAAOyB,OAAOiE,aAAe,qBAAK3H,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOiE,eAAsB,KACzH,cAAChD,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,mBACNC,KAAK,WACLC,KAAK,mBACLC,GAAG,mBACHC,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOqF,iBACrBtC,aAAa,MACbC,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,SAKfzD,EAAO0D,QAAQiC,kBAAoB3F,EAAOyB,OAAOkE,iBAAmB,qBAAK5H,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOkE,mBAA0B,KACrI,qBAAK5H,UAAU,QAAf,SACI,+BAAO8B,MAEX,cAACqE,EAAA,EAAD,CACItB,WAAS,EACT7E,UAAW6B,EAAQR,OACnB0D,KAAK,SAHT,SAKI,sBAAMlD,QAAQ,aAAd,sCAKhB,cAAC,EAAD,CAAS/B,OAAQA,O,4EC1OvBS,I,OAAYC,aAAW,SAACC,GAAD,OACzBsH,YAAa,CACTC,OAAO,aACHtC,SAAU,WACVjE,aAAc,OACdH,gBAAiB,QACjBjB,MAAO,QACP,UACA,CACIiB,gBAAiB,SAErB2G,YAAaxH,EAAMK,QAAQ,GAC3BoH,WAAY,EACZ9G,MAAO,QACNX,EAAM0H,YAAYC,GAAG,MAAQ,CAC1BF,WAAYzH,EAAMK,QAAQ,GAC1BM,MAAO,SAGfiH,WAAY,CACR7G,QAASf,EAAMK,QAAQ,EAAG,GAC1BH,OAAQ,OACR+E,SAAU,WACV4C,cAAe,OACfvH,QAAS,OACTE,WAAY,SACZsH,eAAgB,SAChBC,OAAQ,WAEZC,UAAW,CACPpI,MAAO,WAEXqI,WAAW,aACPlH,QAASf,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChC6H,YAAY,cAAD,OAAgBlI,EAAMK,QAAQ,GAA9B,OACX8H,WAAYnI,EAAMoI,YAAYC,OAAO,SACrC1H,MAAO,mBACNX,EAAM0H,YAAYC,GAAG,MAAQ,CAC1BhH,MAAO,eAMR,SAAS2H,KAAU,IAAD,EAEvBlH,EAAUtB,KAEhB,OACI,8BACI,cAACyI,EAAA,GAAD,GAAQtD,SAAS,QAAQ1F,UAAW6B,EAAQoH,QAA5C,0BAA8D,UAA9D,yBACI,cAACC,EAAA,EAAD,UACI,sBAAKlJ,UAAW6B,EAAQmG,OAAxB,UACI,qBAAKhI,UAAW6B,EAAQwG,WAAxB,SACI,cAAC,IAAD,MAEJ,cAACc,EAAA,EAAD,CACIC,YAAY,WACZpJ,UAAU,eACV6B,QAAS,CACLnB,KAAMmB,EAAQ4G,UACdY,MAAOxH,EAAQ6G,YAEnBY,WAAY,CAAE,aAAc,kBAb5C,M,2EC3CN/I,I,OAAYC,aAAW,SAACC,GAAD,OACzBsH,YAAa,CACTwB,OAAQ,CACJnI,MALQ,IAMRoI,WAAY,GAEhBC,YAAa,CACTrI,MATQ,IAURE,gBAAiB,sBAErBoI,QAASjJ,EAAMkJ,OAAOD,QACtBE,QAAS,CACLC,SAAU,EACVvI,gBAAiBb,EAAMqJ,QAAQvI,WAAWwI,QAC1CvI,QAASf,EAAMK,QAAQ,UAKpB,SAASkJ,GAAQxK,GAE5B,IAAMqC,EAAUtB,KAEVoB,EAAUC,cAJmB,EAMXnC,IAAMC,UAAS,GANJ,mBAMtBE,GANsB,aAQCF,qBARD,mBAQ5BuK,EAR4B,KAQhBC,EARgB,OAULxK,mBAAS,IAVJ,mBAU5ByK,EAV4B,KAUnBC,EAVmB,KAYnCvK,qBAAU,WACNwK,MACD,IAIHxK,qBAAU,WACNqK,EAAcI,OAAO9K,EAAMyK,eAC7B,CAACzK,EAAMyK,aAETpK,qBAAU,gBACS0K,IAAZJ,GAA2C,IAAlBA,EAAQ1C,OAChCjI,EAAMgL,cAAa,GAGnBhL,EAAMgL,cAAa,GAENnH,aAAaoH,QAAQ,eAE/BN,GAAWA,EAAQ1C,OAAO,IAC7BjI,EAAM0K,cAAcC,EAAQ,GAAGO,cAC/BR,EAAcI,OAAOH,EAAQ,GAAGO,kBAGtC,CAACP,IAEHtK,qBAAU,WACHL,EAAMmL,WACL/K,GAAQ,KAEd,CAACJ,EAAMmL,YAET9K,qBAAU,WACFL,EAAMoL,aACNP,IACA7K,EAAM0K,cAAc1K,EAAMoL,eAE/B,CAACpL,EAAMoL,aAYV,SAASP,IACL,IAAI9G,EAAQF,aAAaoH,QAAQ,SACjCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,cAAiC,CAClCmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,KAGtBT,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHmH,EAAWnH,EAAQ8H,oBAI3B,OACI,eAACC,GAAA,EAAD,CACIhL,UAAW6B,EAAQ0H,OACnB9E,QAAQ,YACR5C,QAAS,CACLjB,MAAOiB,EAAQ4H,aAEnBwB,OAAO,QANX,UAQI,qBAAKjL,UAAW6B,EAAQ6H,QAAxB,SACI,qBAAK1J,UAAU,UAAf,SACI,qBAAKoE,IAAI,iCAAiCpE,UAAU,oBAG5D,cAACkL,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAMnL,UAAU,cAAhB,SACKmK,GAASA,EAAQiB,KAAI,SAACC,EAAMC,GAAP,OAClB,cAACC,GAAA,EAAD,CAAUC,QAAM,EAAyBC,SAAUxB,IAAaoB,EAAKX,aAAchE,QAAS,WAAKlH,EAAM0K,cAAcmB,EAAKX,eAA1H,SACI,cAACgB,GAAA,EAAD,CAAcC,QAAS,OAAcN,EAAKX,aAAe,IAAMW,EAAKrG,KAA7C,KAAgEqG,EAAKO,WAArE,MAAoGP,EAAKQ,SAAU7L,UAAU,UADlIqL,EAAKX,mBAKnC,8BACI,eAAClG,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,UAAU,iBAAnC,UACI,cAAC,KAAD,CAAsBA,UAAU,gBAChC,sBAAMA,UAAU,kBAAkB0G,QAnDlD,WACIrD,aAAayI,QACbnK,EAAQ6B,KAAK,MAiDD,4B,oHCtHduI,I,OAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,uBAIjB,SAASkL,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAAS8M,GAAgB9M,GAAQ,IAAD,EAEnBC,IAAMC,UAAS,GAFI,mBAEpCC,EAFoC,KAE9BC,EAF8B,OAIfH,IAAMC,SAAS,SAJA,mBAIpC6M,EAJoC,KAI5BC,EAJ4B,KAMrCC,EAAwBhN,IAAMiN,OAAO,MANA,EAQxBhN,qBARwB,mBAQrCuF,EARqC,KAQjC0H,EARiC,OAUpBjN,qBAVoB,mBAU/BkN,GAV+B,aAYpBnN,IAAMC,UAAS,GAZK,mBAYrCmN,EAZqC,KAY/BC,EAZ+B,KAc3CjN,qBAAU,WACHL,GAASA,EAAMuN,cACdJ,EAAMnN,EAAMuN,YAAYrC,cACxBkC,EAAQpN,EAAMuN,YAAY/H,MAC1B/C,EAAO+K,cAAc,YAAaxN,EAAMuN,YAAY/H,SAE1D,CAACxF,IAEH,IAQM6G,EAAc,WAChBzG,GAAQ,IAGZC,qBAAU,WACND,EAAQJ,EAAMG,QAChB,CAACH,EAAMG,OAETF,IAAMI,WAAU,WACZ,GAAIF,EAAM,CAAC,IACUsN,EAAuBR,EAAhCS,QACmB,OAAvBD,GACAA,EAAmBE,WAG5B,CAACxN,IAqFJE,qBAAU,WACJL,EAAMuN,cACL9K,EAAO+K,cAAc,OAAQxN,EAAMuN,YAAYK,aAC/CnL,EAAO+K,cAAc,MAAOxN,EAAMuN,YAAYM,KAC9CpL,EAAO+K,cAAc,WAAYxN,EAAMuN,YAAYO,UACnDrL,EAAO+K,cAAc,0BAA2BxN,EAAMuN,YAAYQ,yBAClEtL,EAAO+K,cAAc,KAAMxN,EAAMuN,YAAYS,IAC7CvL,EAAO+K,cAAc,WAAYxN,EAAMuN,YAAYU,UACnDxL,EAAO+K,cAAc,MAAOxN,EAAMuN,YAAYW,KAC9CzL,EAAO+K,cAAc,QAASxN,EAAMuN,YAAYY,OAChD1L,EAAO+K,cAAc,OAAQxN,EAAMuN,YAAYa,MAC/C3L,EAAO+K,cAAc,YAAaxN,EAAMuN,YAAYc,WACpD5L,EAAO+K,cAAc,KAAMxN,EAAMuN,YAAYe,IAC7C7L,EAAO+K,cAAc,aAAcxN,EAAMuN,YAAYnB,YACrD3J,EAAO+K,cAAc,WAAYxN,EAAMuN,YAAYlB,aAExD,CAACrM,EAAMuN,cAOT,IAnIyBgB,EA2NnB9L,EAASC,YAAU,CACrBC,cAjIkB,CAClB6L,UAAW,GACXC,KAAM,GACNZ,IAAK,GACLC,SAAU,GACVC,wBAAyB,GACzBC,GAAI,GACJC,SAAU,GACVC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,UAAW,GACXC,GAAI,GACJlC,WAAY,GACZC,SAAU,IAoHVvJ,SA1Fa,SAACC,GACd,IAAIgB,EAAQF,aAAaoH,QAAQ,SAE7ByD,EAAc,CACdC,WAAW,CACPzD,aAHSrH,aAAaoH,QAAQ,cAI9BzF,KAAMzC,EAAOyL,UACbC,KAAM1L,EAAO0L,KACbZ,IAAK9K,EAAO8K,IACZC,SAAU/K,EAAO+K,SACjBC,wBAAyBhL,EAAOgL,wBAChCC,GAAIjL,EAAOiL,GACX5B,WAAYrJ,EAAOqJ,WACnBC,SAAUtJ,EAAOsJ,UAErBuC,MAAM,CACFX,SAAUlL,EAAOkL,SACjBC,IAAKnL,EAAOmL,IACZC,MAAOpL,EAAOoL,MACdC,KAAMrL,EAAOqL,KACbC,UAAWtL,EAAOsL,UAClBC,GAAIvL,EAAOuL,KAGnBtL,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,qBAAwC,CACzCmC,OAAQ,OACRC,QAAS,CACPmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEjBZ,KAAMC,KAAKC,UAAUqL,KAExBpL,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH6J,GAASD,OAwDbpJ,SApDa,SAAClB,GAEd,IAAImB,EAAS,GA4Cb,OA1CInB,EAAOyL,YACPtK,EAAOsK,UAAY,2BAEnBzL,EAAO0L,OACPvK,EAAOuK,KAAO,mCAEd1L,EAAO8K,MACP3J,EAAO2J,IAAM,gCAEb9K,EAAO+K,WACP5J,EAAO4J,SAAW,gCAElB/K,EAAOgL,0BACP7J,EAAO6J,wBAA0B,mCAEjChL,EAAOiL,KACP9J,EAAO8J,GAAK,0BAEZjL,EAAOkL,WACP/J,EAAO+J,SAAW,gCAElBlL,EAAOmL,MACPhK,EAAOgK,IAAM,2BAEbnL,EAAOoL,QACPjK,EAAOiK,MAAQ,6BAEfpL,EAAOqL,OACPlK,EAAOkK,KAAO,4BAEdrL,EAAOsL,YACPnK,EAAOmK,UAAY,iCAEnBtL,EAAOuL,KACPpK,EAAOoK,GAAK,0BAEZvL,EAAOqJ,aACPlI,EAAOkI,WAAa,4BAEpBrJ,EAAOsJ,WACPnI,EAAOmI,SAAW,0BAEfnI,KASX,OACI,gCACI,cAAC0I,GAAD,CAAkBiC,UAAU,OAAOC,MAAM,iBAAzC,SACI,qBAAKtO,UAAWR,EAAM+O,WAAY,IAAM,kBAAxC,SACI,sBAAKvO,UAAWR,EAAM+O,WAAY,cAAgB,+BAAgC7H,QArO1D,WACjClH,EAAM+O,aACL/O,EAAMgP,KACN5O,GAAQ,GACR4M,EAAUuB,KAiOF,UACI,mBAAG/N,UAAWR,EAAM+O,WAAW,yBAA2B,uBAA1D,yBACA,cAAC,KAAD,CAAiBvO,UAAWR,EAAM+O,WAAW,oBAAoB,6CAI7E,eAACxO,EAAA,EAAD,CACIJ,KAAMA,EACN4M,OAAQA,EACRvM,UAAU,0BAHd,UAKK,qBAAKA,UAAU,4BAAf,SACG,cAACyO,GAAA,EAAD,CAAaxJ,GAAG,sBAAhB,SACI,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAY0G,QAASL,EAApC,SACI,cAAC,KAAD,CAAerG,UAAU,uBAIrC,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,aAAf,SACI,sBAAMA,UAAU,OAAhB,oDAGR,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACK3E,EAAMkP,SACP,qBAAK1O,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,KAAD,CAAYA,UAAU,eACrB0G,QAAS,SAACiI,GAAD,OAtI9C,SAAwBA,GACpBA,EAAEC,iBACF9B,GAASD,GAoIwCgC,CAAeF,IAC/BtO,MAAOwM,EAAO,UAAY,SAIhC,cAKnB,cAACiC,GAAA,EAAD,CAAeC,SAAqB,UAAXxC,EAAzB,SACI,uBAAMjK,SAAUL,EAAOyC,aAAvB,UACI,eAACsK,GAAA,EAAD,CAAmBhP,UAAU,OAA7B,UACI,eAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,gBACNC,KAAK,OACLC,KAAK,eACLC,GAAG,eACH/E,MAAO,sBAAwB+E,EAC/BM,WAAY,CACRuC,UAAU,OAItB,eAAClE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,0BACNC,KAAK,OACLC,KAAK,YACLC,GAAG,YACHK,aAAa,MACb2J,SAAUpC,EACV3H,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOyL,YAExB/L,EAAO0D,QAAQqI,WAAa/L,EAAOyB,OAAOsK,UAAY,qBAAKhO,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOsK,YAAmB,WAGxH,eAACpK,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,aAAf,0CAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,kCACNC,KAAK,SACLC,KAAK,OACLM,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAO0L,KACrB/I,SAAU,SAACyJ,GAxS/C,IAActF,EAyS0BpH,EAAOkD,aAAawJ,IAzS9CtF,EA0S+BsF,GAzS/BO,OAAOhP,OAAS,KAAImJ,EAAM6F,OAAOhP,OAAS,IAChDmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,OAAQ3D,EAAM6F,OAAOhP,QAySVkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQsI,MAAQhM,EAAOyB,OAAOuK,KAAO,qBAAKjO,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOuK,OAAc,WAGzG,eAACrK,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,YAAf,qCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,+BACNC,KAAK,SACLC,KAAK,MACLC,GAAG,UACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAO8K,IACrBnI,SAAU,SAACyJ,GA7T/C,IAAatF,EA8T2BpH,EAAOkD,aAAawJ,IA9T/CtF,EA+T+BsF,GA9T9BO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,MAAO3D,EAAM6F,OAAOhP,QA8TTkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQ0H,KAAOpL,EAAOyB,OAAO2J,IAAM,qBAAKrN,UAAU,QAAf,SAAwBiC,EAAOyB,OAAO2J,MAAa,WAGtG,eAACzJ,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,qCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,+BACNC,KAAK,SACLC,KAAK,WACLC,GAAG,eACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAO+K,SACrBpI,SAAU,SAACyJ,GAlV/C,IAAkBtF,EAmVsBpH,EAAOkD,aAAawJ,IAnV1CtF,EAoV+BsF,GAnVnCO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,WAAY3D,EAAM6F,OAAOhP,QAmVdkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQ2H,UAAYrL,EAAOyB,OAAO4J,SAAW,qBAAKtN,UAAU,QAAf,SAAwBiC,EAAOyB,OAAO4J,WAAkB,WAGrH,eAAC1J,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,oBAAf,sCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,kCACNC,KAAK,SACLC,KAAK,0BACLC,GAAG,8BACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOgL,wBACrBrI,SAAU,SAACyJ,GAvW/C,IAAiCtF,EAwWOpH,EAAOkD,aAAawJ,IAxW3BtF,EAyW+BsF,GAxWlDO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,KAAImJ,EAAM6F,OAAOhP,MAAQ,IAClD+B,EAAO+K,cAAc,0BAA2B3D,EAAM6F,OAAOhP,QAwW7BkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQ4H,yBAA2BtL,EAAOyB,OAAO6J,wBAA0B,qBAAKvN,UAAU,QAAf,SAAwBiC,EAAOyB,OAAO6J,0BAAiC,WA6BlK,eAAC3J,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,qCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,+BACNC,KAAK,SACLC,KAAK,WACLC,GAAG,WACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOkL,SACrBvI,SAAU,SAACyJ,GAhZ/C,IAAkBtF,EAiZsBpH,EAAOkD,aAAawJ,IAjZ1CtF,EAkZ+BsF,GAjZnCO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,WAAY3D,EAAM6F,OAAOhP,QAiZdkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQ8H,UAAYxL,EAAOyB,OAAO+J,SAAW,qBAAKzN,UAAU,QAAf,SAAwBiC,EAAOyB,OAAO+J,WAAkB,WAGrH,eAAC7J,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,gCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,0BACNC,KAAK,SACLC,KAAK,MACLC,GAAG,MACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOmL,IACrBxI,SAAU,SAACyJ,GAra/C,IAAatF,EAsa2BpH,EAAOkD,aAAawJ,IAta/CtF,EAua+BsF,GAta9BO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,MAAO3D,EAAM6F,OAAOhP,QAsaTkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQ+H,KAAOzL,EAAOyB,OAAOgK,IAAM,qBAAK1N,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOgK,MAAa,WAGtG,eAAC9J,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,kCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,4BACNC,KAAK,SACLC,KAAK,QACLC,GAAG,QACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOoL,MACrBzI,SAAU,SAACyJ,GA1b/C,IAAetF,EA2byBpH,EAAOkD,aAAawJ,IA3b7CtF,EA4b+BsF,GA3bhCO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,QAAS3D,EAAM6F,OAAOhP,QA2bXkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQgI,OAAS1L,EAAOyB,OAAOiK,MAAQ,qBAAK3N,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOiK,QAAe,WAG5G,eAAC/J,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,iCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,2BACNC,KAAK,SACLC,KAAK,OACLC,GAAG,OACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOqL,KACrB1I,SAAU,SAACyJ,GA/c/C,IAActF,EAgd0BpH,EAAOkD,aAAawJ,IAhd9CtF,EAid+BsF,GAhd/BO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,OAAQ3D,EAAM6F,OAAOhP,QAgdVkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQiI,MAAQ3L,EAAOyB,OAAOkK,KAAO,qBAAK5N,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOkK,OAAc,WAGzG,eAAChK,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,sCAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,gCACNC,KAAK,SACLC,KAAK,YACLC,GAAG,YACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOsL,UACrB3I,SAAU,SAACyJ,GApe/C,IAAmBtF,EAqeqBpH,EAAOkD,aAAawJ,IArezCtF,EAse+BsF,GArepCO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,YAAa3D,EAAM6F,OAAOhP,QAqefkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQkI,WAAa5L,EAAOyB,OAAOmK,UAAY,qBAAK7N,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOmK,YAAmB,WAGxH,eAACjK,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,+BAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,yBACNC,KAAK,SACLC,KAAK,KACLC,GAAG,KACHK,aAAa,MACb2J,SAAUpC,EACV3M,MAAO+B,EAAOM,OAAOuL,GACrB5I,SAAU,SAACyJ,GAzf/C,IAAYtF,EA0f4BpH,EAAOkD,aAAawJ,IA1fhDtF,EA2f+BsF,GA1f7BO,OAAOhP,MAAQ,IAAGmJ,EAAM6F,OAAOhP,MAAQ,GAC7CmJ,EAAM6F,OAAOhP,MAAQ,MAAKmJ,EAAM6F,OAAOhP,MAAQ,KACnD+B,EAAO+K,cAAc,KAAM3D,EAAM6F,OAAOhP,QA0fRkF,OAAQnD,EAAOoD,WACf8J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oBAEnE3M,EAAO0D,QAAQmI,IAAM7L,EAAOyB,OAAOoK,GAAK,qBAAK9N,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOoK,KAAY,WAGnG,eAAClK,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,2BAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTE,KAAK,OACLC,KAAK,aACLC,GAAG,aACHK,aAAa,MACb2J,SAAUpC,EACV3H,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOqJ,aAExB3J,EAAO0D,QAAQiG,YAAc3J,EAAOyB,OAAOkI,WAAa,qBAAK5L,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOkI,aAAoB,WAG3H,eAAChI,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,cAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,iBAAf,yBAIJ,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTE,KAAK,OACLC,KAAK,WACLC,GAAG,WACHK,aAAa,MACb2J,SAAUpC,EACV3H,SAAUjD,EAAOkD,aACjBC,OAAQnD,EAAOoD,WACfnF,MAAO+B,EAAOM,OAAOsJ,WAExB5J,EAAO0D,QAAQkG,UAAY5J,EAAOyB,OAAOmI,SAAW,qBAAK7L,UAAU,QAAf,SAAwBiC,EAAOyB,OAAOmI,WAAkB,eAIvHgB,GACF,cAACwC,GAAA,EAAD,CAAerP,UAAU,YAAzB,SACI,8BACI,cAACmG,EAAA,EAAD,CAAQpB,KAAK,SAASN,QAAQ,YAAYzE,UAAU,YAAY0G,QAASL,EAAzE,SACI,sBAAMrG,UAAU,kBAAhB,qC,+PCrrBTQ,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,iBACXoO,WAAY,gHASH,SAASC,GAA0B/P,GAAQ,IAAD,EAE7BC,IAAMC,UAAS,GAFc,mBAE9CC,EAF8C,KAExCC,EAFwC,OAIzBH,IAAMC,SAAS,SAJU,mBAI9C6M,EAJ8C,KAM/CE,GAN+C,KAMvBhN,IAAMiN,OAAO,OAO3C7M,qBAAU,WACND,EAAQJ,EAAMG,QAChB,CAACH,EAAMG,OAETF,IAAMI,WAAU,WACZ,GAAIF,EAAM,CAAC,IACUsN,EAAuBR,EAAhCS,QACmB,OAAvBD,GACAA,EAAmBE,WAG5B,CAACxN,IAGA,IADJ,IAAI6P,EAAmBC,SAASC,iBAAiB,sBACpCC,EAAI,EAAGA,EAAIH,EAAiB/H,OAAQkI,IACzCH,EAAiBG,GAAGC,QAAU,SAAUtJ,GACxCA,EAAM4I,OAAOW,QAIrB,OACI,8BACI,eAAC9P,EAAA,EAAD,CACIJ,KAAMH,EAAMmL,UACZ4B,OAAQA,EACRvM,UAAU,0BAHd,UAKK,qBAAKA,UAAU,4BAAf,SACG,cAACyO,GAAA,EAAD,CAAaxJ,GAAG,sBAAhB,SACI,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAY0G,QArCvC,WAEhBlH,EAAMsQ,cAAa,IAmCS,SACI,cAAC,KAAD,CAAe9P,UAAU,uBAIrC,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,aAAf,SACI,sBAAMA,UAAU,OAAhB,oDAMpB,cAAC8O,GAAA,EAAD,CAAeC,SAAqB,UAAXxC,EAAzB,SACI,+BACI,cAACyC,GAAA,EAAD,CAAmBhP,UAAU,OAA7B,SACI,eAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACL+K,aAAa,IACb9K,GAAG,SACHK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACH8K,aAAa,IACbzK,aAAa,MACbC,WAAY,CACRuC,UAAU,GAEdqH,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,oC,WC1blG7C,GAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,sBAIjB,SAASkL,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGjE,IAAMwQ,GAAaxP,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACF8I,WAAY,EACZtB,WAAYzH,EAAMK,QAAQ,UAIlC,SAASmP,GAAuBzQ,GAE5B,IAAMqC,EAAUmO,KAEVvP,EAAQyP,eACNC,EAA2C3Q,EAA3C2Q,MAAOC,EAAoC5Q,EAApC4Q,KAAMC,EAA8B7Q,EAA9B6Q,YAAaC,EAAiB9Q,EAAjB8Q,aAkBlC,OACI,sBAAKtQ,UAAW6B,EAAQnB,KAAxB,UACI,cAAC6P,GAAA,EAAD,CACI7J,QAnBuB,SAACJ,GAChCgK,EAAahK,EAAO,IAmBZ2I,SAAmB,IAATmB,EACVI,aAAW,aAHf,SAKyB,QAApB/P,EAAMgQ,UAAsB,cAAC,KAAD,IAAmB,cAAC,KAAD,MAEpD,cAACF,GAAA,EAAD,CAAY7J,QArBU,SAACJ,GAC3BgK,EAAahK,EAAO8J,EAAO,IAoBqBnB,SAAmB,IAATmB,EAAYI,aAAW,gBAA7E,SACyB,QAApB/P,EAAMgQ,UAAsB,cAAC,KAAD,IAAyB,cAAC,KAAD,MAE1D,cAACF,GAAA,EAAD,CACI7J,QArBkB,SAACJ,GAC3BgK,EAAahK,EAAO8J,EAAO,IAqBnBnB,SAAUmB,GAAQM,KAAKC,KAAKR,EAAQE,GAAe,EACnDG,aAAW,YAHf,SAKyB,QAApB/P,EAAMgQ,UAAsB,cAAC,KAAD,IAAwB,cAAC,KAAD,MAEzD,cAACF,GAAA,EAAD,CACI7J,QAxBsB,SAACJ,GAC/BgK,EAAahK,EAAOoK,KAAKE,IAAI,EAAGF,KAAKC,KAAKR,EAAQE,GAAe,KAwBzDpB,SAAUmB,GAAQM,KAAKC,KAAKR,EAAQE,GAAe,EACnDG,aAAW,YAHf,SAKyB,QAApB/P,EAAMgQ,UAAsB,cAAC,KAAD,IAAoB,cAAC,KAAD,SAajE,SAASI,GAAYC,EAAO1D,EAAaC,EAAKC,EAAUyD,EAAaC,EAAIvD,EAAUC,EAAKG,EAAWF,EAAOG,EAAImD,EAAaC,GACvH,MAAO,CAAGJ,QAAO1D,cAAaC,MAAKC,WAAUyD,cAAaC,KAAIvD,WAAUC,MAAKG,YAAWF,QAAOG,KAAImD,cAAaC,YAGpH,IAAMC,GAAO,CACTN,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,EAAG,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC1J6Q,GAAW,GAAI,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC3J6Q,GAAW,GAAI,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,mBAC3J6Q,GAAW,GAAI,UAAW,MAAO,MAAO,EAAG,EAAG,MAAO,MAAO,MAAO,MAAO,MAAO,cAAC,KAAD,CAAgB7Q,UAAU,kBAAmB,cAAC,KAAD,CAAmBA,UAAU,oBAC7JoR,MAAK,SAACzB,EAAG0B,GAAJ,OAAW1B,EAAE2B,SAAWD,EAAEC,UAAY,EAAI,KAElC,SAASC,GAAqB/R,GAAQ,IAAD,EAExBC,IAAMC,UAAS,GAFS,mBAEzCC,EAFyC,KAEnCC,EAFmC,OAIpBH,IAAMC,SAAS,SAJK,mBAIzC6M,EAJyC,KAIjCC,EAJiC,KAM1CC,EAAwBhN,IAAMiN,OAAO,MANK,EAQdhN,oBAAS,GARK,mBAQzCiL,EARyC,KAQ9BmF,EAR8B,KAyBhDjQ,qBAAU,WACND,EAAQJ,EAAMG,QAChB,CAACH,EAAMG,OAETF,IAAMI,WAAU,WACZ,GAAIF,EAAM,CAAC,IACUsN,EAAuBR,EAAhCS,QACmB,OAAvBD,GACAA,EAAmBE,WAG5B,CAACxN,IApC4C,MAsCxBF,IAAMC,SAAS,GAtCS,mBAsCzC0Q,EAtCyC,KAsCnCoB,EAtCmC,OAwCV/R,IAAMC,SAAS,GAxCL,mBAwCzC2Q,EAxCyC,KAwC5BoB,EAxC4B,KA0C1CC,EAAYrB,EAAcK,KAAKiB,IAAItB,EAAac,GAAK1J,OAAS2I,EAAOC,GAW3E,OACI,gCACI,cAAC,GAAD,CAAkBhC,UAAU,OAAOC,MAAM,iBAAzC,SACI,qBAAKtO,UAAWR,EAAM+O,WAAY,IAAM,WAAxC,SACI,sBAAKvO,UAAWR,EAAM+O,WAAY,+BAAiC,yCAA0C7H,QA1CrF,WACjClH,EAAM+O,YACL3O,GAAQ,IAwCA,UACI,mBAAGI,UAAWR,EAAM+O,WAAW,+BAAiC,gBAAhE,kBACA,cAAC,KAAD,CAAevO,UAAWR,EAAM+O,WAAW,kBAAkB,oCAIzE,eAACxO,EAAA,EAAD,CACIJ,KAAMA,EACN4M,OAAQA,EACRvM,UAAU,cAHd,UAKK,qBAAKA,UAAU,4BAAf,SACG,cAACyO,GAAA,EAAD,CAAaxJ,GAAG,sBAAhB,SACI,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAY0G,QApDvC,WAChB9G,GAAQ,IAmDoB,SACI,cAAC,KAAD,CAAeI,UAAU,uBAIrC,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,aAAf,SACI,sBAAMA,UAAU,OAAhB,uEAMpB,cAAC8O,GAAA,EAAD,CAAeC,SAAqB,UAAXxC,EAAzB,SACI,cAACqF,GAAA,EAAD,CAAgB9N,UAAWO,IAA3B,SACI,eAACwN,GAAA,EAAD,CAAOrB,aAAW,0BAAlB,UACI,cAACsB,GAAA,EAAD,CAAW9R,UAAU,mBAArB,SACI,eAAC+R,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,eACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,yBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,iBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,sBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,yBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,gBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,sBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,iBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,uBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,mBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,gBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,yBACA,cAACgS,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,OAApC,2BAGR,eAACkS,GAAA,EAAD,YACM7B,EAAc,EACVc,GAAKgB,MAAM/B,EAAOC,EAAaD,EAAOC,EAAcA,GACpDc,IACJ/F,KAAI,SAACgH,GAAD,OACF,eAACL,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWlO,UAAU,KAAKuO,MAAM,MAAMrS,UAAU,wBAAhD,SACKoS,EAAItB,QAET,cAACkB,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAIhF,cAET,cAAC4E,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAI/E,MAET,cAAC2E,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAI9E,WAET,cAAC0E,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAIrB,cAET,cAACiB,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAIpB,KAET,cAACgB,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAI3E,WAET,cAACuE,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAI1E,MAET,cAACsE,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAIvE,YAET,cAACmE,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAIzE,QAET,cAACqE,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACKoS,EAAItE,KAET,cAACkE,GAAA,EAAD,CAAWC,MAAM,SAASjS,UAAU,wBAApC,SACI,qBAAK0G,QAxIJ,WACrCoJ,GAAa,GACbtD,EAAUuB,IAsI0B,SACKqE,EAAInB,gBAGb,cAACe,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACKG,EAAIlB,aAxCEkB,EAAItB,OArG1B,IAAC/C,KAiJG2D,EAAY,GACT,cAACK,GAAA,EAAD,CAAUO,MAAO,CAAE3R,OAAQ,GAAK+Q,GAAhC,SACI,cAACM,GAAA,EAAD,CAAWO,QAAS,UAIhC,cAACC,GAAA,EAAD,UACI,cAACT,GAAA,EAAD,CAAU/R,UAAU,OAApB,SACI,cAACyS,GAAA,EAAD,CACAC,mBAAoB,CAAC,EAAG,GAAI,CAAE5N,MAAO,MAAO5E,OAAQ,IACpDiQ,MAAOgB,GAAK1J,OACZ4I,YAAaA,EACbD,KAAMA,EACNuC,YAAa,CACTrJ,WAAY,CAAE,aAAc,iBAC5BsJ,QAAQ,GAEZtC,aAhIP,SAAChK,EAAOuM,GAC7BrB,EAAQqB,IAgIoBC,oBA7HA,SAACxM,GAC7BmL,EAAesB,SAASzM,EAAM4I,OAAOhP,MAAO,KAC5CsR,EAAQ,IA4HoBwB,iBAAkB/C,mBAQ1C,cAACV,GAAD,CAA2B5E,UAAWA,EAAWmF,aAAcA,O,mEC9SrE/D,I,OAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,uBAIjB,SAASkL,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAASyT,GAAgBzT,GAAQ,IAAD,EAEHE,mBAAS,IAFN,mBAEtBwT,GAFsB,aAInBzT,IAAMC,UAAS,GAJI,mBAIpCC,EAJoC,KAI9BC,EAJ8B,KAY3CC,qBAAU,WACND,EAAQJ,EAAMG,QAChB,CAACH,EAAMG,OAsCT,OACI,gCACI,cAAC,GAAD,CAAkBK,UAAU,OAAOsO,MAAM,wBAAzC,SACI,qBAAKtO,UAAWR,EAAM+O,WAAY,IAAM,cAAxC,SACI,sBAAKvO,UAAWR,EAAM+O,WAAY,eAAiB,4BAA6B7H,QAlDxD,WACjClH,EAAM+O,YACL3O,GAAQ,IAgDA,UACI,mBAAGI,UAAWR,EAAM+O,WAAW,mBAAqB,mBAApD,oBACA,cAAC,KAAD,CAAYvO,UAAWR,EAAM+O,WAAW,eAAe,oCAInE,eAACxO,EAAA,EAAD,CACIJ,KAAMA,EACNQ,kBAAgB,qBAChBgT,mBAAiB,2BAHrB,UAKI,cAAC1E,GAAA,EAAD,CAAaxJ,GAAG,qBAAhB,SACI,mBAAGjF,UAAU,mBAAb,2DAEJ,qBAAKA,UAAU,qBAGf,eAACqP,GAAA,EAAD,CAAerP,UAAU,gBAAzB,UACI,sBAAMA,UAAU,aAAa0G,QAAS,YAtDtD,WACIlH,EAAMwC,WAAU,GAChB,IAAIuB,EAAQF,aAAaoH,QAAQ,SAC7BC,EAAerH,aAAaoH,QAAQ,cACpC2I,EAAiB,CAAE,aAAiB1I,GACxClI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,qBAAwC,CACzCmC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBoI,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAUuQ,KAExBtQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACCA,EAAQoQ,KACR7T,EAAMwC,WAAU,GAChBxC,EAAM8T,cAAc,IACpB9T,EAAM8T,cAAc5I,GACpBlL,EAAM+T,cAAc,IACpB/T,EAAM+T,eAAc,GACpBlQ,aAAamQ,WAAW,cACxBhU,EAAM+T,cAAc,IACpB3T,GAAQ,GACR6T,OAAOlM,SAASmM,UAEhBR,EAAgBjQ,EAAQC,UA2BwByQ,IAA5C,SACI,cAAC,KAAD,MAEJ,sBAAM3T,UAAU,YAAY0G,QA7DxB,WAChB9G,GAAQ,IA4DI,SACI,cAAC,KAAD,e,yBC9FlBmM,I,OAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,uBAIjB,SAASkL,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAASoU,GAAWpU,GAAQ,IAAD,EAEdC,IAAMC,UAAS,GAFD,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAUtCC,qBAAU,WACND,EAAQJ,EAAMG,QAChB,CAACH,EAAMG,OAoBT,SAASkU,IACL,IAAItQ,EAAQF,aAAaoH,QAAQ,SAC7BqJ,EAAazQ,aAAaoH,QAAQ,cAElCsJ,EAAY,CACZ,WAAc,CACV,aAAgBD,EAChB,YAAetU,EAAM+O,WAAWnB,YAChC,IAAO5N,EAAM+O,WAAWlB,IACxB,SAAY7N,EAAM+O,WAAWjB,SAC7B,wBAA2B9N,EAAM+O,WAAWhB,wBAC5C,GAAM/N,EAAM+O,WAAWf,IAE3B,MAAS,CACL,aAAgBsG,EAChB,SAAYtU,EAAM+O,WAAWd,SAC7B,IAAOjO,EAAM+O,WAAWb,IACxB,MAASlO,EAAM+O,WAAWZ,MAC1B,KAAQnO,EAAM+O,WAAWX,KACzB,UAAapO,EAAM+O,WAAWV,UAC9B,GAAMrO,EAAM+O,WAAWT,IAE3B,MAAQ,CACJ,OAAUtO,EAAM+O,WAAWhM,QAI/B,cAAiB/C,EAAMqU,QAAQG,eAInC3Q,aAAaC,QAAQ,gBAAiB9D,EAAMqU,QAAQG,eACpDxR,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,eAAkC,CACnCmC,OAAQ,OACRC,QAAS,CACPmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAGjBZ,KAAMC,KAAKC,UAAUkR,KAExBjR,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACPzD,EAAMyU,YAAYF,EAAYC,eAC9BxU,EAAM0U,cAAa,GACnB1U,EAAM2U,eAAc,GACpB3U,EAAM4U,iBAAgB,MAK1B,OACI,gCACI,cAAC,GAAD,CAAkB/F,UAAU,OAAOC,MAAM,cAAzC,SACI,qBAAKtO,UAAWR,EAAM+O,WAAY,IAAM,WAAxC,SACI,sBAAKvO,UAAWR,EAAM+O,WAAY,YAAc,sBAAuB7H,QApF/C,WACjClH,EAAM+O,YACL3O,GAAQ,IAkFA,UACI,mBAAGI,UAAWR,EAAM+O,WAAW,sBAAwB,gBAAvD,iBACA,cAAC,KAAD,CAAiBvO,UAAWR,EAAM+O,WAAW,mBAAmB,sCAI5E,eAACxO,EAAA,EAAD,CACIJ,KAAMA,EACNQ,kBAAgB,qBAChBgT,mBAAiB,2BAHrB,UAKI,cAAC1E,GAAA,EAAD,CAAaxJ,GAAG,qBAAhB,SACI,mBAAGjF,UAAU,mBAAb,gDAEJ,eAACqP,GAAA,EAAD,CAAerP,UAAU,gBAAzB,UACI,sBAAMA,UAAU,aAAa0G,QAAS,WAhFlD9G,GAAQ,GACIJ,EAAMqU,QACb,cAAoB,OACzBA,IACArU,EAAMyU,aAAY,IA4EN,SACI,cAAC,KAAD,MAEJ,sBAAMjU,UAAU,YAAY0G,QA5FxB,WAChB9G,GAAQ,GACR,IAAIyU,EAAQ7U,EAAMqU,QAClBQ,EAAK,cAAoB,QACzBR,KAwFY,SACI,cAAC,KAAD,e,4GClHlBtT,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACTG,OAAQJ,EAAMK,QAAQ,KAG1BuI,MAAO,CACHtI,QAAS,aAIXgL,GAAqBvL,aAAW,SAACC,GAAD,MAAY,CAChDuL,MAAO,CACD3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAEhCC,QAAS,CACL7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,sBAInB,SAASkL,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAAS8U,GAAc9U,GAAQ,IAAD,IAEnCqC,EAAUtB,KAEZhB,EAAUgV,EAAQ,KAJmB,EAMT7U,qBANS,mBAMlC8U,EANkC,KAMxBC,EANwB,OAQL/U,oBAAS,GARJ,mBAQlCgV,EARkC,KAQtBC,EARsB,OAUjBlV,IAAMC,UAAS,GAVE,mBAUlCC,EAVkC,KAU5BC,EAV4B,OAYbH,IAAMC,SAAS,SAZF,mBAYlC6M,EAZkC,KAY1BC,EAZ0B,KAcnCC,EAAwBhN,IAAMiN,OAAO,MAdF,EAgBnBhN,mBAAS,MAhBU,mBAgBlCkV,EAhBkC,KAgB7BC,EAhB6B,OAkBXnV,mBAAS,MAlBE,mBAkBzBoV,GAlByB,WAoBnCC,EAAOrI,iBAAO,MApBqB,EAsBXhN,mBAAS,IAtBE,gCAwBGA,oBAAS,IAxBZ,mBAwBlCsV,EAxBkC,KAwBlBC,EAxBkB,OA0BfxV,IAAMC,SAAS,GA1BA,mBA0BlCQ,EA1BkC,KA0B3BgV,EA1B2B,OA4BPxV,mBAAS,IA5BF,mBA4BlCyV,EA5BkC,KA4BvBC,GA5BuB,QA8BT3V,IAAMC,SAAS,GA9BN,qBA8BlC2V,GA9BkC,MA8BxBC,GA9BwB,SAgCnB5V,qBAhCmB,qBAgC7B6V,IAhC6B,gBAkCL7V,oBAAS,GAlCJ,qBAkCtB8V,IAlCsB,gBAoCT9V,oBAAS,GApCA,qBAoClC+V,GApCkC,MAoCxBC,GApCwB,SAsCDhW,oBAAS,GAtCR,qBAsClCiW,GAtCkC,MAsCpBC,GAtCoB,SAwCDlW,oBAAS,GAxCR,qBAwClCmW,GAxCkC,MAwCpBC,GAxCoB,MAqDzCrW,IAAMI,WAAU,WACZ,IAAMkW,EAAQC,aAAY,WAC1BV,IAAY,SAACW,GAAD,OACRA,GAAgB,IAAM,EAAIA,EAAe,QAE1C,KAEH,OAAO,WACHC,cAAcH,MAEnB,IAEHlW,qBAAU,WACD6U,GACDD,EAKG/D,KAAKyF,MAAsB,IAAhBzF,KAAK0F,UAAoB,OAH5C,CAAC1B,IAMJ,IAAI2B,GAAQ,IAAIC,OAAO,gBAEvB,SAASC,GAAgB5H,GACrB,IAAI6H,EAAczB,EAAK7H,QAAQuJ,MAAM,GACrC3B,EAAW0B,GAECH,GAAM1S,KAAK6S,GAAeA,EAAYxR,OAE9C6P,EAAO2B,EAAYxR,MACnBoQ,GAAa,KACNoB,IACP3B,EAAO,IACPO,GAAa,kCAIrB,SAASsB,KACD3B,GAAQA,EAAK7H,UACb6H,EAAK7H,QAAQhN,MAAQ,GACrB2U,EAAO,OAIf,IAAyB9G,GA8BzB,SAAS4I,GAAWhI,GAChB4G,GAAO5G,EAAEO,OAAOhP,OAuBpB,OAjCAT,IAAMI,WAAU,WACZ,GAAIF,EAAM,CAAC,IACMsN,EAAuBR,EAAhCS,QACmB,OAAvBD,GACAA,EAAmBE,WAGxB,CAACxN,IA2BA,gCACI,cAAC,GAAD,CAAkB0O,UAAU,OAAOC,MAAM,yBAAzC,SACI,sBAAKtO,UAAU,uBAAuB0G,QAzDV,WACpC9G,GAAQ,GACR4M,EAAUuB,KAuDF,UACI,mBAAG/N,UAAU,uBAAb,uBACA,cAAC,KAAD,CAAeA,UAAU,wBAGjC,eAACD,EAAA,EAAD,CAAQJ,KAAMA,EAAM4M,OAAQA,EAAQvM,UAAU,wBAA9C,UACI,qBAAKA,UAAU,mBAAf,SACI,cAACyO,GAAA,EAAD,CAAaxJ,GAAG,sBAAhB,SACI,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACM6Q,GACE,qBAAKhV,UAAU,2BAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,mCACI,cAAC,KAAD,CACAA,UAAU,oBACV0G,QAAS,kBAtC7CiP,IACAe,UACAd,IAAgB,IAGhBH,IACAiB,UACAhB,IAAY,SAGXV,GACDC,GAAkB,eAkCF,cAACrR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,SACI,sBAAMA,UAAU,OAAhB,yCAGR,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,0BAAf,SACI,qBAAKA,UAAU,kBAAkB0G,QAAS,kBAzEtE9G,GAAQ,GACR8W,KACAzB,GAAkB,GAClBS,IAAY,QACZE,IAAgB,IAqEY,SACI,cAAC,KAAD,CAAgB5V,UAAU,uCAOlD,cAAC8O,GAAA,EAAD,CAAeC,SAAqB,UAAXxC,EAAzB,SACI,eAACyC,GAAA,EAAD,CAAmBhP,UAAU,OAA7B,UACKgV,GACG,eAACpR,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,WAA3C,SACI,8BACI,uBAAO4W,QAAQ,wBAAwBlQ,QAAS,WAAOuO,GAAmBD,GAAiBc,GAAgB,cAA3G,SACI,cAAC3P,EAAA,EAAD,CAAQ1B,QAAQ,YAAYzE,UAAU,iBAAtC,SACI,sBAAMA,UAAU,OAAhB,mCAKhB,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,WAA3C,SACI,8BACI,uBAAO4W,QAAQ,wBAAwBlQ,QAAS,WAAOuO,GAAmBD,GAC1Ec,GAAgB,SADhB,SAEI,cAAC3P,EAAA,EAAD,CAAQ1B,QAAQ,YAAYzE,UAAU,iBAAtC,SACI,sBAAMA,UAAU,OAAhB,kCAOtBgV,IAAmBS,IACjB,eAAC7R,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,WAA3C,SACI,8BACI,uBAAO4W,QAAQ,wBAAwBlQ,QAAS,WAtHhFgP,IAAY,GACZf,GAAc,GACdxR,YAAW,WACXwR,GAAc,KACX,MAkH6B,SACI,cAACxO,EAAA,EAAD,CAAQ1B,QAAQ,YAAYzE,UAAU,iBAAtC,SACI,sBAAMA,UAAU,OAAhB,0BAKhB,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,WAA3C,SACI,8BACI,uBAAO4W,QAAQ,wBAAf,SACI,cAACzQ,EAAA,EAAD,CAAQ1B,QAAQ,YAAYzE,UAAU,iBAAtC,SACI,sBAAMA,UAAU,OAAhB,+BAOxB,sBAAKA,UAAU,YAAf,UACKyV,IAAYf,GACT,qCACI,qBAAK1U,UAAU,qBAAf,SACI,mBAAGA,UAAU,OAAb,yCAEJ,qBAAKA,UAAU,mBAAf,SACI,cAACT,EAAD,CAASyF,KAAK,wBAAwB9E,MAAOmV,GAAUrV,UAAU,cAI7E,sBAAKA,UAAU,YAAf,UACKyV,KAAaf,GACV,mCACI,eAAC9Q,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,oBAA3C,SACI,mBAAGA,UAAU,wBAAb,iCAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTE,KAAK,OACLC,KAAK,oBACLC,GAAG,KACHjF,UAAU,iBACVE,MAAOsU,QAID,cAAjBqB,IACG,qCACI,cAACjS,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,oBAA3C,SACI,mBAAGA,UAAU,wBAAb,yCAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTE,KAAK,SACLC,KAAK,cACLC,GAAG,cACHC,SAAU,SAACyJ,GAAQgI,GAAWhI,IAC9B3O,UAAU,iBACVsF,aAAa,MACb6J,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,gCAS9E,SAAjBiH,KAA4BnB,GAAce,IACvC,mCACI,eAAC7R,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,oBAA3C,SACI,mBAAGA,UAAU,wBAAb,kCAEJ,qBAAKA,UAAU,aAAf,SACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTE,KAAK,OACLC,KAAK,cACLC,GAAG,cACHC,SAAU,SAACyJ,GACPgI,GAAWhI,IAEf3O,UAAU,iBACVsF,aAAa,YAIzB,cAAC1B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,oBAA3C,SACI,mBAAGA,UAAU,wBAAb,iCAEJ,sBAAKA,UAAU,aAAf,UACI,0BACI6W,OAAO,QACP7W,UAAW6B,EAAQwH,MACnBpE,GAAG,wBACH6R,UAAQ,EACRC,IAAKhC,EACLhQ,KAAK,QANT,uBAOW,QAPX,0BAQc,SAAC4J,GACP4H,QATR,IAYA,uBAAOK,QAAQ,wBAAf,SACI,cAACzQ,EAAA,EAAD,CAAQ1B,QAAQ,YAAYpE,MAAM,UAAUyD,UAAU,OAAtD,8BAQnB2R,KAAaf,IAAeiB,IACzB,mCACI,eAAC/R,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,WAA3C,SACI,cAACmG,EAAA,EAAD,CAAS1B,QAAQ,YAAazE,UAAU,iBAAxC,SACI,sBAAMA,UAAU,OAAhB,uBAGR,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGnE,UAAU,WAA3C,SACI,8BACI,uBAAO4W,QAAQ,wBAAwBlQ,QAAS,WA5M5FkP,IAAgB,IA4M4B,SACI,cAACzP,EAAA,EAAD,CAAQ1B,QAAQ,YAAYzE,UAAU,iBAAtC,SACI,sBAAMA,UAAU,OAAhB,gCAQ3B2V,IACG,qCACI,qBAAK3V,UAAU,aAAf,SACI,cAACqE,EAAA,EAAD,CAAOE,QAAM,EAACvE,UAAU,YAAxB,SACI,eAACgX,GAAA,EAAD,CACI9W,MAAOA,EACPgF,SAvU3B,SAACoB,EAAO2Q,GACR,IAAbA,EACAlC,EAAK7H,QAAQgK,QAEb1B,IAAc,GAElBN,EAAS+B,IAkUmCxS,QAAQ,YACR0S,eAAe,UACfC,UAAU,UACV5G,aAAW,0BACXxQ,UAAU,mBACV0G,QApU5B,SAACJ,KA4TuB,UAUI,cAAC+Q,GAAA,EAAD,CAAKvS,MAAM,SAAS9E,UAAU,iBAC9B,cAACqX,GAAA,EAAD,CAAKvS,MAAM,SAAS9E,UAAU,wBAI1C,qBAAKA,UAAU,iBAAf,SACI,sBAAMA,UAAU,aAAhB,SAA8BmV,MAEjCP,GACG,sBAAK5U,UAAU,cAAf,UACI,8BACI,cAAC,KAAD,CAAqBA,UAAU,2BAEnC,+BAAO4U,IACP,qBAAKlO,QAAS,WAAOgQ,MAArB,SACI,qBAAK1W,UAAU,aAAf,SACI,cAAC,KAAD,CAAmBA,UAAU,8BAK7C,qBAAKA,UAAU,aAAf,SACI,cAACmG,EAAA,EAAD,CACI1B,QAAQ,YADZ,SAII,sBAAMzE,UAAU,OAAhB,0BAKhB,0BACI6W,OAAO,QACP7W,UAAW6B,EAAQwH,MACnBpE,GAAG,wBACH6R,UAAQ,EACRC,IAAKhC,EACLhQ,KAAK,QANT,uBAOW,QAPX,0BAQc,SAAC4J,GACP4H,QATR,qB,yBClc1BxK,I,OAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,uBAIjB,SAASkL,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAAS8X,GAAO9X,GAAQ,IAAD,EAENC,IAAMC,UAAS,GAFT,mBAE3B6X,EAF2B,KAEnBC,EAFmB,OAIQ/X,IAAMC,UAAS,GAJvB,mBAI3B+X,EAJ2B,KAIZC,EAJY,OAMVjY,IAAMC,UAAS,GANL,mBAM3BC,EAN2B,KAMrBC,EANqB,KAQlCC,qBAAU,WACN,IAAI8X,EAAKtU,aAAaoH,QAAQ,iBACtB,SAALkN,EACCD,GAAiB,GACP,UAALC,GACLD,GAAiB,KAEvB,CAAClY,EAAMoY,WAET,IAAMzS,EAAe,WACjBqS,GAAWD,GACX3X,GAASD,IAGb,OACI,8BACI,cAAC,GAAD,CAAkB0O,UAAU,OAAOC,MAAM,iBAAzC,SACI,qBAAKtO,UAAWR,EAAM+O,WAAY,IAAM,cAAxC,SACKkJ,EACG,sBAAKzX,UAAU,eAAf,UACI,mBAAGA,UAAWR,EAAM+O,WAAW,0BAA4B,mBAA3D,oBACA,cAAC,KAAD,CAAWvO,UAAWR,EAAM+O,WAAW,cAAc,2BAA4B7H,QAAS,kBAAMvB,UAGpG,sBAAKnF,UAAU,eAAf,UACI,mBAAGA,UAAWR,EAAM+O,WAAW,yBAA2B,mBAA1D,oBACA,cAAC,KAAD,CAAWvO,UAAWR,EAAM+O,WAAW,aAAa,0BAA2B7H,QAAS,kBAAMvB,gB,WCpDpH5E,GAAYC,aAAW,SAACC,GAAD,OACzBsH,YAAa,CACT6B,QAAS,CACLC,SAAU,EACVlJ,OAAQ,QACRkX,SAAU,wBAKKrX,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,sBASF,SAAS4W,GAAUtY,GAE9BmH,QAAQC,IAAIpH,GACIe,KAEhB,OACI,sBAAKP,UAAU,QAAf,UAEMR,EAAM+O,YAAc/O,EAAM+O,WAAWwJ,WACnC,mBAAG/X,UAAU,OAAb,SAAqBR,EAAM+O,WAAWwJ,aAEtC,mBAAG/X,UAAU,OAAb,mCAEJ,qBAAKA,UAAU,kBAAf,SACOR,EAAMwY,WAAaxY,EAAM+O,YAAc/O,EAAM+O,WAAW0J,UACvD,qBAAK7T,IAAK5E,EAAM+O,WAAW0J,UAAWC,IAAI,aAAcvX,OAAO,QAE/D,qBAAKyD,IAAI,6BAA6BzD,OAAO,a,2CCpC3DJ,I,OAAYC,aAAW,SAACC,GAAD,OACzBsH,YAAa,CACThB,SAAU,CACNpG,OAAQ,KAEZqG,WAAY,CACR5F,MAAO,IACPP,OAAQ,gBAKdsX,GAAeC,aAAW,CAC5B1X,KAAM,CACFC,OAAQ,EACR,aAAc,CACVS,MAAO,EACPF,UAAW,IAGnBmX,MAAO,CACH1X,OAAQ,iBACRS,MAAO,kBACPK,aAAc,EACdH,gBAAiB,OACjBgX,OAAQ,+BACRpX,UAAW,kBACXgH,WAAY,iBACZqQ,aAAc,kBACd,mBAAoB,CAChBC,UAAW,QAEf,WAAY,CACRA,UAAW,QAEf,SAAU,CACN7X,OAAQ,EACRS,MAAO,GACPE,gBAAiB,eACjB4G,WAAY,EACZD,YAAa,IAGrBwQ,OAAQ,GACRC,WAAY,CACRC,KAAM,oBAEVC,MAAO,CACHjY,OAAQ,IACRc,aAAc,GAElBoX,KAAM,CACFlY,OAAQ,IACRc,aAAc,GAElBsF,SAAU,CACN,UAAW,CACP3F,MAAO,IAEX,WAAY,CACRA,MAAO,IAEX,WAAY,CACR8G,YAAa,EACbqQ,cAAe,KApDNH,CAuDlBU,MAEH,SAASC,GAAqBvZ,GAC1B,OACI,gDAAUA,GAAV,aACI,oBAAIQ,UAAU,WAK1B,IAAM+L,GAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,iBACXgH,WAAY,uBAIlB,SAASkE,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAASwZ,GAAiBxZ,GAErC,IAAMqC,EAAUtB,KAF4B,EAIlBd,IAAMC,SAAS,CACrCuZ,UAAU,EACVC,UAAU,IAN8B,gCASAxZ,oBAAS,IATT,mBASrCyZ,EATqC,KASrBC,EATqB,OAUJ1Z,oBAAS,GAVL,mBAUrC2Z,EAVqC,KAUvBC,EAVuB,OAYpB5Z,mBAAS,GAZW,mBAYrCuO,EAZqC,KAY/BsL,EAZ+B,OAaZ7Z,mBAAS,GAbG,mBAarC4N,EAbqC,KAa3BkM,EAb2B,OAcxB9Z,mBAAS,GAde,mBAcrC+Z,EAdqC,KAcjCC,EAdiC,OAeNha,mBAAS,GAfH,mBAerCqR,EAfqC,KAexB4I,EAfwB,OAgBxBja,mBAAS,GAhBe,mBAgBrCsR,EAhBqC,KAgBjC4I,EAhBiC,OAiBRla,oBAAS,GAjBD,mBAiBrCma,EAjBqC,KAiBzBC,EAjByB,OAmBZpa,qBAnBY,mBAmBrCqa,EAnBqC,KAmB3BC,EAnB2B,OAoBRta,qBApBQ,mBAoBrCua,EApBqC,KAoBzBC,EApByB,OAqBZxa,oBAAS,GArBG,oBAqBrCya,GArBqC,MAqB3BC,GArB2B,MAuB5Cva,qBAAU,gBACgB0K,IAAnB/K,EAAM+O,YAA6C,OAAnB/O,EAAM+O,YACrCgL,EAAQ,GACRC,EAAY,GACZE,EAAM,GACNC,EAAe,GACfC,EAAM,KAGPpa,EAAM+O,YAAc/O,EAAM+O,YACzBgL,EAAQ/Z,EAAM+O,WAAWnB,aAG1B5N,EAAM+O,YAAc/O,EAAM+O,YACzBiL,EAAYha,EAAM+O,WAAWjB,UAG9B9N,EAAM+O,YAAc/O,EAAM+O,YACzBmL,EAAMla,EAAM+O,WAAWlB,KAGxB7N,EAAM+O,YAAc/O,EAAM+O,YACzBoL,EAAena,EAAM+O,WAAWhB,yBAGjC/N,EAAM+O,YAAc/O,EAAM+O,YACzBqL,EAAMpa,EAAM+O,WAAWf,IAE3B8L,EAAgB9Z,EAAM+O,WAAW8L,sBAEnC,CAAC7a,EAAM+O,aAET1O,qBAAU,gBACW0K,IAAbwP,GAA2BA,GAAYA,EAAS7W,OAChDqW,EAAQ,GACRC,EAAY,GACZE,EAAM,GACNC,EAAe,GACfC,EAAM,KAENL,EAAQQ,EAAS3M,aACjBoM,EAAYO,EAASzM,UACrBoM,EAAMK,EAAS1M,KACfsM,EAAeI,EAASxM,yBACxBqM,EAAMG,EAASvM,OAErB,CAACuM,IAEHla,qBAAU,gBACa0K,IAAf0P,GAA6BA,GAAcA,EAAW/W,OACtDqW,EAAQ,GACRC,EAAY,GACZE,EAAM,GACNC,EAAe,GACfC,EAAM,KAENL,EAAQU,EAAW7M,aACnBoM,EAAYS,EAAW3M,UACvBoM,EAAMO,EAAW5M,KACjBsM,EAAeM,EAAW1M,yBAC1BqM,EAAMK,EAAWzM,OAEvB,CAACyM,IAEHpa,qBAAU,WAIFwZ,KA6DR,WACI,IAAI9V,EAAQF,aAAaoH,QAAQ,SAE7B6P,EAAe,CACf,aAFajX,aAAaoH,QAAQ,eAItCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,oBAAuC,CACxCmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAUyX,KAExBxX,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH+W,EAAY/W,MA7EdsX,GACAH,IAAY,MAEb,CAACf,IAENxZ,qBAAU,WACgB,OAAnBsZ,IACKA,GA0EZ,WACI,IAAI5V,EAAQF,aAAaoH,QAAQ,SAC7BqJ,EAAazQ,aAAaoH,QAAQ,cAClC+P,EAAiB,CACjB,aAAgB1G,GAEpBtR,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,sBAAyC,CAC1CmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAU2X,KAExB1X,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACAA,EAAQC,QACPkW,GAAkB,GAClBE,GAAgB,IAEpBY,EAAcjX,GACX6Q,IACCtU,EAAM0K,cAAc,IACpB1K,EAAM0K,cAAc4J,OAjGpB2G,GAEJnB,GAAiBH,MAEtB,CAACA,IAEJtZ,qBAAU,WACe,OAAjBwZ,GACJD,GAAmBC,KACpB,CAACA,IA6FJ,IAAMqB,GAAoB,SAACpU,EAAOqU,IArElC,SAAkBA,EAAKza,GAER,gBAARya,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0ChB,wBAAyBwD,KAE5D,gBAAR4J,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0CnB,YAAaa,KAEhD,aAAR0M,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0CjB,SAAUA,KAE7C,OAARqN,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0Cf,GAAIwD,KAEvC,QAAR2J,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0ClB,IAAIoM,KAuDlDmB,CAASD,EAAKrU,EAAM4I,OAAO2L,eA+B/B,OA5BAhb,qBAAU,WACN,IAAIib,EAAYzX,aAAaoH,QAAQ,gBAEjC2O,EADW,SAAZ0B,KAKL,IAEFjb,qBAAU,WACUwD,aAAaC,QAAQ,eAAgB6V,KACvD,CAACA,IAEHtZ,qBAAU,WACHsa,IACCL,GAAc,GACdta,EAAM0U,cAAa,GACnB1U,EAAM2U,eAAc,IAGpB2F,GAAc,KAEpB,CAACK,KAEHta,qBAAU,WACNua,GAAY5a,EAAMub,cACpB,CAACvb,EAAMub,aAGL,qBAAK/a,UAAU,gCAAf,SACI,eAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,sBAAK7D,UAAU,2BAAf,UACI,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,OAAtB,SACI,sBAAMA,UAAU,kBAAhB,oBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAACoR,GAAD,CACI8C,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAc9B,EACd/I,SAxI5B,SAAsByJ,EAAGwM,GACrB5B,EAAQ4B,IAwIgBT,kBAAmB,SAAC/L,GAChB+L,GAAkB/L,EAAG,gBAEzByM,kBAAkB,OAClBpb,UAAU,WACV4Q,IAAK,IACLe,KAAM,GACNzR,MAAO+N,EACPgB,SAAU4K,MAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,cAAcyE,QAAQ,YAAxC,UACKwJ,EADL,YAKR,eAACrK,EAAA,EAAD,CAAMyX,UAAQ,EAACpX,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAAxC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,WAAtB,SACI,sBAAMA,UAAU,sBAAhB,wBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAACoR,GAAD,CACI8C,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAczC,EACdpI,SA/J5B,SAA0ByJ,EAAGwM,GACzB7Q,OAAOkP,EAAY2B,KA+JKT,kBAAmB,SAAC/L,GAChB+L,GAAkB/L,EAAG,aAEzByM,kBAAkB,OAClBlb,MAAOoN,EACPtN,UAAU,WACV2R,IAAK,EACLf,IAAK,IACL3B,SAAU4K,MAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,cAAcyE,QAAQ,YAAxC,UACK6I,EADL,YAKR,eAAC1J,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,MAAtB,SACI,sBAAMA,UAAU,iBAAhB,wBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAACoR,GAAD,CACI8C,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAc0J,EACdvU,SAtL5B,SAAoByJ,EAAGwM,GACnBzB,EAAMyB,IAsLkBT,kBAAmB,SAAC/L,GAChB+L,GAAkB/L,EAAE,QAExByM,kBAAkB,OAClBpb,UAAU,WACV2R,IAAK,EACLf,IAAK,IACL1Q,MAAOuZ,EACPxK,SAAU4K,MAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,cAAcyE,QAAQ,YAAxC,UACKgV,EADL,YAKR,eAAC7V,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,cAAtB,SACI,sBAAMA,UAAU,yBAAhB,2BAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAACoR,GAAD,CACI8C,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcgB,EACd7L,SA7M5B,SAA6ByJ,EAAGwM,GAC5BxB,EAAewB,IA6MST,kBAAmB,SAAC/L,GAChB+L,GAAkB/L,EAAG,gBAEzByM,kBAAkB,OAClBpb,UAAU,WACVE,MAAO6Q,EACPY,IAAK,EACLf,IAAK,GACL3B,SAAU4K,MAGlB,8BACI,cAAC1T,EAAA,EAAD,CAAQnG,UAAU,cAAcyE,QAAQ,YAAxC,SACKsM,SAIb,eAACnN,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,KAAtB,SACI,sBAAMA,UAAU,gBAAhB,kBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAACoR,GAAD,CACI8C,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAciB,EACd9L,SApO5B,SAAoByJ,EAAGwM,GACnBvB,EAAMuB,IAoOkBT,kBAAmB,SAAC/L,GAChB+L,GAAkB/L,EAAG,OAEzByM,kBAAkB,OAClBpb,UAAU,WACVE,MAAO8Q,EACPW,IAAK,EACLf,IAAK,GACL3B,SAAU4K,MAGlB,8BACI,cAAC1T,EAAA,EAAD,CAAQnG,UAAU,cAAcyE,QAAQ,YAAxC,SACKuM,YAKjB,qBAAKhR,UAAU,yBAAf,SACI,6CAEJ,cAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,sBAAK7D,UAAU,4BAAf,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,8BACI,wBAAOhb,UAAU,SAAjB,UACI,uBAAO+E,KAAK,WACRuW,QAASnC,EACTnU,KAAK,WACL3E,MAAM,UACN6E,SAAU,WACNkU,GAAmBD,IAEvB7P,WAAY,CAAE,aAAc,sBAEhC,sBAAMtJ,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,eAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAOK,MAAO8Y,EAAiB,UAAY,GAAjE,wBAKR,cAACvV,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,2BAAf,SACI,wBAAOA,UAAU,SAAjB,UACK,uBAAO+E,KAAK,WACTuW,QAASjC,EACTrU,KAAK,WACL3E,MAAM,UACN6E,SAAU,WACNoU,GAAiBD,IAErB/P,WAAY,CAAE,aAAc,sBAEhC,sBAAMtJ,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,kBAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAOK,MAAOgZ,EAAe,UAAY,GAA/D,sBAKR,cAACzV,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,UACwB,IAAnB7B,GACG,8BACI,cAAC,GAAD,CAAkB9K,UAAU,OAAOC,MAAM,eAAzC,SACI,qBAAKtO,UAAU,4BAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,cAAC,KAAD,CAAU0G,QAAS,WAAK0T,IAAY,SAAAmB,GAAC,OAAGA,MAAKvb,UAAU,6BAA6BsS,MAAO,CAAEjS,MAAO8Z,GAAW,QAAU,0B,WC/brKqB,GA9EEjb,GAAYC,aAAW,SAACC,GAAD,OAEzBsH,YAAa,CACThB,SAAU,CACNpG,OAAQ,KAEZqG,WAAY,CACR5F,MAAO,IACPP,OAAQ,eAKdsX,GAAeC,aAAW,CAC5B1X,KAAM,CACFC,OAAQ,EACR,aAAc,CACVS,MAAO,EACPF,UAAW,IAGnBmX,MAAO,CACH1X,OAAQ,iBACRS,MAAO,kBACPK,aAAc,EACdH,gBAAiB,OACjBgX,OAAQ,+BACRpX,UAAW,kBACXgH,WAAY,iBACZqQ,aAAc,kBACd,mBAAoB,CAChBC,UAAW,QAEf,WAAY,CACRA,UAAW,QAEf,SAAU,CACN7X,OAAQ,EACRS,MAAO,GACPE,gBAAiB,eACjB4G,WAAY,EACZD,YAAa,IAGrBwQ,OAAQ,GACRC,WAAY,CACRC,KAAM,oBAEVC,MAAO,CACHjY,OAAQ,IACRc,aAAc,GAElBoX,KAAM,CACFlY,OAAQ,IACRc,aAAc,GAElBsF,SAAU,CACN,UAAW,CACP3F,MAAO,IAEX,WAAY,CACRA,MAAO,IAEX,WAAY,CACR8G,YAAa,EACbqQ,cAAe,KApDNH,CAuDlBU,MAEH,SAASC,GAAqBvZ,GAC1B,OACI,gDAAUA,GAAV,aACI,oBAAIQ,UAAU,WAO1B,IAAM+L,GAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,iBACXgH,WAAY,wBAIlB,SAASkE,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAASic,GAAiBjc,GAAQ,IAAD,IAEtCqC,EAAUtB,KAF4B,EAIlBd,IAAMC,SAAS,CACrCgc,UAAU,EACVC,UAAU,EACVC,UAAU,IAP8B,gCAUAlc,mBAAS,OAVT,mBAUrCmc,EAVqC,KAUrBC,EAVqB,OAWJpc,mBAAS,MAXL,mBAWrCqc,EAXqC,KAWvBC,EAXuB,OAYEtc,mBAAS,MAZX,mBAYrCuc,EAZqC,KAYpBC,EAZoB,OAaFxc,qBAbE,gCAcUA,sBAdV,gCAgBdA,mBAAS,IAhBK,mBAgBrCyc,EAhBqC,KAgB5BC,EAhB4B,OAiBtB1c,mBAAS,GAjBa,mBAiBrCgO,EAjBqC,KAiBhC2O,EAjBgC,OAkBlB3c,mBAAS,GAlBS,mBAkBrCiO,EAlBqC,KAkB9B2O,EAlB8B,OAmBpB5c,mBAAS,GAnBW,mBAmBrCkO,EAnBqC,KAmB/B2O,EAnB+B,OAoBZ7c,mBAAS,GApBG,mBAoBrC8c,EApBqC,KAoB3BC,EApB2B,OAqBxB/c,mBAAS,GArBe,mBAqBrCoO,GArBqC,KAqBjC4O,GArBiC,QAsBRhd,oBAAS,GAtBD,qBAsBrCma,GAtBqC,MAsBzBC,GAtByB,SAwBGpa,qBAxBH,qBAwBrCid,GAxBqC,MAwBnBC,GAxBmB,SAyBFld,qBAzBE,qBAyBrCmd,GAzBqC,MAyBtBC,GAzBsB,SA0BIpd,qBA1BJ,qBA0BrCqd,GA1BqC,MA0BnBC,GA1BmB,SA2BZtd,oBAAS,GA3BG,qBA2BrCya,GA3BqC,MA2B3BC,GA3B2B,MA6B5Cva,qBAAU,gBACgB0K,IAAnB/K,EAAM+O,YAA6C,OAAnB/O,EAAM+O,YACrC6N,EAAW,GACXC,EAAO,GACPC,EAAS,GACTC,EAAQ,GACRE,EAAY,GACZC,GAAM,KAGPld,EAAM+O,YAAc/O,EAAM+O,YACzB6N,EAAW5c,EAAM+O,WAAWd,UAG7BjO,EAAM+O,YAAc/O,EAAM+O,YACzB8N,EAAO7c,EAAM+O,WAAWb,KAGzBlO,EAAM+O,YAAc/O,EAAM+O,YACzB+N,EAAS9c,EAAM+O,WAAWZ,OAG3BnO,EAAM+O,YAAc/O,EAAM+O,YACzBgO,EAAQ/c,EAAM+O,WAAWX,MAG1BpO,EAAM+O,YAAc/O,EAAM+O,YACzBkO,EAAYjd,EAAM+O,WAAWV,WAG9BrO,EAAM+O,YAAc/O,EAAM+O,YACzBmO,GAAMld,EAAM+O,WAAWT,IAGxBtO,EAAM+O,aAAgD,IAAlC/O,EAAM+O,WAAW0O,cAA2D,OAAlCzd,EAAM+O,WAAW0O,cAC9EnB,GAAkB,GAGnBtc,EAAM+O,YAAgD,OAAlC/O,EAAM+O,WAAW0O,aACpCf,GAAmB,GAGnBF,EAAgBxc,EAAM+O,WAAW0O,iBAGvC,CAACzd,EAAM+O,aAGT1O,qBAAU,WAEJ2b,GADQ,CAAExW,KAAM,SAAU9E,OAAO,KAErC,IAEFL,qBAAU,WACHsa,IACCL,IAAc,GACdta,EAAM0U,cAAa,GACnB1U,EAAM4U,iBAAgB,IAGtB0F,IAAc,KAEpB,CAACK,KAEHta,qBAAU,WACNua,GAAY5a,EAAM0d,gBACpB,CAAC1d,EAAM0d,eAETrd,qBAAU,WACgB,OAAnBgc,GAA2BA,IACN,IAAjBA,GA8LX,WACI,IAAItY,EAAQF,aAAaoH,QAAQ,SAC7BqJ,EAAazQ,aAAaoH,QAAQ,cAClC+P,EAAiB,CACjB9P,aAAcoJ,GAElBtR,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,gBAAmC,CACpCmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAU2X,KAExB1X,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACAA,EAAQC,OACP4Y,GAAkB,GAGtBc,GAAmB3Z,GAChB6Q,IACCtU,EAAM0K,cAAc,IACpB1K,EAAM0K,cAAc4J,OArNpBqJ,GAENnB,GAAgB,GAChBE,GAAoBL,IAEC,OAAnBA,GACCA,GACAI,GAEHD,GAAgB,KAEnB,CAACH,IAEJhc,qBAAU,WACiB,OAApBoc,GAA4BA,IACN,IAAlBA,GA2MX,WACI,IAAI1Y,EAAQF,aAAaoH,QAAQ,SAE7B+P,EAAiB,CACjB9P,aAFarH,aAAaoH,QAAQ,eAItCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,qBAAwC,CACzCmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAU2X,KAExB1X,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH+Z,GAAoB/Z,MA3NhBma,GAENtB,GAAmBG,GACnBD,GAAiBC,IAEG,OAApBA,GACCA,GACAJ,GAEDG,GAAgB,KAEnB,CAACC,IAEJpc,qBAAU,WACN,GAAoB,OAAjBkc,EAAH,CAOA,IALsB,IAAfA,KAwIX,WACI,IAAIxY,EAAQF,aAAaoH,QAAQ,SAE7B+P,EAAiB,CACjB9P,aAFarH,aAAaoH,QAAQ,eAItCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,cAAiC,CAClCmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAU2X,KAExB1X,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH6Z,GAAiB7Z,MAxJboa,GACAjD,IAAY,IAGjB6B,EAEDT,GADU,CAAExW,KAAM,UAAW9E,MAAO+b,QAEhC,GAAGJ,EAAgB,CAEvBL,GADU,CAAExW,KAAM,SAAU9E,MAAO2b,GAIjCL,KAGuB,YAAxBA,GAAexW,KAChBkX,GAAoBH,GACW,WAAxBP,GAAexW,MACtB8W,GAAmBC,OAEtB,CAACA,IAEJlc,qBAAU,WACN,IAAIyd,EAAmBja,aAAaoH,QAAQ,iBAExCqR,EADkB,SAAnBwB,KAKL,IAEFzd,qBAAU,WACiBwD,aAAaC,QAAQ,gBAAiBuY,KAC/D,CAACA,IAEHhc,qBAAU,WACN,IAAI0d,EAAmBla,aAAaoH,QAAQ,uBAExCyR,EADkB,SAAnBqB,KAKL,IAEF1d,qBAAU,WACiBwD,aAAaC,QAAQ,sBAAuB2Y,KACrE,CAACA,IAEHpc,qBAAU,WACH8c,KACCP,EAAWO,GAAgBlP,UAC3B4O,EAAOM,GAAgBjP,KACvB4O,EAASK,GAAgBhP,OACzB4O,EAAQI,GAAgB/O,MACxB6O,EAAYE,GAAgB9O,WAC5B6O,GAAMC,GAAgB7O,OAE5B,CAAC6O,KAEF9c,qBAAU,gBACe0K,IAAlBsS,IAAgCA,IAAiBA,GAAc3Z,OAC/DkZ,EAAW,GACXC,EAAO,GACPC,EAAS,GACTC,EAAQ,GACRE,EAAY,GACZC,GAAM,KAENN,EAAWS,GAAcpP,UACzB4O,EAAOQ,GAAcnP,KACrB4O,EAASO,GAAclP,OACvB4O,EAAQM,GAAcjP,MACtB6O,EAAYI,GAAchP,WAC1B6O,GAAMG,GAAc/O,OAE1B,CAAC+O,KAEHhd,qBAAU,WACHkd,KACCX,EAAW,GACXC,EAAO,GACPC,EAAS,GACTC,EAAQ,GACRE,EAAY,GACZC,GAAM,MAEZ,CAACK,KAwHH,IAAMrC,GAAoB,SAACpU,EAAOqU,IA5FlC,SAAuBA,EAAKza,GACb,SAARya,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0CX,KAAMA,KAEzC,QAAR+M,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0Cb,IAAKA,KAExC,UAARiN,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0CZ,MAAOA,KAE1C,aAARgN,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0CV,UAAW2O,KAE9C,YAAR7B,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0Cd,SAAU0O,KAE7C,OAARxB,GACCnb,EAAM+T,cAAN,2BAAwB/T,EAAM+O,YAA9B,IAA0CT,GAAIA,MA4ElD0P,CAAc7C,EAAKrU,EAAM4I,OAAO2L,eAGpC,OACI,8BACI,eAACjX,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,sBAAK7D,UAAU,2BAAf,UACI,eAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,WAAtB,SACI,sBAAMA,UAAU,sBAAhB,wBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAAC,GAAD,CACIkU,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcoM,EACdjX,SAvI5B,SAAyByJ,EAAGwM,GACxBiB,EAAWjB,IAuIaT,kBAAmB,SAAC/L,GAAK+L,GAAkB/L,EAAG,YAC9CyM,kBAAkB,OAClBpb,UAAU,WACVE,MAAOic,EACPlN,SAAU4K,OAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,0BAA0ByE,QAAQ,YAApD,UACK0X,EADL,YAKR,eAACvY,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,MAAtB,SACI,sBAAMA,UAAU,iBAAhB,mBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAAC,GAAD,CACIkU,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcrC,EACdxI,SA1J5B,SAAqByJ,EAAGwM,GACpBkB,EAAOlB,IA0JiBT,kBAAmB,SAAC/L,GAAK+L,GAAkB/L,EAAG,QAC9CyM,kBAAkB,OAClBpb,UAAU,WACVE,MAAOwN,EACPuB,SAAU4K,OAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,0BAA0ByE,QAAQ,YAApD,UACKiJ,EADL,YAKR,eAAC9J,EAAA,EAAD,CAAMyX,UAAQ,EAACpX,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAAxC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,QAAtB,SACI,sBAAMA,UAAU,mBAAhB,qBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAAC,GAAD,CACIkU,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcpC,EACdzI,SA7K5B,SAAuByJ,EAAGwM,GACtBmB,EAASnB,IA6KeT,kBAAmB,SAAC/L,GAAK+L,GAAkB/L,EAAG,UAC9CyM,kBAAkB,OAClBpb,UAAU,WACVE,MAAOyN,EACPsB,SAAU4K,OAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,0BAA0ByE,QAAQ,YAApD,UACKkJ,EADL,YAKR,eAAC/J,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,OAAtB,SACI,sBAAMA,UAAU,kBAAhB,oBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAAC,GAAD,CACIkU,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcnC,EACd1I,SAhM5B,SAAsByJ,EAAGwM,GACrBoB,EAAQpB,IAgMgBT,kBAAmB,SAAC/L,GAAK+L,GAAkB/L,EAAG,SAC9CyM,kBAAkB,OAClBpb,UAAU,WACVE,MAAO0N,EACPqB,SAAU4K,OAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,0BAA0ByE,QAAQ,YAApD,UACKmJ,EADL,YAKR,eAAChK,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,YAAtB,SACI,sBAAMA,UAAU,uBAAhB,yBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAAC,GAAD,CACIkU,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcyM,EACdtX,SAnN5B,SAA0ByJ,EAAGwM,GACzBsB,EAAYtB,IAmNYT,kBAAmB,SAAC/L,GAAK+L,GAAkB/L,EAAG,aAC9CyM,kBAAkB,OAClBpb,UAAU,YACVE,MAAOsc,EACPvN,SAAU4K,OAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,0BAA0ByE,QAAQ,YAApD,UACK+X,EADL,YAKR,eAAC5Y,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAApC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,KAAtB,SACI,sBAAMA,UAAU,gBAAhB,kBAEJ,qBAAKA,UAAW6B,EAAQkF,SAAxB,SACI,cAAC,GAAD,CACIkU,eAAgBlC,GAChBmC,YAAY,WACZnL,aAAcjC,GACd5I,SAtO5B,SAAoByJ,EAAGwM,GACnBuB,GAAMvB,IAsOkBT,kBAAmB,SAAC/L,GAAK+L,GAAkB/L,EAAG,OAC9CyM,kBAAkB,OAClBpb,UAAU,YACVE,MAAO4N,GACPmB,SAAU4K,OAGlB,8BACI,eAAC1T,EAAA,EAAD,CAAQnG,UAAU,0BAA0ByE,QAAQ,YAApD,UACKqJ,GADL,eAMZ,qBAAK9N,UAAU,0BAAf,SACI,+CAEJ,cAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,sBAAK7D,UAAU,+BAAf,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,8BACI,wBAAOhb,UAAU,SAAjB,UACI,uBAAO+E,KAAK,WACRuW,QAASO,EACT3W,SAAU,WACV4W,GAAmBD,IAEnB7W,KAAK,iBACL3E,MAAM,UACNiJ,WAAY,CAAE,aAAc,sBAEhC,sBAAMtJ,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,4BAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAQK,MAAOwb,EAAiB,UAAY,GAAlE,wBAKR,cAACjY,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,gBAAf,SACI,wBAAOA,UAAU,SAAjB,UACI,0BAAO+E,KAAK,YAAZ,qBACS,YADT,wBAEagX,GAFb,0BAGc,WACRC,GAAiBD,MAJvB,qBAMS,gBANT,sBAOU,WAPV,2BAQgB,CAAE,aAAc,qBARhC,IAUA,sBAAM/b,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,aAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAOK,MAAO0b,EAAe,UAAY,GAA/D,sBAKR,cAACnY,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,6BAAf,SACI,wBAAOA,UAAU,SAAjB,UACI,0BAAO+E,KAAK,YAAZ,qBACS,YADT,wBAEakX,GAFb,0BAGc,WACNC,GAAoBD,MAJ5B,qBAMS,mBANT,sBAOU,WAPV,2BAQgB,CAAE,aAAc,qBARhC,IAUA,sBAAMjc,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,yBAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAOK,MAAO4b,EAAkB,UAAY,GAAlE,+BAKR,cAACrY,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,UACwB,IAAnBa,GACG,8BACI,cAAC,GAAD,CAAkBxN,UAAU,OAAOC,MAAM,eAAzC,SACI,qBAAKtO,UAAU,uBAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,cAAC,KAAD,CAAU0G,QAAU,WAAM0T,IAAY,SAAAmB,GAAC,OAAKA,MAAKvb,UAAU,wBAAwBsS,MAAO,CAAEjS,MAAO8Z,GAAW,QAAU,0BCtpBzJ,SAASsD,GAAyBje,GAAQ,IAAD,EAE5BC,IAAMC,SAASF,EAAMG,MAFO,mBAE7CA,EAF6C,aAIxBF,IAAMC,SAAS,UAJS,mBAI7C6M,EAJ6C,KAM9CE,GAN8C,KAMtBhN,IAAMiN,OAAO,OANS,EAQjBjN,IAAMC,UAAS,GARE,mBAQ9Cge,EAR8C,KAQlCC,EARkC,OAU1Bje,mBAAS,GAViB,mBAU7Cke,EAV6C,KAUtCC,EAVsC,OAW1Bne,mBAAS,GAXiB,mBAW7Coe,EAX6C,KAWtCC,EAXsC,OAY1Bre,mBAAS,GAZiB,mBAY7Cse,EAZ6C,KAYtCC,EAZsC,OAa1Bve,mBAAS,GAbiB,mBAa7Cwe,EAb6C,KAatCC,EAbsC,OAc1Bze,mBAAS,GAdiB,mBAc7C0e,EAd6C,KActCC,EAdsC,OAe1B3e,mBAAS,GAfiB,mBAe7C4e,EAf6C,KAetCC,EAfsC,OAgB1B7e,mBAAS,GAhBiB,mBAgB7C8e,EAhB6C,KAgBtCC,EAhBsC,OAiB1B/e,mBAAS,GAjBiB,mBAiB7Cgf,EAjB6C,KAiBtCC,EAjBsC,OAkB1Bjf,mBAAS,GAlBiB,oBAkB7Ckf,GAlB6C,MAkBtCC,GAlBsC,SAmB1Bnf,mBAAS,GAnBiB,qBAmB7Cof,GAnB6C,MAmBtCC,GAnBsC,SAoBxBrf,mBAAS,GApBe,qBAoB7Csf,GApB6C,MAoBrCC,GApBqC,SAqBxBvf,mBAAS,GArBe,qBAqB7Cwf,GArB6C,MAqBrCC,GArBqC,SAsBxBzf,mBAAS,GAtBe,qBAsB7C0f,GAtB6C,MAsBrCC,GAtBqC,SAuBxB3f,mBAAS,GAvBe,qBAuB7C4f,GAvB6C,MAuBrCC,GAvBqC,SAwBxB7f,mBAAS,GAxBe,qBAwB7C8f,GAxB6C,MAwBrCC,GAxBqC,SAyBxB/f,mBAAS,GAzBe,qBAyB7CggB,GAzB6C,MAyBrCC,GAzBqC,SA0BxBjgB,mBAAS,GA1Be,qBA0B7CkgB,GA1B6C,MA0BrCC,GA1BqC,SA2BxBngB,mBAAS,GA3Be,qBA2B7CogB,GA3B6C,MA2BrCC,GA3BqC,SA4BxBrgB,mBAAS,GA5Be,qBA4B7CsgB,GA5B6C,MA4BrCC,GA5BqC,SA6BxBvgB,mBAAS,GA7Be,qBA6B7CwgB,GA7B6C,MA6BrCC,GA7BqC,SA8BxBzgB,mBAAS,GA9Be,qBA8B7C0gB,GA9B6C,MA8BrCC,GA9BqC,SA+BxB3gB,mBAAS,GA/Be,qBA+B7C4gB,GA/B6C,MA+BrCC,GA/BqC,SAgCxB7gB,mBAAS,GAhCe,qBAgC7C8gB,GAhC6C,MAgCrCC,GAhCqC,SAiCxB/gB,mBAAS,GAjCe,qBAiC7CghB,GAjC6C,MAiCrCC,GAjCqC,MAmC9Cta,GAAc,WAChB7G,EAAMI,SAAQ,GACdJ,EAAM0U,cAAa,IAsQvB,OAnQAzU,IAAMI,WAAU,WACZ,GAAIF,EAAM,CAAC,IACUsN,EAAuBR,EAAhCS,QACmB,OAAvBD,GACAA,EAAmBE,WAG5B,CAACxN,IAOJE,qBAAU,gBACmB0K,IAArB/K,EAAM+O,YAAwD,OAA5B/O,EAAM+O,WAAWhM,QACnDsb,EAAS,GACTE,EAAS,GACTE,EAAS,GACTE,EAAS,GACTE,EAAS,GACTE,EAAS,GACTE,EAAS,GACTE,EAAS,GACTE,GAAS,GACTE,GAAS,GACTE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,GACVE,GAAU,KAGNnhB,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCsb,EAASre,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCwb,EAASve,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC0b,EAASze,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC4b,EAAS3e,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC8b,EAAS7e,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCgc,EAAS/e,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCkc,EAASjf,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCoc,EAASnf,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCsc,GAASrf,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCwc,GAASvf,EAAM+O,WAAWhM,OAAO,IAGjC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC0c,GAAUzf,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC4c,GAAU3f,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC8c,GAAU7f,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCgd,GAAU/f,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCkd,GAAUjgB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCod,GAAUngB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCsd,GAAUrgB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCwd,GAAUvgB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC0d,GAAUzgB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC4d,GAAU3gB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrC8d,GAAU7gB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCge,GAAU/gB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCke,GAAUjhB,EAAM+O,WAAWhM,OAAO,KAGlC/C,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACrCoe,GAAUnhB,EAAM+O,WAAWhM,OAAO,QAG3C,CAAC/C,EAAM+O,aA0HN,8BACI,eAACxO,EAAA,EAAD,CACIJ,KAAMH,EAAMG,KACZ4M,OAAQA,EACRvM,UAAU,0BAHd,UAKI,qBAAKA,UAAU,4BAAf,SACI,cAACyO,GAAA,EAAD,CAAaxJ,GAAG,sBAAhB,SACI,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAY0G,QAASL,GAApC,SACI,cAAC,KAAD,CAAerG,UAAU,uBAIrC,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,aAAf,SACI,sBAAMA,UAAU,OAAhB,2CAGR,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,qBAAKnE,UAAU,mBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,KAAD,CAAYA,UAAU,eACtB0G,QAAS,SAACiI,GAAD,OApR7C,SAA8BA,GAC1BA,EAAEC,iBACF+O,GAAeD,GAkRiCkD,CAAqBjS,IACrCtO,MAAOqd,EAAa,UAAY,kBAQxD,cAAC5O,GAAA,EAAD,CAAeC,SAAqB,UAAXxC,EAAzB,SACI,uBAAMjK,SAlFtB,SAAsBqM,GAClBA,EAAEC,iBACF,IAAIrL,EAAQF,aAAaoH,QAAQ,SAE7BoW,EAAgB,CAChBnW,aAFarH,aAAaoH,QAAQ,cAGlCqW,IAAKlD,EACLmD,IAAKjD,EACLkD,MAAOhD,EACPiD,KAAM/C,EACNgD,KAAM9C,EACN+C,IAAK7C,EACL8C,MAAO5C,EACP6C,MAAO3C,EACP4C,KAAM1C,GACN2C,IAAKzC,GACL0C,OAAQxC,GACRyC,OAAQvC,GACRwC,SAAUtC,GACVuC,SAAUrC,GACVsC,QAASpC,GACTqC,QAASnC,GACToC,UAAWlC,GACXmC,SAAUjC,GACVkC,SAAUhC,GACViC,OAAQ/B,GACRgC,WAAY9B,GACZ+B,WAAY7B,GACZ8B,aAAc5B,GACd6B,YAAa3B,IAElBle,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,wBAA2C,CAC3CmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAUge,KAExB/d,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLzD,EAAM0U,cAAa,OAwCT,UACI,cAAClF,GAAA,EAAD,CAAmBhP,UAAU,OAA7B,SACI,eAAC4D,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAc6N,EACd1d,MAAO0d,EACP3O,SAAUyO,EACVxY,SAAU,SAACyJ,IA1K/C,SAAuBA,GACnBkP,EAASlP,EAAEO,OAAOhP,OAyK8BoiB,CAAc3T,IAE9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAc+N,EACd5d,MAAO4d,EACP7O,SAAUyO,EACVxY,SAAU,SAACyJ,IAxL/C,SAAuBA,GACnBoP,EAASpP,EAAEO,OAAOhP,OAuL8BqiB,CAAc5T,IAE9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAciO,EACd9d,MAAO8d,EACP/O,SAAUyO,EACVxY,SAAU,SAACyJ,IAtM/C,SAAuBA,GACnBsP,EAAStP,EAAEO,OAAOhP,OAqM8BsiB,CAAc7T,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAcmO,EACdhe,MAAOge,EACPjP,SAAUyO,EACVxY,SAAU,SAACyJ,IAnN/C,SAAuBA,GACnBwP,EAASxP,EAAEO,OAAOhP,OAkN8BuiB,CAAc9T,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAcqO,EACdle,MAAOke,EACPnP,SAAUyO,EACVxY,SAAU,SAACyJ,IAhO/C,SAAuBA,GACnB0P,EAAS1P,EAAEO,OAAOhP,OA+N8BwiB,CAAc/T,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAcuO,EACdpe,MAAOoe,EACPrP,SAAUyO,EACVxY,SAAU,SAACyJ,IA7O/C,SAAuBA,GACnB4P,EAAS5P,EAAEO,OAAOhP,OA4O8ByiB,CAAchU,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAcyO,EACdte,MAAOse,EACPvP,SAAUyO,EACVxY,SAAU,SAACyJ,IA1P/C,SAAuBA,GACnB8P,EAAS9P,EAAEO,OAAOhP,OAyP8B0iB,CAAcjU,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAc2O,EACdxe,MAAOwe,EACPzP,SAAUyO,EACVxY,SAAU,SAACyJ,IAvQ/C,SAAuBA,GACnBgQ,EAAShQ,EAAEO,OAAOhP,OAsQ8B2iB,CAAclU,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAc6O,GACd1e,MAAO0e,GACP3P,SAAUyO,EACVxY,SAAU,SAACyJ,IApR/C,SAAuBA,GACnBkQ,GAASlQ,EAAEO,OAAOhP,OAmR8B4iB,CAAcnU,IAC9BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,WACNC,KAAK,SACLC,KAAK,SACLC,GAAG,SACHK,aAAa,MACbyK,aAAc+O,GACd5e,MAAO4e,GACP7P,SAAUyO,EACVxY,SAAU,SAACyJ,IAjS/C,SAAuBA,GACnBoQ,GAASpQ,EAAEO,OAAOhP,OAgS+B6iB,CAAcpU,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAciP,GACd9e,MAAO8e,GACP/P,SAAUyO,EACVxY,SAAU,SAACyJ,IA9S/C,SAAwBA,GACpBsQ,GAAUtQ,EAAEO,OAAOhP,OA6S6B8iB,CAAerU,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcmP,GACdhf,MAAOgf,GACPjQ,SAAUyO,EACVxY,SAAU,SAACyJ,IA3T/C,SAAwBA,GACpBwQ,GAAUxQ,EAAEO,OAAOhP,OA0T6B+iB,CAAetU,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcqP,GACdlf,MAAOkf,GACPnQ,SAAUyO,EACVxY,SAAU,SAACyJ,IAxU/C,SAAwBA,GACpB0Q,GAAU1Q,EAAEO,OAAOhP,OAuU6BgjB,CAAevU,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcuP,GACdpf,MAAOof,GACPrQ,SAAUyO,EACVxY,SAAU,SAACyJ,IArV/C,SAAwBA,GACpB4Q,GAAU5Q,EAAEO,OAAOhP,OAoV6BijB,CAAexU,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcyP,GACdtf,MAAOsf,GACPvQ,SAAUyO,EACVxY,SAAU,SAACyJ,IAlW/C,SAAwBA,GACpB8Q,GAAU9Q,EAAEO,OAAOhP,OAiW6BkjB,CAAezU,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAc2P,GACdxf,MAAOwf,GACPzQ,SAAUyO,EACVxY,SAAU,SAACyJ,IA/W/C,SAAwBA,GACpBgR,GAAUhR,EAAEO,OAAOhP,OA8W6BmjB,CAAe1U,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAc6P,GACd1f,MAAO0f,GACP3Q,SAAUyO,EACVxY,SAAU,SAACyJ,IA5X/C,SAAwBA,GACpBkR,GAAUlR,EAAEO,OAAOhP,OA2X6BojB,CAAe3U,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAc+P,GACd5f,MAAO4f,GACP7Q,SAAUyO,EACVxY,SAAU,SAACyJ,IAzY/C,SAAwBA,GACpBoR,GAAUpR,EAAEO,OAAOhP,OAwY6BqjB,CAAe5U,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAciQ,GACd9f,MAAO8f,GACP/Q,SAAUyO,EACVxY,SAAU,SAACyJ,IAtZ/C,SAAwBA,GACpBsR,GAAUtR,EAAEO,OAAOhP,OAqZ6BsjB,CAAe7U,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcmQ,GACdhgB,MAAOggB,GACPjR,SAAUyO,EACVxY,SAAU,SAACyJ,IAna/C,SAAwBA,GACpBwR,GAAUxR,EAAEO,OAAOhP,OAka6BujB,CAAe9U,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcqQ,GACdlgB,MAAOkgB,GACPnR,SAAUyO,EACVxY,SAAU,SAACyJ,IAhb/C,SAAwBA,GACpB0R,GAAU1R,EAAEO,OAAOhP,OA+a6BwjB,CAAe/U,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcuQ,GACdpgB,MAAOogB,GACPrR,SAAUyO,EACVxY,SAAU,SAACyJ,IA7b/C,SAAwBA,GACpB4R,GAAU5R,EAAEO,OAAOhP,OA4b6ByjB,CAAehV,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAcyQ,GACdtgB,MAAOsgB,GACPvR,SAAUyO,EACVxY,SAAU,SAACyJ,IA1c/C,SAAwBA,GACpB8R,GAAU9R,EAAEO,OAAOhP,OAyc6B0jB,CAAejV,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,sBAGxE,cAAChL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACQ,EAAA,EAAD,CACI9D,OAAO,SACPgE,WAAS,EACTC,MAAM,YACNC,KAAK,SACLC,KAAK,UACLC,GAAG,UACHK,aAAa,MACbyK,aAAc2Q,GACdxgB,MAAOwgB,GACPzR,SAAUyO,EACVxY,SAAU,SAACyJ,IAvd/C,SAAwBA,GACpBgS,GAAUhS,EAAEO,OAAOhP,OAsd6B2jB,CAAelV,IAC/BQ,UAAY,SAAAR,GAAC,OAAoB,KAAdA,EAAES,SAAgC,MAAdT,EAAES,UAAqBT,EAAEC,4BAK9E8O,GACF,cAACrO,GAAA,EAAD,CAAerP,UAAU,YAAzB,SACI,8BACI,cAACmG,EAAA,EAAD,CAAQpB,KAAK,SAASN,QAAQ,YAAYzE,UAAU,YAAY0G,QAASL,GAAzE,SACI,sBAAMrG,UAAU,kBAAhB,oC,cCjrBrB8jB,OApDf,SAAmBtkB,GAAQ,IAAD,EACME,mBAAS,IADf,mBACjBqkB,EADiB,KACRC,EADQ,KAEpBC,EAAKzkB,EAAM+O,YAAc/O,EAAM+O,WAAWhM,OAExC2hB,EAAO,CACXC,OAAQ,CAAC,IAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxIC,SAAU,CACR,CACEtf,MAAO,kBACPof,KAAMH,EACNM,MAAM,EACNC,OAAQ,EACRC,YAAa,EACbC,eAAgB,GAChBC,YAAa,GACbnjB,gBAAiB,UACjBojB,YAAa,aA6BnB,OAXA7kB,qBAAU,WACR,GAAIL,EAAMmlB,cAAe,CACvB,IACIC,EADKX,EACM9R,MAAM,EAAG3S,EAAMqlB,SAC9Bb,EAAWY,GAEVplB,EAAM+O,YAAc/O,EAAM+O,WAAWhM,QACtCyhB,EAAWxkB,EAAM+O,WAAWhM,UAE7B,CAAC/C,IAGF,mCACE,cAAC,QAAD,CAAM0kB,KAAMA,EAAMY,QA1BN,CACdC,OAAQ,CACJhkB,SAAS,GAEbikB,OAAQ,GAERte,QAAS,SAASiI,EAAGsW,EAAYF,GACnBE,EAAWC,cAEzBC,YAAY,EACZC,qBAAqB,GAgBiBngB,GAAG,gB,qBCtCvC1E,I,OAAYC,aAAW,SAACC,GAAD,OAC3BsH,YAAa,CACXrH,KAAM,CACFU,MAAO,IACPL,QAAS,QAEbH,MAAO,CACLY,QAASf,EAAMK,QAAQ,GACvBukB,UAAW,SACXhlB,MAAOI,EAAMqJ,QAAQuB,KAAKia,WAE5BC,gBAAiB,CACbrkB,UAAW,MACXqX,aAAc,aAKhBxM,GAAqBvL,aAAW,SAACC,GAAD,MAAY,CAC9CuL,MAAO,CACL3L,MAAOI,EAAMqJ,QAAQmC,OAAOC,OAE9BC,QAAS,CACP7K,gBAAiBb,EAAMqJ,QAAQmC,OAAOC,MACtCjG,SAAU,OACV/E,UAAW,iBACXgH,WAAY,uBAIlB,SAASkE,GAAiB5M,GACtB,IAAMqC,EAAUkK,KAChB,OAAO,cAACM,GAAA,EAAD,aAASL,OAAK,EAACnK,QAASA,EAAS7B,UAAU,QAAWR,IAGlD,SAASgmB,GAAMhmB,GAE1B,IAAMqC,EAAUtB,KAFiB,EAIOb,mBAAS,KAJhB,mBAIZ+lB,GAJY,aAKK/lB,mBAAS,KALd,mBAKbgmB,GALa,aAOKhmB,mBAAS,GAPd,gCAQHA,mBAAS,IARN,mBAQ1BmlB,EAR0B,aASSnlB,oBAAS,IATlB,mBAS1BilB,EAT0B,aAWPllB,IAAMC,SAAS,CACrCuZ,UAAU,EACVC,UAAU,KAbmB,gCAgBqBxZ,oBAAS,IAhB9B,mBAgB1BimB,EAhB0B,KAgBLC,EAhBK,OAiBiBlmB,oBAAS,GAjB1B,mBAiB1BmmB,EAjB0B,KAiBPC,EAjBO,OAkBWpmB,qBAlBX,gCAoBDA,oBAAS,IApBR,mBAoB1Bya,EApB0B,KAoBhBC,EApBgB,OAsBS1a,qBAtBT,mBAsB1BqmB,EAtB0B,KAsBXC,EAtBW,OAuBatmB,qBAvBb,mBAuB1BumB,EAvB0B,KAuBTC,EAvBS,OAyBTzmB,IAAMC,UAAS,GAzBN,mBAyB1BC,EAzB0B,KAyBpBC,EAzBoB,OA2BLH,IAAMC,SAAS,SA3BV,mBA2BlB8M,IA3BkB,WA6BjC3M,qBAAU,WACHsa,GACCva,GAAQ,GACRJ,EAAM0U,cAAa,IAGnBtU,GAAQ,KAEd,CAACua,IAEHta,qBAAU,WACNua,EAAY5a,EAAM2mB,iBACpB,CAAC3mB,EAAM2mB,gBAETtmB,qBAAU,WACN,IAAIumB,EAAM3W,SAAS4W,eAAe,YAC9BD,IACJX,EAAgBW,EAAIzlB,OAAS,IAC7B+kB,EAAeU,EAAIhlB,UAEpB,CAACqO,WAEJ5P,qBAAU,WACqB,OAAxB8lB,GAECG,GAAsBH,KAE3B,CAACA,IAEJ9lB,qBAAU,WACoB,OAAtBgmB,GACJD,GAAwBC,KAEzB,CAACA,IAEJ,IAAyB9X,GAMnBtB,GAAwBhN,IAAMiN,OAAO,MAsF3C,OApFAjN,IAAMI,WAAU,WACZ,GAAIF,EAAM,CAAC,IACUsN,EAAuBR,GAAhCS,QACmB,OAAvBD,GACAA,EAAmBE,WAG5B,CAACxN,IAEJE,qBAAU,WACN,IAAIib,EAAYzX,aAAaoH,QAAQ,kBAEjCmb,EADW,SAAZ9K,KAKL,IAEFjb,qBAAU,WACUwD,aAAaC,QAAQ,iBAAkBqiB,KACzD,CAACA,IAuBC9lB,qBAAU,WACPgmB,GAtBP,WACI,IAAItiB,EAAQF,aAAaoH,QAAQ,SAE7B6b,EAAoB,CACpB5b,aAFarH,aAAaoH,QAAQ,eAItCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,eAAkC,CACnCmC,OAAQ,OACRC,QAAS,CACTmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEfZ,KAAMC,KAAKC,UAAUyjB,KAExBxjB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH+iB,EAAiB/iB,MAMjBsjB,KAEN,CAACV,IA2BHhmB,qBAAU,WACH8lB,GA1BP,WACI,IAAIpiB,EAAQF,aAAaoH,QAAQ,SAE7B+b,EAAsB,CACtB9b,aAFarH,aAAaoH,QAAQ,eAItCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,iBAAoC,CACrCmC,OAAQ,OACRC,QAAS,CACTmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEfZ,KAAMC,KAAKC,UAAU2jB,KAExB1jB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACAA,EAAQC,QACP0iB,GAAuB,GACvBE,GAAqB,IAEzBI,EAAmBjjB,MAMnBwjB,KAEL,CAACd,IAEJ9lB,qBAAU,WACNimB,EAAqBtmB,EAAM+O,YAAc/O,EAAM+O,WAAWmY,gBAC3D,CAAClnB,EAAM+O,aAGN,cAACoY,EAAA,EAAD,CAAW3mB,UAAW6B,EAAQ0jB,gBAA9B,SACI,eAAC3hB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,eAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI6W,GAAI,GAAvC,UACI,cAACxW,EAAA,EAAD,CAAYxE,UAAU,mBAAtB,6BAGA,sBAAKA,UAAW6B,EAAQnB,KAAxB,UACI,cAAC8D,EAAA,EAAD,CAAYxE,UAAU,sBAAtB,sBACA,qBAAKA,UAAU,oBASf,qBAAKA,UAAU,QAAf,SACI,cAAC,GAAD,CAAW2kB,cAAeA,EAAeE,QAASA,EAAStW,WAAY/O,EAAM+O,kBAGrF,qBAAKvO,UAAU,gBAUf,cAACwE,EAAA,EAAD,CAAYxE,UAAU,iBAAtB,qBAEJ,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,sBAAf,SACI,wBAAOA,UAAU,SAAjB,UACI,uBAAO+E,KAAK,WACRC,KAAK,WACL3E,MAAM,UACNib,QAASqK,EACTzgB,SAAU,WACN0gB,GAAwBD,IAE5Brc,WAAY,CAAE,aAAc,sBAEhC,sBAAMtJ,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,qBAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAOK,MAAOslB,EAAsB,UAAY,IAAtE,wBAKR,cAAC/hB,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,oBAAf,SACI,wBAAOA,UAAU,SAAjB,UACI,uBAAO+E,KAAK,WACRC,KAAK,WACLsW,QAASuK,EACTxlB,MAAM,UACN6E,SAAU,WACN4gB,GAAsBD,IAE1Bvc,WAAY,CAAE,aAAc,sBAEhC,sBAAMtJ,UAAU,yBAI5B,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,SACI,qBAAKhb,UAAU,mBAAf,SACI,cAACwE,EAAA,EAAD,CAAYxE,UAAU,OAAOK,MAAOwlB,EAAoB,UAAY,GAApE,sBAKR,cAACjiB,EAAA,EAAD,CAAMI,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAG6W,GAAI,EAA7B,UAC6B,IAAxB2K,GACG,8BACI,cAAC,GAAD,CAAkBtX,UAAU,OAAOC,MAAM,eAAzC,SACI,qBAAKtO,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAkB0G,QAjLzB,WACpC9G,GAAQ,GACRJ,EAAM0U,cAAa,GACnB1H,GAAUuB,KA8KkB,SACI,cAAC,KAAD,CAAiB/N,UAAU,8BAOnD,cAACyd,GAAD,CAA0B9d,KAAMA,EAAMC,QAASA,EAAS2O,WAAY/O,EAAM+O,WAAYwX,cAAeA,EAAeC,iBAAkBA,EAAkBC,gBAAiBA,EAAiBC,mBAAoBA,EAAoBhS,aAAc1U,EAAM0U,oB,WClRhQ3T,GAAYC,aAAW,SAACC,GAAD,OACzBsH,YAAa,CACTrH,KAAM,CACFK,QAAS,QAEb8C,UAAW,CACP+iB,WAAYnmB,EAAMK,QAAQ,GAC1B+lB,cAAepmB,EAAMK,QAAQ,GAC7BI,UAAW,QAEf0I,QAAS,CACLC,SAAU,EACVlJ,OAAQ,QACRkX,SAAU,wBAKP,SAASiP,GAAKtnB,GAEzB,IAAMqC,EAAUtB,KAFgB,EAIEb,mBAAS,GAJX,mBAIzBqnB,EAJyB,aAMIrnB,mBAAS,KANb,mBAMzBuK,EANyB,KAMbC,EANa,OAQIxK,qBARJ,mBAQzBkL,EARyB,KAQb0I,EARa,OAUI5T,qBAVJ,mBAUzB6O,EAVyB,KAUbgF,EAVa,OAYR7T,qBAZQ,mBAYnBsnB,GAZmB,aAcQtnB,qBAdR,mBAczBunB,EAdyB,aAgBAvnB,oBAAS,IAhBT,mBAgBzBkY,EAhByB,KAgBf3D,EAhBe,OAkBFvU,oBAAS,GAlBP,mBAkBzBwnB,EAlByB,KAkBhBC,EAlBgB,OAoBEznB,oBAAS,GApBX,mBAoBzB0nB,EApByB,KAoBdC,EApBc,OAsBJ3nB,oBAAS,GAtBL,mBAsBzB4nB,EAtByB,KAsBjBC,EAtBiB,OAwBE7nB,oBAAS,GAxBX,mBAwBzBiL,EAxByB,KAwBdmF,EAxBc,OA0BMpQ,qBA1BN,oBA0BzBqN,GA1ByB,MA0BZya,GA1BY,SA4BA9nB,oBAAS,GA5BT,qBA4BzBgP,GA5ByB,MA4Bf+Y,GA5Be,SA8BE/nB,oBAAS,GA9BX,qBA8BzBsY,GA9ByB,MA8BdxN,GA9Bc,SAgCE9K,oBAAS,GAhCX,qBAgCzBgoB,GAhCyB,MAgCdxT,GAhCc,SAkCFxU,oBAAS,GAlCP,qCAoCIA,oBAAS,IApCb,qBAoCzBqb,GApCyB,MAoCb5G,GApCa,SAsCQzU,oBAAS,GAtCjB,qBAsCzBwd,GAtCyB,MAsCX9I,GAtCW,SAwCU1U,oBAAS,GAxCnB,qBAwCzBymB,GAxCyB,MAwCVwB,GAxCU,SA0CJloB,IAAMC,UAAS,GA1CX,qBA0CzBI,GA1CyB,MA0CjBkC,GA1CiB,SA4CFvC,IAAMC,SAAS,CACzCyO,WAAY,GACZC,MAAO,GACPwZ,MAAO,KA/CqB,qBA4CzB/T,GA5CyB,MA4ChBgU,GA5CgB,MAoFhC,SAASC,GAAS7d,GACd,IAAI1G,EAAQF,aAAaoH,QAAQ,SACjCjI,MAAM,UAAGlC,EAAQA,QAAX,cAAiC2J,EAAa,IAAK,CACrDxH,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,KAGtBT,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAUH,GATIA,GAAWA,EAAQC,MACnBqQ,EAAc,KACPtQ,IAAkC,IAAvBA,EAAQ8kB,YAC1BjY,GAAa,GACbyD,EAActQ,EAAQoQ,IAAIpQ,WAE1B6M,GAAa,GACbyD,EAActQ,EAAQoQ,IAAIpQ,WAEH,IAAvBA,EAAQ8kB,WAAsB,CAC9B,IAAIC,EAAW,IAAIC,KAAKhlB,EAAQoQ,IAAIpQ,QAAQ8U,YAC5CiP,EAAQgB,EAASE,eAErBlmB,IAAU,MAEbmmB,OAAM,SAACC,OA0BZ,OAvFAvoB,qBAAU,WACN,IAAIwoB,EAAahlB,aAAaoH,QAAQ,cAClC4d,GAAYne,EAAcI,OAAO+d,MACtC,IAEHxoB,qBAAU,WACN,IAAK6nB,GAAW,CAAC,IACTY,EASJ,OARIA,GAASpS,cAAcoS,GAC3BA,EAAUtS,aACV,WAEI,IAAIuS,EAAMllB,aAAaoH,QAAQ,cACnB,OAAR8d,GACJT,GAASS,KALkB,KAOvB,WACAD,GAASpS,cAAcoS,OAGpC,CAACZ,KAEJ7nB,qBAAU,cACP,CAAC0O,IAEJ1O,qBAAU,WACFoK,IACA5G,aAAaC,QAAQ,aAAc2G,GACnC5G,aAAaC,QAAQ,eAAgB2jB,GACrCjlB,IAAU,GACV8lB,GAAS7d,MAEd,CAACA,IAwDA,sBAAKjK,UAAW6B,EAAQnB,KAAxB,UACI,cAACqD,EAAA,EAAD,IACA,8BACI,cAACgF,GAAD,MAEJ,uBAAM/I,UAAW6B,EAAQ+H,QAAzB,UACI,qBAAK5J,UAAW6B,EAAQ6H,UACxB,eAACid,EAAA,EAAD,CAAW6B,SAAS,KAAKxoB,UAAW6B,EAAQgC,UAA5C,UACI,eAACD,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGd,UAAU,gBAAtC,UACI,cAAC4D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACsM,GAAD,CAAiBiC,WAAYA,EAAYC,GAnCrE,WACIsB,GAAcnF,GACd8c,IAAY,GACZ,IAAIlkB,EAAQF,aAAaoH,QAAQ,SAE7Bie,EAAiB,CACjBhe,aAFarH,aAAaoH,QAAQ,eAItCjI,MAAM,GAAD,OAAIlC,EAAQA,QAAZ,gBAAmC,CACpCmC,OAAQ,OACRC,QAAS,CACLmI,OAAQ,mBACR,eAAgB,mBAChBC,cAAevH,GAEnBZ,KAAMC,KAAKC,UAAU6lB,KAExB5lB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHukB,GAAevkB,OAgBoE8J,YAAaA,GAAa2B,SAAUA,SAG3G,cAAC9K,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACuR,GAAD,CAAsBhD,WAAYA,QAG1C,cAAC3K,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACsU,GAAD,CAAehB,cAAeA,EAAepJ,cAAeA,QAGpE,cAACtG,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAAC4T,GAAD,CAAY0T,OAAQA,EAAQC,UAAWA,EAAWhZ,WAAYA,EAAYsZ,WAAYA,GAAYhU,QAASA,GAAS+D,SAAUA,EAAU3D,YAAaA,EAAaC,aAAcA,GAAcC,cAAeA,GAAeC,gBAAiBA,SAGrP,cAACxQ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACiT,GAAD,CAAiBmU,UAAWA,EAAWC,aAAcA,EAAc9Y,WAAYA,EAAYgF,cAAeA,EAAeD,cAAeA,EAAepJ,cAAeA,EAAepK,OAAQA,GAAQkC,UAAWA,SAGxN,cAAC4B,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACsX,GAAD,CAAQM,SAAUA,EAAU3D,YAAaA,EAAaiT,QAASA,EAAS3Y,WAAYA,EAAYsF,QAASA,YAIrH,eAACjQ,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,UACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAAC8X,GAAD,CAAWE,UAAWA,GAAWxN,aAAcA,GAAc+D,WAAYA,QAGjF,cAAC3K,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAG6W,GAAI,EAA9B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACgZ,GAAD,CAAkBzK,WAAYA,EAAYgF,cAAeA,EAAewT,UAAWA,EAAWI,WAAYA,EAAYtT,QAASA,GAASgU,WAAYA,GAAY3d,cAAeA,EAAewd,UAAWA,GAAWxT,aAAcA,GAAc6G,WAAYA,GAAY5G,cAAeA,YAInS,cAACvQ,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,SACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAI6W,GAAI,GAA/B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SACI,cAACyb,GAAD,CAAkBlN,WAAYA,EAAYgF,cAAeA,EAAe4T,WAAYA,EAAYtT,QAASA,GAASgU,WAAYA,GAAY3d,cAAeA,EAAewd,UAAWA,GAAWxT,aAAcA,GAAcgJ,aAAcA,GAAc9I,gBAAiBA,WAInR,cAACxQ,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAzB,SACI,cAAC8C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIE,GAAI,GAAI6W,GAAI,GAA/B,SACI,cAACyN,EAAA,EAAD,CAAMzoB,UAAU,OAAhB,SAEI,cAACwlB,GAAD,CAAOjX,WAAYA,EAAYgF,cAAeA,EAAesU,WAAYA,GAAYhU,QAASA,GAASK,aAAcA,GAAciS,cAAeA,GAAewB,iBAAkBA,iBAMvM,8BACI,cAAC3d,GAAD,CAASE,cAAeA,EAAeD,WAAYA,EAAYW,WAAYA,EAAYwc,UAAWA,EAAWC,aAAcA,EAAc7c,aAAcA,OAE3J,cAAC,EAAD,CAAS1K,OAAQA,GAAQkC,UAAWA,Q,cC3OjC2mB,GAZM,SAAC,GAAqC,IAAzBC,EAAwB,EAAnC9kB,UAAyB+kB,EAAU,8BAClDtlB,EAAQF,aAAaoH,QAAQ,SAEjC,OACI,cAAC,IAAD,2BAAWoe,GAAX,IAAiBC,OAAQ,SAAAtpB,GAAK,OAC1B+D,EACI,cAACqlB,EAAD,eAAeppB,IACjB,cAAC,IAAD,CAAUoG,GAAG,WCEZmjB,GATK,SAAC,GAAiD,IAArCH,EAAoC,EAA/C9kB,UAAqC+kB,GAAU,EAAzBG,WAAyB,4CAEjE,OACI,cAAC,IAAD,2BAAWH,GAAX,IAAiBC,OAAQ,SAAAtpB,GAAK,OAC1B,cAACopB,EAAD,eAAeppB,SCEZ,SAASypB,KAEpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,GAAD,CAAaC,OAAK,EAACplB,UAAWpC,EAAOynB,KAAK,MAC1C,cAAC,GAAD,CAAaD,OAAK,EAACplB,UAAWsC,EAAgB+iB,KAAK,qBACnD,cAAC,GAAD,CAAcD,OAAK,EAACplB,UAAWqD,EAAegiB,KAAK,oBACnD,cAAC,GAAD,CAAcD,OAAK,EAACplB,UAAWgjB,GAAMqC,KAAK,UAC1C,cAAC,GAAD,CAAaA,KAAK,IAAIL,OAAQ,kBAAM,cAAC,IAAD,CAAUljB,GAAG,c,OCTlDwjB,OANf,WACE,OACE,cAACH,GAAD,KCOWI,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzmB,MAAK,YAAkD,IAA/C0mB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,GAAD,MAEFra,SAAS4W,eAAe,SAG1BgD,O","file":"static/js/main.72b81237.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function Spinner(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(props.loader)\r\n    }, [props])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog className=\"spinner\" onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n                {open ?\r\n                    <CircularProgress  color=\"secondary\"/>\r\n                : ''}\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","const baseUrl= {\r\n    // baseUrl:'http://192.168.137.8:7272/'\r\n    baseUrl:'http://113.193.29.68:7272/'\r\n}\r\n\r\nexport default baseUrl\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useFormik } from 'formik';\r\nimport Spinner from \"./Spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport baseUrl from '../config/config';\r\nimport '../styles/login.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(15),\r\n    },\r\n    form: {\r\n        width: '89%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(4, 0, 3),\r\n        color: '#fff',\r\n        backgroundColor: '#5e5e5e',\r\n        '&:hover': {\r\n            background: '#5e5e5e',\r\n        },\r\n        padding: '10px 16px',\r\n        borderRadius: '1px',\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    const [loader, setLoader] = React.useState(false);\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    const initialValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n       \r\n    const onSubmit = values => {\r\n        setLoader(true)\r\n        fetch(`${baseUrl.baseUrl}login/`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email: values.email, password: values.password})\r\n        }).then((res)=>res.json()).then((results)=>{\r\n            if (results.error) {\r\n                setErrMsg(results.error)\r\n                setLoader(false)\r\n                setTimeout(() => { setErrMsg('') }, 4000);\r\n            } else if(results.password_status) {\r\n                setLoader(false)\r\n                setOpen(true)\r\n                localStorage.setItem('token',results.token)\r\n                history.push('./home')\r\n            } else if(!results.password_status) {\r\n                setLoader(false)\r\n                setOpen(true)\r\n                localStorage.setItem('token',results.token)\r\n                history.push('/reset_password', [{ email: values.email, password: values.password, token: results.token }]);\r\n            }\r\n        })\r\n    }\r\n        \r\n    const validate = values => {\r\n        let errors = {}\r\n\r\n        if (!values.email) {\r\n            errors.email = 'Please enter valid email id'\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email id address';\r\n        } \r\n        if (!values.password) {\r\n            errors.password = 'Please enter valid password'\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    })\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7}>\r\n                <div className=\"vertaag_log\">\r\n                    <img src=\"/assets/image/login_img.png\" />\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={5} square>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" className=\"heading-title\">\r\n                        LOGIN TO YOUR ACCOUNT\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                        <TextField className={classes.textFiled}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Email Id\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MailOutlineIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? <div className=\"error\">{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.password}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password ? <div className=\"error\">{formik.errors.password}</div> : null}\r\n                        <Grid item xs>\r\n                            <div className=\"error\">\r\n                                <span className=\"text\">{errMsg}</span>\r\n                                <div className=\"forgot-title\">\r\n                                    <NavLink to=\"/forgot_password\" className=\"forgot-word-line\">\r\n                                        Forgot Password?\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                        <FormControlLabel\r\n                            className=\"remember text\"\r\n                            control={\r\n                                <Checkbox\r\n                                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                    checkedIcon={<CheckBoxIcon fontSize=\"small\" color=\"primary\" />}\r\n                                    name=\"checkedI\"\r\n                                />\r\n                            }\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            className={classes.submit}\r\n                            type=\"submit\"\r\n                        >\r\n                            <span className=\"text\">LOGIN</span>\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n            <Spinner loader={loader}/>\r\n        </Grid>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport { useFormik } from 'formik';\r\nimport Spinner from \"./Spinner\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport baseUrl from '../config/config';\r\nimport '../styles/forgotPassword.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(15),\r\n    },\r\n    form: {\r\n        width: '89%',\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(4, 0, 3),\r\n        color: '#fff',\r\n        backgroundColor: '#5e5e5e',\r\n        '&:hover': {\r\n            background: '#5e5e5e',\r\n        },\r\n        padding: ' 10px 16px',\r\n        borderRadius: '1px',\r\n    },\r\n}));\r\n\r\nexport default function ForgotPassword() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [loader, setLoader] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        console.log('loader');\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n    \r\n    const initialValues = {\r\n        email: '',\r\n    }\r\n    \r\n    const onSubmit = values => {\r\n        setLoader(true); \r\n        fetch(`${baseUrl.baseUrl}password/create/`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({email: values.email})\r\n        }).then((res)=>res.json()).then((results)=>{\r\n            if (results.status === 200) {\r\n                setLoader(false)\r\n                setOpen(true)\r\n            } else {\r\n                setErrMsg(results.error)\r\n                setLoader(false)\r\n                setTimeout(() => { setErrMsg('') }, 5000);\r\n            }\r\n        })\r\n    }\r\n    \r\n    const validate = values => {\r\n        let errors = {}\r\n        \r\n        if (!values.email) {\r\n            errors.email = 'Please enter valid email id'\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email id address';\r\n        } \r\n        return errors;\r\n    }\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={10} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    })\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7}>\r\n                <div className=\"vertaag_log_forgot\">\r\n                    <img src=\"/assets/image/login_img.png\" />\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" className=\"forgot_title\">\r\n                        FORGOT PASSWORD\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                        <TextField className={classes.textFiled}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Email Id\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MailOutlineIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? <div className=\"error\">{formik.errors.email}</div> : null}\r\n                        <div className=\"error\">\r\n                            <span>{errMsg}</span>\r\n                        </div>\r\n                        <Button\r\n                            fullWidth\r\n                            className={classes.submit}\r\n                            type=\"submit\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <span className=\"text\">SEND</span>\r\n                        </Button>\r\n                    </form>\r\n                    <Snackbar \r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }} \r\n                        open={open} \r\n                        autoHideDuration={5000} \r\n                        onClose={handleClose}\r\n                    >\r\n                        <Alert className=\"alert_message\" onClose={handleClose} severity=\"success\">\r\n                            Forget password request have been sent to admin account ..!\r\n                        </Alert>\r\n                    </Snackbar>\r\n                    <Grid item xs>\r\n                        <div>\r\n                            <NavLink to=\"/\" className=\"go_back_line text\">\r\n                                Go back to login\r\n                            </NavLink>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n            <Spinner loader={loader}/>\r\n        </Grid>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\nimport { useFormik } from 'formik';\r\nimport Spinner from \"./Spinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport baseUrl from '../config/config';\r\nimport '../styles/resetPassword.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: theme.spacing(15),\r\n    },\r\n    form: {\r\n        width: '89%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(4, 0, 3),\r\n        color: '#fff',\r\n        backgroundColor: '#5e5e5e',\r\n        '&:hover': {\r\n            background: '#5e5e5e',\r\n        },\r\n        padding: ' 10px 16px',\r\n        borderRadius: '1px',\r\n    },\r\n}));\r\n\r\nexport default function ResetPassword(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [token, setToken] = useState('');\r\n    const [new_password, setnew_password] = useState('');\r\n    const [old_password, setOldPassword] = useState('');\r\n    const [confirm_password, setconfirm_password] = useState('');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [loader, setLoader] = React.useState(false);\r\n\r\n    const initialValues = {\r\n        old_password:'',\r\n        new_password: '',\r\n        confirm_password:''\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(props.history && props.history.location && props.history.location.state &&\r\n            props.history.location.state.length > 0) {\r\n            setEmail(props.history.location.state[0].email)\r\n            setPassword(props.history.location.state[0].password)\r\n            setToken(props.history.location.state[0].token)\r\n        }\r\n    },[props])\r\n    \r\n    const onSubmit = values => {\r\n        if (values.new_password !== values.confirm_password) {\r\n        } \r\n        setLoader(true); \r\n        fetch(`${baseUrl.baseUrl}password/reset/`, {\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify({email: email, old_password: values.old_password, \r\n            new_password: values.new_password, new_password_confirmation: values.confirm_password})\r\n            }).then((res)=>res.json()).then((results)=>{\r\n            if (results.error) {\r\n                setErrMsg(results.error)\r\n                setLoader(false)\r\n                setTimeout(() => { setErrMsg('') }, 5000);\r\n            } else if(results.password_status) {\r\n                setErrMsg(results.error)\r\n                setLoader(false)\r\n                setOpen(true)\r\n                history.push('/')\r\n            } \r\n        })\r\n    }\r\n    \r\n    const validate = values => {\r\n        let errors = {}\r\n\r\n        if (!values.old_password) {\r\n            errors.old_password = 'Please enter your current password';\r\n        }\r\n        if (!values.new_password) {\r\n            errors.new_password = 'Please enter new password';\r\n        }\r\n        if (!values.confirm_password) {\r\n            errors.confirm_password = 'Please enter confirm password';\r\n        }\r\n        if(values.confirm_password !== '' && values.new_password !== ''){\r\n            if (values.confirm_password !== values.new_password) {  \r\n                errors.confirm_password = 'New password and confirm password does not match';\r\n            }\r\n        }\r\n        if(values.old_password !== '' && values.password !== ''){\r\n            if (values.old_password !== password) {  \r\n                errors.old_password = 'Current password does not match';\r\n            }\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    })\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7}>\r\n                <div className=\"vertaag_logo_reset_password\">\r\n                    <img src=\"/assets/image/login_img.png\" />\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" className=\"reset_title\">\r\n                        RESET YOUR PASSWORD\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\r\n                        <TextField className={classes.textFiled}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Email Id\"\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <MailOutlineIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        <TextField className={classes.textFiled}\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Current Password\"\r\n                            type=\"password\"\r\n                            name=\"old_password\"\r\n                            id=\"old_password\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.old_password}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <VpnKeyOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        {formik.touched.old_password && formik.errors.old_password ? <div className=\"error\">{formik.errors.old_password}</div> : null}\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"New Password\"\r\n                            type=\"password\"\r\n                            name=\"new_password\"\r\n                            id=\"new_password\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.new_password}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        {formik.touched.new_password && formik.errors.new_password ? <div className=\"error\">{formik.errors.new_password}</div> : null}\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            name=\"confirm_password\"\r\n                            id=\"confirm_password\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.confirm_password}\r\n                            autoComplete=\"off\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <LockOutlinedIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        {formik.touched.confirm_password && formik.errors.confirm_password ? <div className=\"error\">{formik.errors.confirm_password}</div> : null}\r\n                        <div className=\"error\">\r\n                            <span>{errMsg}</span>\r\n                        </div>\r\n                        <Button\r\n                            fullWidth\r\n                            className={classes.submit}\r\n                            type=\"submit\"\r\n                        >\r\n                            <span classes=\"submit_btn\">RESET PASSWORD</span>\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n            <Spinner loader={loader}/>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport '../../styles/header.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: '40px',\r\n            backgroundColor: 'white',\r\n            color: 'black',\r\n            '&:hover':\r\n            {\r\n                backgroundColor: 'White',\r\n            },\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(3),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            cursor: 'pointer',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100% !important',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function Header() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className={classes.appBar} className=\"header\">\r\n                <Toolbar>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search..\"\r\n                            className=\"search_title\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport baseUrl from '../../config/config';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../../styles/sidebar.css';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n            backgroundColor: '#2c3742 !important',\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        content: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.default,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SideBar(props) {\r\n   \r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [selectedID, setSelectedID] = useState();\r\n\r\n    const [incList, setIncList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getList()\r\n    }, []);\r\n    \r\n    // code for highlighting\r\n\r\n    useEffect(()=>{\r\n        setSelectedID(Number(props.selectedID))\r\n    },[props.selectedID])\r\n\r\n    useEffect(()=>{\r\n        if(incList !== undefined && incList.length ===0){\r\n            props.setShowImage(false);\r\n        }\r\n        else{\r\n            props.setShowImage(true);\r\n        }\r\n        var sidbar_tab = localStorage.getItem('selectedId')\r\n        if(!sidbar_tab){\r\n            if(incList && incList.length>0){\r\n            props.setSelectedID(incList[0].incubator_id)\r\n            setSelectedID(Number(incList[0].incubator_id))\r\n            } \r\n        }\r\n    },[incList])\r\n\r\n    useEffect(()=>{\r\n        if(props.openModal){\r\n            setOpen(true)\r\n        }\r\n    },[props.openModal])\r\n\r\n    useEffect(() => {\r\n        if (props.updateList) {\r\n            getList()\r\n            props.setSelectedID(props.updateList)\r\n        }\r\n    }, [props.updateList])\r\n\r\n    function logout(){\r\n        localStorage.clear()\r\n        history.push('/');\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        props.setOpenModal(false)\r\n    };\r\n\r\n    function getList(){\r\n        var token = localStorage.getItem('token') \r\n        fetch(`${baseUrl.baseUrl}incubator/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setIncList(results.incubators_list)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n            anchor=\"right\"\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <div className=\"sidebar\">\r\n                    <img src=\"/assets/image/sidebar_logo.png\" className=\"sidebar_img\"/>\r\n                </div>  \r\n            </div>\r\n            <Divider />\r\n            <List className=\"incube_list\">\r\n                {incList&&incList.map((text, index) => (\r\n                    <ListItem button key={text.incubator_id} selected={selectedID===text.incubator_id} onClick={()=>{props.setSelectedID(text.incubator_id)}}>\r\n                        <ListItemText primary={\"ID:\" + ' ' + text.incubator_id + ' ' + text.name + \":\" + ' ' + text.start_date + ' ' + \"-\" + ' ' + text.end_date} className=\"list\" /> \r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <div>\r\n                <Typography variant=\"h6\" className=\"sidebar_footer\">\r\n                    <PowerSettingsNewIcon className=\"logout_icon\" />\r\n                    <span className=\"logout_btn text\" onClick={logout}>Logout</span>\r\n                </Typography>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useFormik } from 'formik';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport baseUrl from \"../../config/config\";\r\nimport '../../styles/cropDetailModel.css';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function CropDetailModal(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n\r\n    const[id, setId] = useState();\r\n\r\n    const[name, setName] = useState();\r\n\r\n    const[edit, setEdit] = React.useState(true);\r\n\r\n    useEffect(()=>{\r\n        if(props && props.cropDetails){\r\n            setId(props.cropDetails.incubator_id);\r\n            setName(props.cropDetails.name);\r\n            formik.setFieldValue(\"crop_name\", props.cropDetails.name)\r\n        }\r\n    },[props])\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        if(props.inCubeData){\r\n            props.cb();\r\n            setOpen(true);\r\n            setScroll(scrollType);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() =>{\r\n        setOpen(props.open)\r\n    },[props.open])\r\n\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    function temp(input) {\r\n        if (input.target.value < -40) input.target.value = -40;\r\n        if (input.target.value > 158) input.target.value = 158;\r\n        formik.setFieldValue(\"temp\", input.target.value)\r\n    }\r\n\r\n    function co2(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"co2\", input.target.value);\r\n    }\r\n\r\n    function humidity(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"humidity\", input.target.value);\r\n    }\r\n\r\n    function electrical_conductivity(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 10) input.target.value = 10;\r\n        formik.setFieldValue(\"electrical_conductivity\", input.target.value);\r\n    }\r\n\r\n    function pH(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 14) input.target.value = 14;\r\n        formik.setFieldValue(\"pH\", input.target.value);\r\n    }\r\n\r\n    function deep_red(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"deep_red\", input.target.value);\r\n    }\r\n\r\n    function red(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"red\", input.target.value);\r\n    }\r\n\r\n    function white(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"white\", input.target.value);\r\n    }\r\n\r\n    function blue(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"blue\", input.target.value);\r\n    }\r\n\r\n    function deep_blue(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"deep_blue\", input.target.value);\r\n    }\r\n\r\n    function uv(input) {\r\n        if (input.target.value < 0) input.target.value = 0;\r\n        if (input.target.value > 100) input.target.value = 100;\r\n        formik.setFieldValue(\"uv\", input.target.value)\r\n    }\r\n\r\n    const initialValues = {\r\n        crop_name: '',\r\n        temp: '',\r\n        co2: '',\r\n        humidity: '',\r\n        electrical_conductivity: '',\r\n        pH: '',\r\n        deep_red: '',\r\n        red: '',\r\n        white: '',\r\n        blue: '',\r\n        deep_blue: '',\r\n        uv: '',\r\n        start_date: '',\r\n        end_date: ''\r\n    }\r\n\r\n    useEffect(()=>{\r\n       if(props.cropDetails){\r\n           formik.setFieldValue(\"temp\", props.cropDetails.temperature);\r\n           formik.setFieldValue(\"co2\", props.cropDetails.co2);\r\n           formik.setFieldValue(\"humidity\", props.cropDetails.humidity);\r\n           formik.setFieldValue(\"electrical_conductivity\", props.cropDetails.electrical_conductivity);\r\n           formik.setFieldValue(\"pH\", props.cropDetails.pH);\r\n           formik.setFieldValue(\"deep_red\", props.cropDetails.deep_red);\r\n           formik.setFieldValue(\"red\", props.cropDetails.red);\r\n           formik.setFieldValue(\"white\", props.cropDetails.white);\r\n           formik.setFieldValue(\"blue\", props.cropDetails.blue);\r\n           formik.setFieldValue(\"deep_blue\", props.cropDetails.deep_blue);\r\n           formik.setFieldValue(\"uv\", props.cropDetails.uv);\r\n           formik.setFieldValue(\"start_date\", props.cropDetails.start_date);\r\n           formik.setFieldValue(\"end_date\", props.cropDetails.end_date);\r\n       }\r\n    },[props.cropDetails])\r\n\r\n    function updateFormMode(e) {\r\n        e.preventDefault();\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        var token = localStorage.getItem(\"token\");\r\n        var selectedId = localStorage.getItem(\"selectedId\");\r\n        var postCropData ={\r\n            atmosphere:{\r\n                incubator_id: selectedId,\r\n                name: values.crop_name,\r\n                temp: values.temp,\r\n                co2: values.co2,\r\n                humidity: values.humidity,\r\n                electrical_conductivity: values.electrical_conductivity,\r\n                pH: values.pH,\r\n                start_date: values.start_date,\r\n                end_date: values.end_date,\r\n            },\r\n            light:{\r\n                deep_red: values.deep_red,\r\n                red: values.red,\r\n                white: values.white,\r\n                blue: values.blue,\r\n                deep_blue: values.deep_blue,\r\n                uv: values.uv,\r\n            },\r\n        };\r\n        fetch(`${baseUrl.baseUrl}addincubatordata/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: token,\r\n            },\r\n            body: JSON.stringify(postCropData),\r\n          })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setEdit(!edit)\r\n        });\r\n    }\r\n\r\n    const validate = (values) => {\r\n       \r\n        let errors = {}\r\n\r\n        if(!values.crop_name) {  \r\n            errors.crop_name = 'Please enter crop name.'\r\n        }\r\n        if(!values.temp) {\r\n            errors.temp = 'Please enter temperature value.'\r\n        } \r\n        if(!values.co2) {\r\n            errors.co2 = 'Please enter CO₂ value.'\r\n        }\r\n        if(!values.humidity) {\r\n            errors.humidity = 'Please enter humidity value.'\r\n        }\r\n        if(!values.electrical_conductivity) {\r\n            errors.electrical_conductivity = 'Please enter electrolyte value.'\r\n        }\r\n        if(!values.pH) {\r\n            errors.pH = 'Please enter pH value.'\r\n        }\r\n        if(!values.deep_red) {\r\n            errors.deep_red = 'Please enter deep red value.'\r\n        }\r\n        if(!values.red) {\r\n            errors.red = 'Please enter red value.'\r\n        }\r\n        if(!values.white) {\r\n            errors.white = 'Please enter white value.'\r\n        }\r\n        if(!values.blue) {\r\n            errors.blue = 'Please enter blue value.'\r\n        }\r\n        if(!values.deep_blue) {\r\n            errors.deep_blue = 'Please enter deep blue value.'\r\n        }\r\n        if(!values.uv) {\r\n            errors.uv = 'Please enter uv value.'\r\n        }\r\n        if(!values.start_date) {\r\n            errors.start_date = 'Please enter start date.'\r\n        }\r\n        if(!values.end_date) {\r\n            errors.end_date = 'Please enter end date.'\r\n        }\r\n        return errors;  \r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapTooltip classname=\"text\" title=\"Preset Program\">\r\n                <div className={props.inCubeData? \" \" : \"IscropdetailBtn\"}>\r\n                    <div className={props.inCubeData? \"crop_detail\" : \" crop_detail IscropdetailBtn\"} onClick={handleClickOpen()}>\r\n                        <p className={props.inCubeData?\"crop_detail_title text\" : \"text IscropdetailBtn\"}>Crop Detail</p>\r\n                        <DescriptionIcon className={props.inCubeData?\"description_icon \":\"description_icon  IscropdetailBtn\"} />\r\n                    </div>\r\n                </div>\r\n            </BootstrapTooltip>\r\n            <Dialog\r\n                open={open}\r\n                scroll={scroll}\r\n                className=\"crop_detail_model_width\"\r\n            >\r\n                 <div className=\"crop_detail_title_heading\">\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={2} md={2}>\r\n                                <div className=\"back_text_center\">\r\n                                    <div className=\"back_icon\" onClick={handleClose}>\r\n                                        <ArrowBackIcon className=\"go_back_icon\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} md={8}>\r\n                                <div className=\"crop_title\">\r\n                                    <span className=\"text\">Kindly Fill The Crop Detail's Here</span>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2}>\r\n                                {props.showEdit ? (\r\n                                <div className=\"edit_text_center\">\r\n                                    <div className=\"edit_icon\">\r\n                                        <CreateIcon className=\"go_edit_icon\" \r\n                                         onClick={(e) => updateFormMode(e)}\r\n                                         color={edit ? \"primary\" : \"\"}      \r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                ): null}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                </div>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <DialogContentText className=\"text\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Incubator Id*\"\r\n                                        type=\"text\"\r\n                                        name=\"incubator_id\"\r\n                                        id=\"incubator_id\"\r\n                                        value={\"Incubator Id No. - \" + id}\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Crop Name*\"\r\n                                        type=\"text\"\r\n                                        name=\"crop_name\"\r\n                                        id=\"crop_name\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.crop_name}\r\n                                    />\r\n                                    {formik.touched.crop_name && formik.errors.crop_name ? <div className=\"error\">{formik.errors.crop_name}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"temp_label\">\r\n                                        Temperature (-40 to 158F)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Temperature Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"temp\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.temp}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            temp(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.temp && formik.errors.temp ? <div className=\"error\">{formik.errors.temp}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"co2_label\">\r\n                                        CO₂ (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter CO₂ Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"co2\"\r\n                                        id=\"min_co2\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.co2}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            co2(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.co2 && formik.errors.co2 ? <div className=\"error\">{formik.errors.co2}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"humidity_label\">\r\n                                        Humidity (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Humidity value*\"\r\n                                        type=\"number\"\r\n                                        name=\"humidity\"\r\n                                        id=\"min_humidity\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.humidity}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            humidity(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.humidity && formik.errors.humidity ? <div className=\"error\">{formik.errors.humidity}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"electrolyte_label\">\r\n                                        Electrolyte (0 to 10)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Electrolyte Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"electrical_conductivity\"\r\n                                        id=\"min_electrical_conductivity\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.electrical_conductivity}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            electrical_conductivity(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.electrical_conductivity && formik.errors.electrical_conductivity ? <div className=\"error\">{formik.errors.electrical_conductivity}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"electrolyte_label\">\r\n                                        pH (0 to 14)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter pH Value*\"\r\n                                        type=\"text\"\r\n                                        name=\"pH\"\r\n                                        id=\"min_pH\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.pH}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            pH(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                    />\r\n                                    {formik.touched.pH && formik.errors.pH ? <div className=\"error\">{formik.errors.pH}</div> : null}\r\n                                </Grid>\r\n                            </Grid> */}\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"deep_red_label\">\r\n                                        Deep Red (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Deep Red Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"deep_red\"\r\n                                        id=\"deep_red\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.deep_red}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            deep_red(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.deep_red && formik.errors.deep_red ? <div className=\"error\">{formik.errors.deep_red}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"deep_red_label\">\r\n                                        Red (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Red Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"red\"\r\n                                        id=\"red\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.red}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            red(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.red && formik.errors.red ? <div className=\"error\">{formik.errors.red}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"deep_red_label\">\r\n                                        White (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter White Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"white\"\r\n                                        id=\"white\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.white}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            white(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.white && formik.errors.white ? <div className=\"error\">{formik.errors.white}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"deep_red_label\">\r\n                                        Blue (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Blue Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"blue\"\r\n                                        id=\"blue\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.blue}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            blue(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.blue && formik.errors.blue ? <div className=\"error\">{formik.errors.blue}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"deep_red_label\">\r\n                                        Deep Blue (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter Deep Blue Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"deep_blue\"\r\n                                        id=\"deep_blue\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.deep_blue}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            deep_blue(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.deep_blue && formik.errors.deep_blue ? <div className=\"error\">{formik.errors.deep_blue}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"deep_red_label\">\r\n                                        UV (0 to 100%)*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"Please Enter UV Value*\"\r\n                                        type=\"number\"\r\n                                        name=\"uv\"\r\n                                        id=\"uv\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        value={formik.values.uv}\r\n                                        onChange={(e)=>{\r\n                                            formik.handleChange(e);\r\n                                            uv(e)\r\n                                        }}\r\n                                        onBlur={formik.handleBlur}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                    {formik.touched.uv && formik.errors.uv ? <div className=\"error\">{formik.errors.uv}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"start_date_label\">\r\n                                        Start Date*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        type=\"date\"\r\n                                        name=\"start_date\"\r\n                                        id=\"start_date\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.start_date}\r\n                                    />\r\n                                    {formik.touched.start_date && formik.errors.start_date ? <div className=\"error\">{formik.errors.start_date}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3} className=\"input_field\">\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <div className=\"end_date_label\">\r\n                                        End Date*\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        type=\"date\"\r\n                                        name=\"end_date\"\r\n                                        id=\"end_date\"\r\n                                        autoComplete=\"off\"\r\n                                        disabled={edit}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.end_date}\r\n                                    />\r\n                                    {formik.touched.end_date && formik.errors.end_date ? <div className=\"error\">{formik.errors.end_date}</div> : null}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                        {!edit && \r\n                        <DialogActions className=\"text_left\">\r\n                            <div>\r\n                                <Button type=\"submit\" variant=\"contained\" className=\"btn_color\" onClick={handleClose}>\r\n                                    <span className=\"text text_color\">Submit</span>\r\n                                </Button>\r\n                            </div>\r\n                        </DialogActions>\r\n                        }\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport '../../styles/manualNewEntryModdal.css';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n      fontFamily: 'Lucida Sans Lucida Sans Regular Lucida Grande Lucida Sans Unicode Geneva, Verdana, sans-serif !important',\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\nexport default function ThreeMonthWaterCycleModal(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n\r\n    const handleClose = () => {\r\n        // setOpen(false);\r\n        props.setOpenModal(false);\r\n    };\r\n\r\n    useEffect(() =>{\r\n        setOpen(props.open)\r\n    },[props.open])\r\n\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n  \r\n    var inputTypeNumbers = document.querySelectorAll(\"input[type=number]\");\r\n        for (var a = 0; a < inputTypeNumbers.length; a++) {\r\n            inputTypeNumbers[a].onwheel = function (event) {\r\n            event.target.blur();\r\n        };\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.openModal}\r\n                scroll={scroll}\r\n                className=\"crop_detail_model_width\"\r\n            >\r\n                 <div className=\"crop_detail_title_heading\">\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={2} md={2}>\r\n                                <div className=\"back_text_center\">\r\n                                    <div className=\"back_icon\" onClick={handleClose}>\r\n                                        <ArrowBackIcon className=\"go_back_icon\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} md={8}>\r\n                                <div className=\"crop_title\">\r\n                                    <span className=\"text\">Water Cycle Detail's (Logs)</span>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                </div>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <form >\r\n                        <DialogContentText className=\"text\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"0 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_0\"\r\n                                        defaultValue=\"7\"\r\n                                        id=\"hour_0\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"1 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_1\"\r\n                                        id=\"hour_1\"\r\n                                        defaultValue=\"3\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"2 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_2\"\r\n                                        id=\"hour_2\"\r\n                                        defaultValue=\"1\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"3 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_3\"\r\n                                        id=\"hour_3\"\r\n                                        defaultValue=\"9\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"4 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_4\"\r\n                                        id=\"hour_4\"\r\n                                        defaultValue=\"2\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"5 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_5\"\r\n                                        id=\"hour_5\"\r\n                                        defaultValue=\"5\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"6 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_6\"\r\n                                        id=\"hour_6\"\r\n                                        defaultValue=\"4\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"7 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_7\"\r\n                                        id=\"hour_7\"\r\n                                        defaultValue=\"1\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"8 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_8\"\r\n                                        id=\"hour_8\"\r\n                                        defaultValue=\"8\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"9 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_9\"\r\n                                        id=\"hour_9\"\r\n                                        defaultValue=\"0\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"10 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_10\"\r\n                                        id=\"hour_10\"\r\n                                        defaultValue=\"3\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"11 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_11\"\r\n                                        id=\"hour_11\"\r\n                                        defaultValue=\"6\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"12 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_12\"\r\n                                        id=\"hour_12\"\r\n                                        defaultValue=\"3\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"13 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_13\"\r\n                                        id=\"hour_13\"\r\n                                        defaultValue=\"3\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"14 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_14\"\r\n                                        id=\"hour_14\"\r\n                                        defaultValue=\"4\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"15 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_15\"\r\n                                        id=\"hour_15\"\r\n                                        defaultValue=\"7\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"16 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_16\"\r\n                                        id=\"hour_16\"\r\n                                        defaultValue=\"1\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"17 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_17\"\r\n                                        id=\"hour_17\"\r\n                                        defaultValue=\"2\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"18 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_18\"\r\n                                        id=\"hour_18\"\r\n                                        defaultValue=\"8\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"19 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_19\"\r\n                                        id=\"hour_19\"\r\n                                        defaultValue=\"1\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"20 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_20\"\r\n                                        id=\"hour_20\"\r\n                                        defaultValue=\"3\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"21 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_21\"\r\n                                        id=\"hour_21\"\r\n                                        defaultValue=\"1\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"22 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_22\"\r\n                                        id=\"hour_22\"\r\n                                        defaultValue=\"9\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"23 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_23\"\r\n                                        id=\"hour_23\"\r\n                                        defaultValue=\"3\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            readOnly: true,\r\n                                        }}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport ThreeMonthWaterCycleModal from './ThreeMonthWaterCycleModal';\r\nimport '../../styles/threeMonthCropDetail.css';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n\r\n    const classes = useStyles1();\r\n    \r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData( sl_no, temperature, co2, humidity, electrolyte, ph, deep_red, red, deep_blue, white, uv, mac_address, download ) {\r\n    return {  sl_no, temperature, co2, humidity, electrolyte, ph, deep_red, red, deep_blue, white, uv, mac_address, download };\r\n}\r\n\r\nconst rows = [\r\n    createData(1, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(2, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(3, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(4, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(5, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(6, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(7, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(8, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(9, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(10, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(11, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\" />),\r\n    createData(12, '20.23 F', '20%', '20%', 5, 7, '12%', '17%', '13%', '20%', '30%', <VisibilityIcon className=\"download_icon\"/>, <CloudDownloadIcon className=\"download_icon\"  />),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nexport default function ThreeMonthCropDetail(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [scroll, setScroll] = React.useState('paper');\r\n    \r\n    const descriptionElementRef = React.useRef(null);\r\n    \r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const handleClickModal = (scrollType) => () => {\r\n        setOpenModal(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        if(props.inCubeData){\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() =>{\r\n        setOpen(props.open)\r\n    },[props.open])\r\n\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapTooltip classname=\"text\" title=\"Program's List\">\r\n                <div className={props.inCubeData? \" \" : \"IsLogBtn\"}>\r\n                    <div className={props.inCubeData? \"month_detail_crop_title_icon\" : \" month_detail_crop_title_icon IsLogBtn\"} onClick={handleClickOpen()}>\r\n                        <p className={props.inCubeData?\"month_detail_crop_title text\" : \"text IsLogBtn\"}>Logs</p>\r\n                        <EqualizerIcon className={props.inCubeData?\"equalizer_icon \":\"equalizer_icon  IsLogBtn\"} />\r\n                    </div>\r\n                </div>\r\n            </BootstrapTooltip>\r\n            <Dialog\r\n                open={open}\r\n                scroll={scroll}\r\n                className=\"model_width\"\r\n            >\r\n                 <div className=\"crop_detail_title_heading\">\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={2} md={2}>\r\n                                <div className=\"back_text_center\">\r\n                                    <div className=\"back_icon\" onClick={handleClose}>\r\n                                        <ArrowBackIcon className=\"go_back_icon\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} md={8}>\r\n                                <div className=\"crop_title\">\r\n                                    <span className=\"text\">Three Month Crop & Water Cycle Detail's (Logs)</span>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                </div>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"custom pagination table\">\r\n                            <TableHead className=\"table_head_title\">\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\" className=\"text\">#</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Temperature</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">CO2</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Humidity</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Electrolyte</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">pH</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Deep Red</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Red</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Deep Blue</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">White</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">UV</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Water Cycle</TableCell>\r\n                                    <TableCell align=\"center\" className=\"text\">Download</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {(rowsPerPage > 0\r\n                                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    : rows\r\n                                ).map((row) => (\r\n                                    <TableRow key={row.sl_no}>\r\n                                        <TableCell component=\"th\" scope=\"row\" className=\"text table_cell_title\">\r\n                                            {row.sl_no}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.temperature}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.co2}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.humidity}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.electrolyte}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.ph}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.deep_red}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.red}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.deep_blue}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.white}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            {row.uv}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\" className=\"text table_cell_title\">\r\n                                            <div onClick={handleClickModal()}>\r\n                                                {row.mac_address}\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.download}                                       \r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                                        <TableCell colSpan={10} />\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                <TableRow className=\"text\">\r\n                                    <TablePagination\r\n                                    rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                                    count={rows.length}\r\n                                    rowsPerPage={rowsPerPage}\r\n                                    page={page}\r\n                                    SelectProps={{\r\n                                        inputProps: { 'aria-label': 'rows per page' },\r\n                                        native: true,\r\n                                    }}\r\n                                    onChangePage={handleChangePage}\r\n                                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                    ActionsComponent={TablePaginationActions}\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <ThreeMonthWaterCycleModal openModal={openModal} setOpenModal={setOpenModal}/>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CheckOutlinedIcon from \"@material-ui/icons/CheckOutlined\";\r\nimport ClearOutlinedIcon from \"@material-ui/icons/ClearOutlined\";\r\nimport baseUrl from '../../config/config';\r\nimport '../../styles/deleteIncubator.css';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function DeleteIncubator(props) {\r\n\r\n    const [deleteErrMsg, setDeleteErrMsg] = useState('');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        if(props.inCubeData){\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setOpen(props.open)\r\n    },[props.open])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function deleteIncubatorList() {\r\n        props.setLoader(true);\r\n        var token = localStorage.getItem('token')\r\n        var incubator_id = localStorage.getItem('selectedId')\r\n        var postDeleteData = { \"incubator_id\" : incubator_id }\r\n        fetch(`${baseUrl.baseUrl}delete_incubator/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: token\r\n            },\r\n            body: JSON.stringify(postDeleteData)\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            if (results.msg) {\r\n                props.setLoader(false);\r\n                props.setUpdateList('')\r\n                props.setUpdateList(incubator_id)\r\n                props.setInCubeData('')   \r\n                props.setInCubeData(true)\r\n                localStorage.removeItem('selectedId')\r\n                props.setInCubeData('')\r\n                setOpen(false)\r\n                window.location.reload()\r\n            } else {\r\n                setDeleteErrMsg(results.error)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapTooltip className=\"text\" title=\"Delete Incubator/Tray\">\r\n                <div className={props.inCubeData? \" \" : \"IsdeleteBtn\"}>\r\n                    <div className={props.inCubeData? \"delete_title\" : \" delete_title IsdeleteBtn\"} onClick={handleClickOpen()}>\r\n                        <p className={props.inCubeData?\"delete_line text\" : \"text IsdeleteBtn\"}>Delete</p>\r\n                        <DeleteIcon className={props.inCubeData?\"delete_icon \":\"delete_icon  IsdeleteBtn\"} />\r\n                    </div>\r\n                </div>\r\n            </BootstrapTooltip>\r\n            <Dialog\r\n                open={open}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <p className=\"text title_color\">Do you want to delete this Incubator/Tray ?</p>\r\n                </DialogTitle>\r\n                <div className=\"delete_api_error\">\r\n                    {/* <span className=\"text error\">{deleteErrMsg}</span> */}\r\n                </div>\r\n                <DialogActions className=\"button_height\">\r\n                    <span className=\"yes_button\" onClick={()=> {deleteIncubatorList()}}>\r\n                        <CheckOutlinedIcon />\r\n                    </span>\r\n                    <span className=\"no_button\" onClick={handleClose}>\r\n                        <ClearOutlinedIcon />\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CheckOutlinedIcon from \"@material-ui/icons/CheckOutlined\";\r\nimport ClearOutlinedIcon from \"@material-ui/icons/ClearOutlined\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\r\nimport baseUrl from '../../config/config';\r\nimport '../../styles/runProgram.css';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function RunProgram(props) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        if(props.inCubeData){\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        setOpen(props.open)\r\n    },[props.open])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        let rData = props.runData\r\n        rData['record_status'] = 'False'\r\n        runData(rData)\r\n    };\r\n\r\n    function onRecordClick() {\r\n        // props.setDisable(false);\r\n        setOpen(false);\r\n        let rData = props.runData\r\n        rData['record_status'] = 'True'\r\n        runData(rData)\r\n        props.setIsRecord(true);\r\n    }\r\n\r\n    // run button functionality\r\n    \r\n    function runData(){\r\n        var token = localStorage.getItem('token');\r\n        var selectedId = localStorage.getItem('selectedId');\r\n        \r\n        var postRunData={\r\n            \"atmosphere\": {\r\n                \"incubator_id\": selectedId,\r\n                \"temperature\": props.inCubeData.temperature,\r\n                \"co2\": props.inCubeData.co2,\r\n                \"humidity\": props.inCubeData.humidity,\r\n                \"electrical_conductivity\": props.inCubeData.electrical_conductivity,\r\n                \"pH\": props.inCubeData.pH\r\n            },\r\n            \"light\": {\r\n                \"incubator_id\": selectedId,\r\n                \"deep_red\": props.inCubeData.deep_red,\r\n                \"red\": props.inCubeData.red,\r\n                \"white\": props.inCubeData.white,\r\n                \"blue\": props.inCubeData.blue,\r\n                \"deep_blue\": props.inCubeData.deep_blue,\r\n                \"uv\": props.inCubeData.uv\r\n            },\r\n            \"water\":{\r\n                \"values\": props.inCubeData.values\r\n                // \"water_frequency\":props.inCubeData.water_frequency,\r\n                // \"water_duration\":props.inCubeData.water_duration\r\n            },\r\n            \"record_status\": props.runData.record_status\r\n            \r\n        }\r\n\r\n        localStorage.setItem(\"record_status\", props.runData.record_status);\r\n        fetch(`${baseUrl.baseUrl}manual_run/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: token,\r\n            },\r\n            // body: JSON.stringify(props.runData),\r\n            body: JSON.stringify(postRunData),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n        props.setIsRecord(postRunData.record_status);\r\n        props.setDelayEdit(false);\r\n        props.setAtmShowPen(false);\r\n        props.setLightShowPen(false);\r\n        // props.setShowPen(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapTooltip classname=\"text\" title=\"Run Program\">\r\n                <div className={props.inCubeData? \" \" : \"IsRunBtn\"}>\r\n                    <div className={props.inCubeData? \"run_title\" : \" run_title IsRunBtn\"} onClick={handleClickOpen()}>\r\n                        <p className={props.inCubeData?\"run_title_line text\" : \"text IsRunBtn\"}>Run</p>\r\n                        <BubbleChartIcon className={props.inCubeData?\"bubbleChart_icon\":\"bubbleChart_icon  IsRunBtn\"} />\r\n                    </div>\r\n                </div>\r\n            </BootstrapTooltip>\r\n            <Dialog\r\n                open={open}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <p className=\"text title_color\">Do you want to record this data?</p>\r\n                </DialogTitle>\r\n                <DialogActions className=\"button_height\">\r\n                    <span className=\"yes_button\" onClick={()=> {onRecordClick()}}>\r\n                        <CheckOutlinedIcon />\r\n                    </span>\r\n                    <span className=\"no_button\" onClick={handleClose}>\r\n                        <ClearOutlinedIcon />\r\n                    </span>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport ClearSharpIcon from \"@material-ui/icons/ClearSharp\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport baseUrl from '../../config/config';\r\nimport '../../styles/newEntryModal.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > *\": {\r\n        margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n}));\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n  arrow: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.black,\r\n        fontSize: \"15px\",\r\n        marginTop: \"8px !important\",\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function NewEntryModal(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    var Spinner = require(\"react-spinkit\");\r\n\r\n    const [randomNo, setRandomNo] = useState();\r\n\r\n    const [showLoader, setShowLoader] = useState(true);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [scroll, setScroll] = React.useState(\"paper\");\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n\r\n    const [img, setImg] = useState(null);\r\n\r\n    const [csvFile, setCsvFile] = useState(null);\r\n\r\n    const fRef = useRef(null);\r\n\r\n    const [csvData, setCsvData] = useState([]);\r\n\r\n    const [showParentBtns, setShowParentBtns] = useState(true);\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const [errCSVMsg, setErrCSVMsg] = useState(\"\");\r\n\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    const [mac, setMac] = useState();\r\n\r\n    const [openManual, setOpenManual] = useState(false);\r\n\r\n    const [showScan, setShowScan] = useState(false);\r\n\r\n    const [showCloudBtn, setShowCloudBtn] = useState(false);\r\n\r\n    const [showTrayType, setShowTrayType] = useState(false);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        if (newValue === 0) {\r\n            fRef.current.click();\r\n        } else {\r\n            setOpenManual(true);\r\n        }\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleClick = (event) => {};\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n        setProgress((prevProgress) =>\r\n            prevProgress >= 100 ? 0 : prevProgress + 10\r\n            );\r\n        }, 800);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!showLoader) {\r\n            setRandomNo(getRandomNumber());\r\n        }\r\n    }, [showLoader]);\r\n\r\n    function getRandomNumber() {\r\n        return Math.floor(Math.random() * 90000) + 10000;\r\n    }\r\n\r\n    var regex = new RegExp(\"(.*?).(csv)$\");\r\n\r\n    function onChangeHandler(e) {\r\n        let tempCsvFile = fRef.current.files[0];\r\n        setCsvFile(tempCsvFile);\r\n\r\n        var isCsv = regex.test(tempCsvFile && tempCsvFile.name);\r\n        if (isCsv) {\r\n            setImg(tempCsvFile.name);\r\n            setErrCSVMsg(\"\");\r\n        } else if (tempCsvFile) {\r\n            setImg(\"\");\r\n            setErrCSVMsg(\"Please upload .csv file only.\");\r\n        }\r\n    }\r\n\r\n    function flushFile() {\r\n        if (fRef && fRef.current) {\r\n            fRef.current.value = \"\";\r\n            setImg(null);\r\n        }\r\n    }\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    function onScanClick() {\r\n        setShowScan(true);\r\n        setShowLoader(true);\r\n        setTimeout(() => {\r\n        setShowLoader(false);\r\n        }, 3000);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n        flushFile();\r\n        setShowParentBtns(true);\r\n        setShowScan(false)\r\n        setShowCloudBtn(false)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (open) {\r\n        const { current: descriptionElement } = descriptionElementRef;\r\n        if (descriptionElement !== null) {\r\n            descriptionElement.focus();\r\n        }\r\n        }\r\n    }, [open]);\r\n\r\n    function macAddress(e) {\r\n        setMac(e.target.value);\r\n    }\r\n\r\n    function backFunction() {\r\n        if (showCloudBtn) {\r\n            flushFile();\r\n            setShowCloudBtn(false);\r\n            return;\r\n        }\r\n        if (showScan) {\r\n            flushFile();\r\n            setShowScan(false);\r\n            return;\r\n        }\r\n        if (!showParentBtns) {\r\n            setShowParentBtns(true);\r\n        }\r\n    }\r\n\r\n    function onLocalClick(){\r\n        setShowCloudBtn(true);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <BootstrapTooltip classname=\"text\" title=\"Incubator Registration\">\r\n                <div className=\"new_entry_title_icon\" onClick={handleClickOpen()}>\r\n                    <p className=\"text new_entry_title\">New Entry</p>\r\n                    <EventNoteIcon className=\"eventNote_icon\" />\r\n                </div>\r\n            </BootstrapTooltip>\r\n            <Dialog open={open} scroll={scroll} className=\"new_entry_model_width\">\r\n                <div className=\"add_incube_title\">\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={3} md={3}>\r\n                                {!showParentBtns && (\r\n                                    <div className=\"go_back_btn__text_center\">\r\n                                        <div className=\"go_back_btn_icon\">\r\n                                            <>\r\n                                                <ArrowBackIcon\r\n                                                className=\"go_back_btn__icon\"\r\n                                                onClick={() => backFunction()}\r\n                                                />\r\n                                            </>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <div className=\"title_add_incube\">\r\n                                    <span className=\"text\">Add Incubator Tray Here</span>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3}>\r\n                                <div className=\"cancel_btn__text_center\">\r\n                                    <div className=\"cancel_btn_icon\" onClick={() => handleClose()}>\r\n                                        <ClearSharpIcon className=\"cancel_back_btn__icon\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                </div>\r\n                <DialogContent dividers={scroll === \"paper\"}>\r\n                    <DialogContentText className=\"text\">\r\n                        {showParentBtns && (\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6} md={6} className=\"btn_text\">\r\n                                    <div>\r\n                                        <label htmlFor=\"contained-button-file\" onClick={() => {setShowParentBtns(!showParentBtns); setShowTrayType('incubator')}} >\r\n                                            <Button variant=\"contained\" className=\"btn_box_shadow\">\r\n                                                <span className=\"text\">Add Incubator</span>\r\n                                            </Button>\r\n                                        </label>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6} className=\"btn_text\">\r\n                                    <div>\r\n                                        <label htmlFor=\"contained-button-file\" onClick={() => {setShowParentBtns(!showParentBtns); \r\n                                        setShowTrayType('zone')}}>\r\n                                            <Button variant=\"contained\" className=\"btn_box_shadow\">\r\n                                                <span className=\"text\">Add Zone</span>\r\n                                            </Button>\r\n                                        </label>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                        {!showParentBtns && !showScan && (\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6} md={6} className=\"btn_text\">\r\n                                    <div>\r\n                                        <label htmlFor=\"contained-button-file\" onClick={() => { onScanClick(); }} >\r\n                                            <Button variant=\"contained\" className=\"btn_box_shadow\">\r\n                                                <span className=\"text\">Scan</span>\r\n                                            </Button>\r\n                                        </label>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} md={6} className=\"btn_text\">\r\n                                    <div>\r\n                                        <label htmlFor=\"contained-button-file\">\r\n                                            <Button variant=\"contained\" className=\"btn_box_shadow\">\r\n                                                <span className=\"text\">Manual</span>\r\n                                            </Button>\r\n                                        </label>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                        <div className=\"tabs_line\">\r\n                            {showScan && showLoader && (\r\n                                <>\r\n                                    <div className=\"scan_qr_code_title\">\r\n                                        <p className=\"text\">Please Scan The Bar Code </p>\r\n                                    </div>\r\n                                    <div className=\"scan_qr_code_img\">\r\n                                        <Spinner name=\"ball-spin-fade-loader\" value={progress} className=\"scan\" />\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            <div className=\"tabs_line\">\r\n                                {showScan && !showLoader && (\r\n                                    <>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={12} sm={6} md={6} className=\"mac_address_title\">\r\n                                                <p className=\"text mac_address_line\">Incubator/Tray ID</p>\r\n                                            </Grid>\r\n                                            <div className=\"form-filed\">\r\n                                                <Grid item xs={12} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        margin=\"normal\"\r\n                                                        fullWidth\r\n                                                        type=\"text\"\r\n                                                        name=\"Incubator_Tray_Id\"\r\n                                                        id=\"id\"\r\n                                                        className=\"mac_form_filed\"\r\n                                                        value={randomNo}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </div>\r\n                                            {showTrayType === \"incubator\" && (\r\n                                                <>\r\n                                                    <Grid item xs={12} sm={6} md={6} className=\"mac_address_title\" >\r\n                                                        <p className=\"text mac_address_line\">Please Enter Mac Address*</p>\r\n                                                    </Grid>\r\n                                                    <div className=\"form-filed\">\r\n                                                        <Grid item xs={12} sm={6} md={6}>\r\n                                                            <TextField\r\n                                                                margin=\"normal\"\r\n                                                                fullWidth\r\n                                                                type=\"number\"\r\n                                                                name=\"mac_address\"\r\n                                                                id=\"mac_address\"\r\n                                                                onChange={(e) => { macAddress(e) }}\r\n                                                                className=\"mac_form_filed\"\r\n                                                                autoComplete=\"off\"\r\n                                                                onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                                            />\r\n                                                        </Grid>\r\n                                                    </div>\r\n                                                 </>\r\n                                            )}\r\n                                        </Grid>\r\n                                    </>\r\n                                )}\r\n                                {showTrayType === \"zone\" && !showLoader && showScan &&(\r\n                                    <>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={12} sm={6} md={6} className=\"mac_address_title\">\r\n                                                <p className=\"text mac_address_line\">Sensor Package MAC</p>\r\n                                            </Grid>\r\n                                            <div className=\"form-filed\">\r\n                                                <Grid item xs={12} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        margin=\"normal\"\r\n                                                        fullWidth\r\n                                                        type=\"text\"\r\n                                                        name=\"mac_address\"\r\n                                                        id=\"mac_address\"\r\n                                                        onChange={(e) => {\r\n                                                            macAddress(e);\r\n                                                        }}\r\n                                                        className=\"mac_form_filed\"\r\n                                                        autoComplete=\"off\"\r\n                                                    />\r\n                                                </Grid>\r\n                                            </div>\r\n                                            <Grid item xs={12} sm={6} md={6} className=\"mac_address_title\" >\r\n                                                <p className=\"text mac_address_line\">TL Fixtures MAC's</p>\r\n                                            </Grid>\r\n                                            <div className=\"upload_btn\">\r\n                                                <input\r\n                                                    accept=\"csv/*\"\r\n                                                    className={classes.input}\r\n                                                    id=\"contained-button-file\"\r\n                                                    multiple\r\n                                                    ref={fRef}\r\n                                                    type=\"file\"\r\n                                                    accept=\".csv\"\r\n                                                    onChange={(e) => {\r\n                                                        onChangeHandler(e);\r\n                                                    }}\r\n                                                />\r\n                                                <label htmlFor=\"contained-button-file\">\r\n                                                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                                        Upload\r\n                                                    </Button>\r\n                                                </label>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </>\r\n                                )}\r\n                                {showScan && !showLoader && !showCloudBtn && (\r\n                                    <>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={12} sm={6} md={6} className=\"btn_text\">\r\n                                                <Button  variant=\"contained\"  className=\"btn_box_shadow\">\r\n                                                    <span className=\"text\">CLOUD</span>\r\n                                                </Button>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6} md={6} className=\"btn_text\">\r\n                                                <div>\r\n                                                    <label htmlFor=\"contained-button-file\" onClick={() => {onLocalClick();}}>\r\n                                                        <Button variant=\"contained\" className=\"btn_box_shadow\">\r\n                                                            <span className=\"text\">LOCAL</span>\r\n                                                        </Button>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </>\r\n                                )}\r\n                                {showCloudBtn && (\r\n                                    <>\r\n                                        <div className=\"tabs_width\">\r\n                                            <Paper square className=\"main_tabs\">\r\n                                                <Tabs\r\n                                                    value={value}\r\n                                                    onChange={handleChange}\r\n                                                    variant=\"fullWidth\"\r\n                                                    indicatorColor=\"primary\"\r\n                                                    textColor=\"primary\"\r\n                                                    aria-label=\"icon label tabs example\"\r\n                                                    className=\"tabs_inner_width\"\r\n                                                    onClick={handleClick}\r\n                                                >\r\n                                                    <Tab label=\"UPLOAD\" className=\"text recents\" />\r\n                                                    <Tab label=\"MANUAL\" className=\"text recents\" />\r\n                                                </Tabs>\r\n                                            </Paper>\r\n                                        </div>\r\n                                        <div className=\"upload_csv_msg\">\r\n                                            <span className=\"text error\">{errCSVMsg}</span>\r\n                                        </div>\r\n                                        {img && (\r\n                                            <div className=\"file_upload\">\r\n                                                <div>\r\n                                                    <InsertDriveFileIcon className=\"insertdrivefile_icon\" />\r\n                                                </div>\r\n                                                <span>{img}</span>\r\n                                                <div onClick={() => {flushFile();}}>\r\n                                                    <div className=\"delete_btn\">\r\n                                                        <DeleteOutlineIcon className=\"deleteoutline_icon\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"start_btns\">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                // onClick={() => { uploadCSV() }}\r\n                                            >\r\n                                                <span className=\"text\">START</span>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </>\r\n                                )} \r\n                                <input\r\n                                    accept=\"csv/*\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\"\r\n                                    multiple\r\n                                    ref={fRef}\r\n                                    type=\"file\"\r\n                                    accept=\".csv\"\r\n                                    onChange={(e) => {\r\n                                        onChangeHandler(e);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../../styles/record.css';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n    },\r\n}))\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function Record(props) {\r\n\r\n    const [isBlue, setIsBlue] = React.useState(true);\r\n\r\n    const [disableRecord, setDisableRecord] = React.useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(()=>{\r\n        let rs = localStorage.getItem(\"record_status\")\r\n        if(rs==='True'){\r\n            setDisableRecord(true);\r\n        }else if(rs==='False'){\r\n            setDisableRecord(false);\r\n        }\r\n    },[props.isRecord])\r\n\r\n    const handleChange = () => {\r\n        setIsBlue(!isBlue)\r\n        setOpen(!open)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <BootstrapTooltip classname=\"text\" title=\"Record Program\">\r\n                <div className={props.inCubeData? \" \" : \"IsRecordBtn\"}>\r\n                    {disableRecord? (\r\n                        <div className=\"record_title\">\r\n                            <p className={props.inCubeData?\"record_title_line1 text\" : \"text IsRecordBtn\"}>Record</p>\r\n                            <AlbumIcon className={props.inCubeData?\"album_icon1\":\"album_icon1  IsRecordBtn\"} onClick={() => handleChange()} />\r\n                        </div>\r\n                        ):(\r\n                        <div className=\"record_title\">\r\n                            <p className={props.inCubeData?\"record_title_line text\" : \"text IsRecordBtn\"}>Record</p>\r\n                            <AlbumIcon className={props.inCubeData?\"album_icon\":\"album_icon  IsRecordBtn\"} onClick={() => handleChange()} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </BootstrapTooltip>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport '../../styles/liveImage.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        content: {\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'none !important',\r\n        },\r\n    }),\r\n);\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n    },\r\n}));\r\n\r\n// function BootstrapTooltip(props) {\r\n//     const classes = useStylesBootstrap();\r\n//     return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n// }\r\n\r\nexport default function LiveImage(props) {\r\n\r\n    console.log(props)\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"title\">\r\n            {/* <BootstrapTooltip classname=\"text\" title=\"Update Parameter's\"></BootstrapTooltip> */}\r\n            {(props.inCubeData && props.inCubeData.updated_on) ? (\r\n                <p className=\"text\">{props.inCubeData.updated_on}</p>\r\n                ):(\r\n                <p className=\"text\">Date is not available</p>\r\n            )}\r\n            <div className=\"card_img_height\">\r\n                {( props.showImage && props.inCubeData && props.inCubeData.image_url)? (\r\n                    <img src={props.inCubeData.image_url} alt=\"Crop Image\"  height=\"345\" />\r\n                    ) : (\r\n                    <img src=\"/assets/image/no_image.png\" height=\"345\" />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Slider } from '@material-ui/core';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport baseUrl from '../../config/config';\r\nimport '../../styles/atmosphereSlider.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        vertical: {\r\n            height: 240,\r\n        },\r\n        horizontal: {\r\n            width: 200,\r\n            margin: '0 auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst CustomSlider = withStyles({\r\n    root: {\r\n        height: 8,\r\n        '&$vertical': {\r\n            width: 8,\r\n            marginTop: 4,\r\n        }\r\n    },\r\n    thumb: {\r\n        height: '9px !important',\r\n        width: '90px !important',\r\n        borderRadius: 0,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid rgb(207, 201, 201)',\r\n        marginTop: '-8px !important',\r\n        marginLeft: '0px !important',\r\n        marginBottom: '-5px !important',\r\n        '&:focus, &:hover': {\r\n            boxShadow: 'none'\r\n        },\r\n        '&$active': {\r\n            boxShadow: 'none'\r\n        },\r\n        '& .bar': {\r\n            height: 1,\r\n            width: 85,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)'\r\n    },\r\n    track: {\r\n        height: 100,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 100,\r\n        borderRadius: 4,\r\n    },\r\n    vertical: {\r\n        '& $rail': {\r\n            width: 90,\r\n        },\r\n        '& $track': {\r\n            width: 90,\r\n        },\r\n        '& $thumb': {\r\n            marginLeft: -0,\r\n            marginBottom: -6,\r\n        }\r\n    }\r\n})(Slider);\r\n\r\nfunction CustomThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n            <hr className=\"bar\" />\r\n        </span>\r\n    );\r\n}\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n      marginLeft: '18px !important',\r\n    },\r\n}))\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function AtmosphereSlider(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n        checkedB: false,\r\n    });\r\n\r\n    const [checkedAmanual, setCheckedAmanual] = useState(false);\r\n    const [checkedAauto, setCheckedAauto] = useState(true);\r\n\r\n    const [temp, setTemp] = useState(0);\r\n    const [humidity, setHumidity] = useState(0);\r\n    const [co, setCO] = useState(0);\r\n    const [electrolyte, setElectrolyte] = useState(0);\r\n    const [ph, setpH] = useState(0);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n    const [autoData, setAutoData] = useState();\r\n    const [manualData, setManualData] = useState();\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(props.inCubeData===undefined || props.inCubeData===null){\r\n            setTemp(0);\r\n            setHumidity(0);\r\n            setCO(0);\r\n            setElectrolyte(0);\r\n            setpH(0)\r\n        } else {\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setTemp(props.inCubeData.temperature)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setHumidity(props.inCubeData.humidity)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setCO(props.inCubeData.co2)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setElectrolyte(props.inCubeData.electrical_conductivity)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setpH(props.inCubeData.pH)\r\n        }\r\n        setCheckedAauto(props.inCubeData.atmosphere_status);\r\n    }\r\n    },[props.inCubeData])\r\n\r\n    useEffect(()=>{\r\n        if (autoData === undefined || (autoData && autoData.error)) {\r\n            setTemp(0);\r\n            setHumidity(0);\r\n            setCO(0);\r\n            setElectrolyte(0);\r\n            setpH(0);\r\n        } else {\r\n            setTemp(autoData.temperature);\r\n            setHumidity(autoData.humidity);\r\n            setCO(autoData.co2);\r\n            setElectrolyte(autoData.electrical_conductivity);\r\n            setpH(autoData.pH);\r\n        }\r\n    },[autoData])\r\n\r\n    useEffect(()=>{\r\n        if (manualData === undefined || (manualData && manualData.error)) {\r\n            setTemp(0);\r\n            setHumidity(0);\r\n            setCO(0);\r\n            setElectrolyte(0);\r\n            setpH(0);\r\n        } else {\r\n            setTemp(manualData.temperature);\r\n            setHumidity(manualData.humidity);\r\n            setCO(manualData.co2);\r\n            setElectrolyte(manualData.electrical_conductivity);\r\n            setpH(manualData.pH);\r\n        }\r\n    },[manualData])\r\n\r\n    useEffect(() => {\r\n        if (checkedAauto) {\r\n        } else {\r\n        }\r\n        if (checkedAauto) {\r\n          fetchAutoData();\r\n          setIsActive(false)\r\n        }\r\n      }, [checkedAauto]);\r\n    \r\n    useEffect(() => {\r\n        if(checkedAmanual !== null) {\r\n            if (checkedAmanual){\r\n                fetchManualData();\r\n            }\r\n            setCheckedAauto(!checkedAmanual);\r\n        }\r\n    }, [checkedAmanual]);\r\n    \r\n    useEffect(() => {\r\n        if (checkedAauto !== null) \r\n        setCheckedAmanual(!checkedAauto);\r\n    }, [checkedAauto]);\r\n\r\n    function onChangeTemp(e, v) {\r\n        setTemp(v);\r\n    }\r\n\r\n    function onChangeHumidity(e, v) {  \r\n        Number(setHumidity(v));\r\n    }\r\n\r\n    function onChangeCO(e, v) {\r\n        setCO(v);\r\n    }\r\n\r\n    function onChangeElectrolyte(e, v) {\r\n        setElectrolyte(v);\r\n    }\r\n\r\n    function onChangepH(e, v) {\r\n        setpH(v);\r\n    }\r\n\r\n    // code for run button functionality\r\n    \r\n    function postData(key, value) {\r\n       \r\n        if(key === \"electrolyte\"){\r\n            props.setInCubeData({...props.inCubeData, electrical_conductivity: electrolyte})\r\n        }\r\n        if(key === \"temperature\"){\r\n            props.setInCubeData({...props.inCubeData, temperature: temp})\r\n        }\r\n        if(key === \"humidity\"){\r\n            props.setInCubeData({...props.inCubeData, humidity: humidity})\r\n        }\r\n        if(key === \"ph\"){\r\n            props.setInCubeData({...props.inCubeData, pH: ph})\r\n        }\r\n        if(key === \"co2\"){\r\n            props.setInCubeData({...props.inCubeData, co2:co})\r\n        }\r\n    }\r\n\r\n    function fetchAutoData(){\r\n        var token = localStorage.getItem('token')\r\n        var selectedId = localStorage.getItem('selectedId')\r\n        var postAutoData = {\r\n            \"incubator_id\": selectedId\r\n        }\r\n        fetch(`${baseUrl.baseUrl}atmosphericauto/`, { \r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(postAutoData)\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setAutoData(results);\r\n        });\r\n    }\r\n\r\n    function fetchManualData(){\r\n        var token = localStorage.getItem('token')\r\n        var selectedId = localStorage.getItem('selectedId')\r\n        var postManualData = {\r\n            \"incubator_id\": selectedId\r\n        }\r\n        fetch(`${baseUrl.baseUrl}atmosphericmanual/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(postManualData)\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            if(results.error){\r\n                setCheckedAmanual(false)\r\n                setCheckedAauto(true)\r\n            }\r\n            setManualData(results);\r\n            if(selectedId){\r\n                props.setSelectedID(\"\") \r\n                props.setSelectedID(selectedId) \r\n            }\r\n        });\r\n    }\r\n\r\n    const onChangeCommitted = (event, key)=>{\r\n        postData(key, event.target.ariaValueNow);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        var togglebar = localStorage.getItem('manualToggle')\r\n        if(togglebar==='true'){\r\n            setCheckedAmanual(true)\r\n        } else {\r\n            setCheckedAmanual(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        var togglebar = localStorage.setItem('manualToggle', checkedAmanual)\r\n    },[checkedAmanual])\r\n\r\n    useEffect(()=>{\r\n        if(isActive){\r\n            setIsDisabled(false)\r\n            props.setDelayEdit(true)\r\n            props.setAtmShowPen(true)\r\n        }\r\n        else {\r\n            setIsDisabled(true);\r\n        }\r\n    },[isActive]);\r\n\r\n    useEffect(()=>{\r\n        setIsActive(props.showAtmPen)\r\n    },[props.showAtmPen]);\r\n\r\n    return (\r\n        <div className=\"atmosphereSlider_main_content\">\r\n            <Grid container>\r\n                <div className=\"atmosphereSlider_content\">\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"temp\">\r\n                            <span className=\"temp_title text\">Temp</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={temp}\r\n                                onChange={onChangeTemp}\r\n                                onChangeCommitted={(e)=>{\r\n                                    onChangeCommitted(e, 'temperature')\r\n                                }}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_1\"\r\n                                max={150}\r\n                                min={-40}\r\n                                value={temp}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"button text\" variant=\"contained\">\r\n                                {temp}F\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid itemitem xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"humidity\">\r\n                            <span className=\"humidity_title text\">Humidity</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={humidity}\r\n                                onChange={onChangeHumidity}\r\n                                onChangeCommitted={(e)=>{\r\n                                    onChangeCommitted(e, 'humidity')\r\n                                }}\r\n                                valueLabelDisplay=\"auto\"\r\n                                value={humidity}\r\n                                className=\"slider_2\"\r\n                                min={0}\r\n                                max={100}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"button text\" variant=\"contained\">\r\n                                {humidity}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"CO2\">\r\n                            <span className=\"CO2_title text\">CO₂</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={co}\r\n                                onChange={onChangeCO}\r\n                                onChangeCommitted={(e)=>{\r\n                                    onChangeCommitted(e,'co2')\r\n                                }}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_3\"\r\n                                min={0}\r\n                                max={100}\r\n                                value={co}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"button text\" variant=\"contained\">\r\n                                {co}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"electrolyte\">\r\n                            <span className=\"electrolyte_title text\">Electrolyte</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={electrolyte}\r\n                                onChange={onChangeElectrolyte}\r\n                                onChangeCommitted={(e)=>{\r\n                                    onChangeCommitted(e, 'electrolyte')\r\n                                }}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_4\"\r\n                                value={electrolyte}\r\n                                min={0}\r\n                                max={10}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"button text\" variant=\"contained\">\r\n                                {electrolyte}\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"pH\">\r\n                            <span className=\"pH_title text\">pH</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={ph}\r\n                                onChange={onChangepH}\r\n                                onChangeCommitted={(e)=>{\r\n                                    onChangeCommitted(e, 'ph')\r\n                                }}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_5\"\r\n                                value={ph}\r\n                                min={0}\r\n                                max={14}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"button text\" variant=\"contained\">\r\n                                {ph}\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"atmosphere_titles text\">\r\n                    <p>ATMOSPHERE</p>\r\n                </div>\r\n                <Grid container>\r\n                    <div className=\"atmosphereSlider_controls\">\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div>\r\n                                <label className=\"switch\">\r\n                                    <input type=\"checkbox\" \r\n                                        checked={checkedAmanual}\r\n                                        name=\"checkedA\"\r\n                                        color=\"primary\"\r\n                                        onChange={() => {\r\n                                            setCheckedAmanual(!checkedAmanual);\r\n                                        }}\r\n                                        inputProps={{ \"aria-label\": \"primary checkbox\" }} \r\n                                    />\r\n                                    <span className=\"sliders round\" />\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"manual_title\">\r\n                                <Typography className=\"text\" color={checkedAmanual ? \"primary\" : \"\"}>\r\n                                    MANUAL\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"switch_toggle_atmosphere\">\r\n                                <label className=\"switch\">\r\n                                     <input type=\"checkbox\" \r\n                                        checked={checkedAauto}\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                        onChange={() => {\r\n                                            setCheckedAauto(!checkedAauto);\r\n                                        }}\r\n                                        inputProps={{ \"aria-label\": \"primary checkbox\" }} \r\n                                    />\r\n                                    <span className=\"sliders round\" />\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"auto_title_line\">\r\n                                <Typography className=\"text\" color={checkedAauto ? \"primary\" : \"\"}>\r\n                                    AUTO\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            {checkedAmanual === true && (\r\n                                <div>\r\n                                    <BootstrapTooltip classname=\"text\" title=\"Edit Program\">\r\n                                        <div className=\"atmosphere_edit_btn_color\">\r\n                                            <div className=\"atmosphere_round_edit_icon\">\r\n                                                <EditIcon onClick={()=>{setIsActive(s=>!s)}} className=\"atmosphere_graph_edit_icon\" style={{ color: isActive ? \"white\" : \"\" }} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </BootstrapTooltip>             \r\n                                </div>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}      ","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Slider } from '@material-ui/core';\r\nimport baseUrl from '../../config/config';\r\nimport '../../styles/lightLevelSlider.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n\r\n    createStyles({\r\n        vertical: {\r\n            height: 240,\r\n        },\r\n        horizontal: {\r\n            width: 200,\r\n            margin: '0 auto',\r\n        },\r\n    }),\r\n);\r\n\r\nconst CustomSlider = withStyles({\r\n    root: {\r\n        height: 8,\r\n        '&$vertical': {\r\n            width: 8,\r\n            marginTop: 4,\r\n        }\r\n    },\r\n    thumb: {\r\n        height: '9px !important',\r\n        width: '90px !important',\r\n        borderRadius: 0,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid rgb(207, 201, 201)',\r\n        marginTop: '-8px !important',\r\n        marginLeft: '0px !important',\r\n        marginBottom: '-5px !important',\r\n        '&:focus, &:hover': {\r\n            boxShadow: 'none',\r\n        },\r\n        '&$active': {\r\n            boxShadow: 'none',\r\n        },\r\n        '& .bar': {\r\n            height: 1,\r\n            width: 85,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 100,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 100,\r\n        borderRadius: 4,\r\n    },\r\n    vertical: {\r\n        '& $rail': {\r\n            width: 90,\r\n        },\r\n        '& $track': {\r\n            width: 90,\r\n        },\r\n        '& $thumb': {\r\n            marginLeft: -0,\r\n            marginBottom: -6,\r\n        }\r\n    }\r\n})(Slider);\r\n\r\nfunction CustomThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n            <hr className=\"bar\" />\r\n        </span>\r\n    );\r\n}\r\n\r\nvar prevCheckedArr;\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n      marginLeft: '-50px !important',\r\n    },\r\n}))\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function LightLevelSlider(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedC: false,\r\n        checkedD: false,\r\n        checkedE: false,\r\n    });\r\n\r\n    const [checkedLmanual, setCheckedLmanual] = useState(null);\r\n    const [checkedLauto, setCheckedLauto] = useState(null);\r\n    const [checkedLautoamb, setCheckedLautoamb] = useState(null);\r\n    const [manualLToggle, setManualLToggle] = useState();\r\n    const [autoAmbidentLToggle, setAutoAmbidentLToggle] = useState();\r\n\r\n    const [deepRed, setdeepRed] = useState(0);\r\n    const [red, setRed] = useState(0);\r\n    const [white, setWhite] = useState(0);\r\n    const [blue, setBlue] = useState(0);\r\n    const [deepBlue, setDeepBlue] = useState(0);\r\n    const [uv, setUV] = useState(0);\r\n    const [isDisabled, setIsDisabled] = useState(false);\r\n\r\n    const [lightManualData , setLightManualData] = useState();\r\n    const [lightAutoData, setLightAutoData] = useState();\r\n    const [lightAutoAmbData, setLightAutoAmbData] = useState();\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(props.inCubeData===undefined || props.inCubeData===null){\r\n            setdeepRed(0);\r\n            setRed(0);\r\n            setWhite(0);\r\n            setBlue(0);\r\n            setDeepBlue(0);\r\n            setUV(0);\r\n        }else {\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setdeepRed(props.inCubeData.deep_red)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setRed(props.inCubeData.red)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setWhite(props.inCubeData.white)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setBlue(props.inCubeData.blue)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setDeepBlue(props.inCubeData.deep_blue)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData){\r\n            setUV(props.inCubeData.uv)\r\n        }\r\n    \r\n        if(props.inCubeData && props.inCubeData.light_status !== true && props.inCubeData.light_status !== null){\r\n            setCheckedLmanual(true)\r\n        }\r\n\r\n        if(props.inCubeData && props.inCubeData.light_status === null){\r\n            setCheckedLautoamb(true)\r\n        }\r\n        else{\r\n            setCheckedLauto(props.inCubeData.light_status);\r\n        }\r\n    }\r\n    },[props.inCubeData])\r\n\r\n\r\n    useEffect(()=>{\r\n        var obj = { name: \"manual\", value: true };\r\n          prevCheckedArr = obj;\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isActive){\r\n            setIsDisabled(false);\r\n            props.setDelayEdit(true)\r\n            props.setLightShowPen(true)\r\n        }\r\n        else{\r\n            setIsDisabled(true);\r\n        }\r\n    },[isActive])\r\n\r\n    useEffect(()=>{\r\n        setIsActive(props.showLightPen)\r\n    },[props.showLightPen]);\r\n\r\n    useEffect(() => {\r\n        if(checkedLmanual !== null && checkedLmanual) {\r\n            if(checkedLmanual===true){    \r\n                fetchLightManual();\r\n            }\r\n          setCheckedLauto(false);\r\n          setCheckedLautoamb(!checkedLmanual);\r\n        }else if(\r\n            checkedLmanual !== null && \r\n            !checkedLmanual && \r\n            !checkedLautoamb\r\n        ) {\r\n          setCheckedLauto(true);\r\n        }\r\n    }, [checkedLmanual]);\r\n    \r\n    useEffect(() => {\r\n        if(checkedLautoamb !== null && checkedLautoamb) {\r\n            if(checkedLautoamb===true){\r\n                fetchLightautoambient();\r\n            }\r\n          setCheckedLmanual(!checkedLautoamb);\r\n          setCheckedLauto(!checkedLautoamb);\r\n        } else if(\r\n          checkedLautoamb !== null &&\r\n          !checkedLautoamb &&\r\n          !checkedLmanual\r\n        ) {\r\n          setCheckedLauto(true);\r\n        }\r\n    }, [checkedLautoamb]);\r\n\r\n    useEffect(() => {\r\n        if(checkedLauto === null) \r\n            return;\r\n            if(checkedLauto===true){\r\n                fetchLightAuto();\r\n                setIsActive(false);\r\n                // props.setDisable(true);\r\n            }\r\n        if(checkedLautoamb) {\r\n          var obj = { name: \"autoAmb\", value: checkedLautoamb };\r\n          prevCheckedArr = obj;\r\n        }else if(checkedLmanual) {\r\n          var obj = { name: \"manual\", value: checkedLmanual };\r\n          prevCheckedArr = obj;\r\n        }\r\n       \r\n        if(!prevCheckedArr) \r\n            return;\r\n\r\n        if(prevCheckedArr.name === \"autoAmb\") {\r\n          setCheckedLautoamb(!checkedLauto);\r\n        }else if(prevCheckedArr.name === \"manual\") {\r\n          setCheckedLmanual(!checkedLauto);\r\n        }\r\n    }, [checkedLauto]);\r\n\r\n    useEffect(()=>{\r\n        var togglebarlmanual = localStorage.getItem('manualLToggle')\r\n        if(togglebarlmanual==='true'){\r\n            setCheckedLmanual(true)\r\n        } else {\r\n            setCheckedLmanual(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        var togglebarlmanual = localStorage.setItem('manualLToggle', checkedLmanual)\r\n    },[checkedLmanual])\r\n\r\n    useEffect(()=>{\r\n        var togglebarautoamb = localStorage.getItem('autoAmbidentLToggle')\r\n        if(togglebarautoamb==='true'){\r\n            setCheckedLautoamb(true)\r\n        } else {\r\n            setCheckedLautoamb(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        var togglebarautoamb = localStorage.setItem('autoAmbidentLToggle', checkedLautoamb)\r\n    },[checkedLautoamb])\r\n\r\n    useEffect(()=>{\r\n        if(lightManualData){\r\n            setdeepRed(lightManualData.deep_red);\r\n            setRed(lightManualData.red)\r\n            setWhite(lightManualData.white);\r\n            setBlue(lightManualData.blue);\r\n            setDeepBlue(lightManualData.deep_blue);\r\n            setUV(lightManualData.uv);\r\n        }\r\n    },[lightManualData])\r\n \r\n     useEffect(()=>{\r\n        if (lightAutoData === undefined || (lightAutoData && lightAutoData.error)) {\r\n            setdeepRed(0);\r\n            setRed(0);\r\n            setWhite(0);\r\n            setBlue(0);\r\n            setDeepBlue(0);\r\n            setUV(0);\r\n        } else {\r\n            setdeepRed(lightAutoData.deep_red);\r\n            setRed(lightAutoData.red);\r\n            setWhite(lightAutoData.white);\r\n            setBlue(lightAutoData.blue);\r\n            setDeepBlue(lightAutoData.deep_blue);\r\n            setUV(lightAutoData.uv);\r\n        }\r\n    },[lightAutoData])\r\n \r\n    useEffect(()=>{\r\n        if(lightAutoAmbData){\r\n            setdeepRed(0);\r\n            setRed(0);\r\n            setWhite(0);\r\n            setBlue(0);\r\n            setDeepBlue(0);\r\n            setUV(0);\r\n        }\r\n    },[lightAutoAmbData])\r\n\r\n    function onChangeDeepRed(e, v) {\r\n        setdeepRed(v);\r\n    }\r\n\r\n    function onChangeRed(e, v) {\r\n        setRed(v);\r\n    }\r\n\r\n    function onChangeWhite(e, v) {\r\n        setWhite(v);\r\n    }\r\n\r\n    function onChangeBlue(e, v) {\r\n        setBlue(v);\r\n    }\r\n\r\n    function onChangeDeepBlue(e, v) {\r\n        setDeepBlue(v);\r\n    }\r\n\r\n    function onChangeUV(e, v) {\r\n        setUV(v);\r\n    }\r\n\r\n    // code for run functionality\r\n\r\n    function postLightData(key, value) {\r\n        if(key === \"blue\"){\r\n            props.setInCubeData({...props.inCubeData, blue: blue});\r\n        }\r\n        if(key === \"red\"){\r\n            props.setInCubeData({...props.inCubeData, red: red});\r\n        }\r\n        if(key === \"white\"){\r\n            props.setInCubeData({...props.inCubeData, white: white});\r\n        }\r\n        if(key === \"deepBlue\"){\r\n            props.setInCubeData({...props.inCubeData, deep_blue: deepBlue})\r\n        }\r\n        if(key === \"deepRed\"){\r\n            props.setInCubeData({...props.inCubeData, deep_red: deepRed});\r\n        }\r\n        if(key === \"uv\"){\r\n            props.setInCubeData({...props.inCubeData, uv: uv});\r\n        }\r\n    }\r\n\r\n    function fetchLightAuto(){\r\n        var token = localStorage.getItem('token')\r\n        var selectedId = localStorage.getItem('selectedId')\r\n        var postManualData = {\r\n            incubator_id: selectedId\r\n        }\r\n        fetch(`${baseUrl.baseUrl}lightauto/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(postManualData)\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setLightAutoData(results);\r\n        });\r\n    } \r\n\r\n    function fetchLightManual(){\r\n        var token = localStorage.getItem('token')\r\n        var selectedId = localStorage.getItem('selectedId')\r\n        var postManualData = {\r\n            incubator_id: selectedId\r\n        }\r\n        fetch(`${baseUrl.baseUrl}lightmanual/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(postManualData)\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            if(results.error){\r\n                setCheckedLmanual(false)\r\n                // setCheckedLauto(!checkedLmanual)\r\n            }\r\n            setLightManualData(results);\r\n            if(selectedId){\r\n                props.setSelectedID('') \r\n                props.setSelectedID(selectedId) \r\n            }\r\n        });\r\n    } \r\n\r\n    function fetchLightautoambient(){\r\n        var token = localStorage.getItem('token')\r\n        var selectedId = localStorage.getItem('selectedId')\r\n        var postManualData = {\r\n            incubator_id: selectedId\r\n        }\r\n        fetch(`${baseUrl.baseUrl}lightautoambient/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(postManualData)\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setLightAutoAmbData(results);\r\n        });\r\n    }\r\n\r\n    const onChangeCommitted = (event, key)=>{\r\n        postLightData(key, event.target.ariaValueNow);\r\n    }; \r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <div className=\"lightLevelSlider_content\">\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"deep_red\">\r\n                            <span className=\"deep_red_title text\">Deep Red</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={deepRed}\r\n                                onChange={onChangeDeepRed}\r\n                                onChangeCommitted={(e)=>{onChangeCommitted(e, 'deepRed')}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_6\"\r\n                                value={deepRed}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"single_button btns text\" variant=\"contained\">\r\n                                {deepRed}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"red\">\r\n                            <span className=\"red_title text\">Red</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={red}\r\n                                onChange={onChangeRed}\r\n                                onChangeCommitted={(e)=>{onChangeCommitted(e, 'red')}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_7\"\r\n                                value={red}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"single_button btns text\" variant=\"contained\">\r\n                                {red}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid itemitem xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"white\">\r\n                            <span className=\"white_title text\">White</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={white}\r\n                                onChange={onChangeWhite}\r\n                                onChangeCommitted={(e)=>{onChangeCommitted(e, 'white')}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_8\"\r\n                                value={white}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"single_button btns text\" variant=\"contained\">\r\n                                {white}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"blue\">\r\n                            <span className=\"blue_title text\">Blue</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={blue}\r\n                                onChange={onChangeBlue}\r\n                                onChangeCommitted={(e)=>{onChangeCommitted(e, 'blue')}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_9\"\r\n                                value={blue}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"single_button btns text\" variant=\"contained\">\r\n                                {blue}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"deep_blue\">\r\n                            <span className=\"deep_blue_title text\">Deep Blue</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={deepBlue}\r\n                                onChange={onChangeDeepBlue}\r\n                                onChangeCommitted={(e)=>{onChangeCommitted(e, 'deepBlue')}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_10\"\r\n                                value={deepBlue}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"single_button btns text\" variant=\"contained\">\r\n                                {deepBlue}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={2} md={2} lg={2}>\r\n                        <Typography className=\"uv\">\r\n                            <span className=\"uv_title text\">UV</span>\r\n                        </Typography>\r\n                        <div className={classes.vertical}>\r\n                            <CustomSlider\r\n                                ThumbComponent={CustomThumbComponent}\r\n                                orientation=\"vertical\"\r\n                                defaultValue={uv}\r\n                                onChange={onChangeUV}\r\n                                onChangeCommitted={(e)=>{onChangeCommitted(e, 'uv')}}\r\n                                valueLabelDisplay=\"auto\"\r\n                                className=\"slider_11\"\r\n                                value={uv}\r\n                                disabled={isDisabled}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button className=\"single_button btns text\" variant=\"contained\">\r\n                                {uv}%\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"light_level_titles text\">\r\n                    <p>LIGHT LEVELS</p>\r\n                </div>\r\n                <Grid container>\r\n                    <div className=\"light_levels_Slider_controls\">\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div>\r\n                                <label className=\"switch\">\r\n                                    <input type=\"checkbox\" \r\n                                        checked={checkedLmanual}\r\n                                        onChange={() => {\r\n                                        setCheckedLmanual(!checkedLmanual);\r\n                                        }}\r\n                                        name=\"checkedLmanual\"\r\n                                        color=\"primary\"\r\n                                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                                    />\r\n                                    <span className=\"sliders round\" />\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"manual_title_light_levels\">\r\n                                <Typography className=\"text\"  color={checkedLmanual ? \"primary\" : \"\"}>\r\n                                    MANUAL\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"switch_toggle\">\r\n                                <label className=\"switch\">\r\n                                    <input type=\"checkbox\" \r\n                                        type=\"checkbox\"\r\n                                        checked={checkedLauto}\r\n                                        onChange={() => {\r\n                                          setCheckedLauto(!checkedLauto);\r\n                                        }}\r\n                                        name=\"checkedLauto\"\r\n                                        color=\"primary\"\r\n                                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                                    />\r\n                                    <span className=\"sliders round\" />\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"auto_title\">\r\n                                <Typography className=\"text\" color={checkedLauto ? \"primary\" : \"\"}>\r\n                                    AUTO\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"switch_toggle_light_levels\">\r\n                                <label className=\"switch\">\r\n                                    <input type=\"checkbox\" \r\n                                        type=\"checkbox\"\r\n                                        checked={checkedLautoamb}\r\n                                        onChange={() => {\r\n                                            setCheckedLautoamb(!checkedLautoamb);\r\n                                        }}\r\n                                        name=\"checkedLautoamb\"\r\n                                        color=\"primary\"\r\n                                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                                    />\r\n                                    <span className=\"sliders round\" />\r\n                                </label>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            <div className=\"auto_title_light_level\">\r\n                                <Typography className=\"text\" color={checkedLautoamb ? \"primary\" : \"\"}>\r\n                                    AUTO-AMBIDENT\r\n                                </Typography>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item sm={2} md={2} lg={2}>\r\n                            {checkedLmanual === true && (\r\n                                <div>\r\n                                    <BootstrapTooltip classname=\"text\" title=\"Edit Program\">\r\n                                        <div className=\"light_edit_btn_color\">\r\n                                            <div className=\"light_round_edit_icon\">\r\n                                                <EditIcon onClick= {() =>{setIsActive(s => !s)}} className=\"light_graph_edit_icon\" style={{ color: isActive ? \"white\" : \"\" }} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </BootstrapTooltip>\r\n                                </div>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport baseUrl from \"../../config/config\";\r\nimport '../../styles/cropDetailModel.css';\r\n\r\nexport default function EditWatarCycleGraphModal(props) {\r\n\r\n    const [open, setOpen] = React.useState(props.open);\r\n\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n\r\n    const[editPencil, setEditPencil] = React.useState(true);\r\n\r\n    const [hour0, setHour0] = useState(0);\r\n    const [hour1, setHour1] = useState(0);\r\n    const [hour2, setHour2] = useState(0);\r\n    const [hour3, setHour3] = useState(0);\r\n    const [hour4, setHour4] = useState(0);\r\n    const [hour5, setHour5] = useState(0);\r\n    const [hour6, setHour6] = useState(0);\r\n    const [hour7, setHour7] = useState(0);\r\n    const [hour8, setHour8] = useState(0);\r\n    const [hour9, setHour9] = useState(0);\r\n    const [hour10, setHour10] = useState(0);\r\n    const [hour11, setHour11] = useState(0);\r\n    const [hour12, setHour12] = useState(0);\r\n    const [hour13, setHour13] = useState(0);\r\n    const [hour14, setHour14] = useState(0);\r\n    const [hour15, setHour15] = useState(0);\r\n    const [hour16, setHour16] = useState(0);\r\n    const [hour17, setHour17] = useState(0);\r\n    const [hour18, setHour18] = useState(0);\r\n    const [hour19, setHour19] = useState(0);\r\n    const [hour20, setHour20] = useState(0);\r\n    const [hour21, setHour21] = useState(0);\r\n    const [hour22, setHour22] = useState(0);\r\n    const [hour23, setHour23] = useState(0);\r\n\r\n    const handleClose = () => {\r\n        props.setOpen(false);\r\n        props.setDelayEdit(false);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    function updateWaterCycleForm(e) {\r\n        e.preventDefault();\r\n        setEditPencil(!editPencil);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.inCubeData === undefined || props.inCubeData.values === null) {\r\n            setHour0(0);\r\n            setHour1(0);\r\n            setHour2(0);\r\n            setHour3(0);\r\n            setHour4(0);\r\n            setHour5(0);\r\n            setHour6(0);\r\n            setHour7(0);\r\n            setHour8(0);\r\n            setHour9(0);\r\n            setHour10(0);\r\n            setHour11(0);\r\n            setHour12(0);\r\n            setHour13(0);\r\n            setHour14(0);\r\n            setHour15(0);\r\n            setHour16(0);\r\n            setHour17(0);\r\n            setHour18(0);\r\n            setHour19(0);\r\n            setHour20(0);\r\n            setHour21(0);\r\n            setHour22(0);\r\n            setHour23(0);\r\n        } else {\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour0(props.inCubeData.values[0])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour1(props.inCubeData.values[1])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour2(props.inCubeData.values[2])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour3(props.inCubeData.values[3])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour4(props.inCubeData.values[4])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour5(props.inCubeData.values[5])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour6(props.inCubeData.values[6])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour7(props.inCubeData.values[7])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour8(props.inCubeData.values[8])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour9(props.inCubeData.values[9])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour10(props.inCubeData.values[10])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour11(props.inCubeData.values[11])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour12(props.inCubeData.values[12])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour13(props.inCubeData.values[13])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour14(props.inCubeData.values[14])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour15(props.inCubeData.values[15])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour16(props.inCubeData.values[16])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour17(props.inCubeData.values[17])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour18(props.inCubeData.values[18])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour19(props.inCubeData.values[19])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour20(props.inCubeData.values[20])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour21(props.inCubeData.values[21])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour22(props.inCubeData.values[22])\r\n            }\r\n\r\n            if (props.inCubeData && props.inCubeData.values) {\r\n                setHour23(props.inCubeData.values[23])\r\n            }\r\n        }\r\n    }, [props.inCubeData]);\r\n\r\n    function onChangeHour0(e){\r\n        setHour0(e.target.value)\r\n    }\r\n    function onChangeHour1(e){\r\n        setHour1(e.target.value)\r\n    }\r\n    function onChangeHour2(e){\r\n        setHour2(e.target.value)\r\n    }\r\n    function onChangeHour3(e){\r\n        setHour3(e.target.value)\r\n    }\r\n    function onChangeHour4(e){\r\n        setHour4(e.target.value)\r\n    }\r\n    function onChangeHour5(e){\r\n        setHour5(e.target.value)\r\n    }\r\n    function onChangeHour6(e){\r\n        setHour6(e.target.value)\r\n    }\r\n    function onChangeHour7(e){\r\n        setHour7(e.target.value)\r\n    }\r\n    function onChangeHour8(e){\r\n        setHour8(e.target.value)\r\n    }\r\n    function onChangeHour9(e){\r\n        setHour9(e.target.value)\r\n    }\r\n    function onChangeHour10(e){\r\n        setHour10(e.target.value)\r\n    }\r\n    function onChangeHour11(e){\r\n        setHour11(e.target.value)\r\n    }\r\n    function onChangeHour12(e){\r\n        setHour12(e.target.value)\r\n    }\r\n    function onChangeHour13(e){\r\n        setHour13(e.target.value)\r\n    }\r\n    function onChangeHour14(e){\r\n        setHour14(e.target.value)\r\n    }\r\n    function onChangeHour15(e){\r\n        setHour15(e.target.value)\r\n    }\r\n    function onChangeHour16(e){\r\n        setHour16(e.target.value)\r\n    }\r\n    function onChangeHour17(e){\r\n        setHour17(e.target.value)\r\n    }\r\n    function onChangeHour18(e){\r\n        setHour18(e.target.value)\r\n    }\r\n    function onChangeHour19(e){\r\n        setHour19(e.target.value)\r\n    }\r\n    function onChangeHour20(e){\r\n        setHour20(e.target.value)\r\n    }\r\n    function onChangeHour21(e){\r\n        setHour21(e.target.value)\r\n    }\r\n    function onChangeHour22(e){\r\n        setHour22(e.target.value)\r\n    }\r\n    function onChangeHour23(e){\r\n        setHour23(e.target.value)\r\n    }\r\n \r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        var token = localStorage.getItem(\"token\");\r\n        var selectedId = localStorage.getItem(\"selectedId\");\r\n        var postGraphData = {\r\n            incubator_id : selectedId,\r\n            one: hour0,\r\n            two: hour1,\r\n            three: hour2,\r\n            four: hour3,\r\n            five: hour4,\r\n            six: hour5,\r\n            seven: hour6,\r\n            eight: hour7,\r\n            nine: hour8,\r\n            ten: hour9,\r\n            eleven: hour10,\r\n            twelve: hour11,\r\n            thirteen: hour12,\r\n            fourteen: hour13,\r\n            fifteen: hour14,\r\n            sixteen: hour15,\r\n            seventeen: hour16,\r\n            eighteen: hour17,\r\n            nineteen: hour18,\r\n            twenty: hour19,\r\n            twenty_one: hour20,\r\n            twenty_two: hour21,\r\n            twenty_three: hour22,\r\n            twenty_four: hour23\r\n       }\r\n       fetch(`${baseUrl.baseUrl}water_manual_submit/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(postGraphData),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n          props.setDelayEdit(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={props.open}\r\n                scroll={scroll}\r\n                className=\"crop_detail_model_width\"\r\n            >\r\n                <div className=\"crop_detail_title_heading\">\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={2} md={2}>\r\n                                <div className=\"back_text_center\">\r\n                                    <div className=\"back_icon\" onClick={handleClose}>\r\n                                        <ArrowBackIcon className=\"go_back_icon\" />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} md={8}>\r\n                                <div className=\"crop_title\">\r\n                                    <span className=\"text\">Water Cycle Time Duration</span>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2}>\r\n                                <div className=\"edit_text_center\">\r\n                                    <div className=\"edit_icon\">\r\n                                        <CreateIcon className=\"go_edit_icon\"\r\n                                        onClick={(e) => updateWaterCycleForm(e)}\r\n                                        color={editPencil ? \"primary\" : \"\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogTitle>\r\n                </div>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <DialogContentText className=\"text\">\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"0 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_0\"\r\n                                        id=\"hour_0\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour0}\r\n                                        value={hour0}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour0(e)}}\r\n\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"1 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_1\"\r\n                                        id=\"hour_1\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour1}\r\n                                        value={hour1}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour1(e)}}\r\n\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"2 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_2\"\r\n                                        id=\"hour_2\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour2}\r\n                                        value={hour2}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour2(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"3 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_3\"\r\n                                        id=\"hour_3\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour3}\r\n                                        value={hour3}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour3(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"4 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_4\"\r\n                                        id=\"hour_4\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour4}\r\n                                        value={hour4}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour4(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"5 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_5\"\r\n                                        id=\"hour_5\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour5}\r\n                                        value={hour5}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour5(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"6 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_6\"\r\n                                        id=\"hour_6\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour6}\r\n                                        value={hour6}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour6(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"7 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_7\"\r\n                                        id=\"hour_7\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour7}\r\n                                        value={hour7}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour7(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"8 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_8\"\r\n                                        id=\"hour_8\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour8}\r\n                                        value={hour8}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour8(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"9 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_9\"\r\n                                        id=\"hour_9\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour9}\r\n                                        value={hour9}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{(onChangeHour9(e))}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"10 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_10\"\r\n                                        id=\"hour_10\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour10}\r\n                                        value={hour10}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour10(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"11 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_11\"\r\n                                        id=\"hour_11\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour11}\r\n                                        value={hour11}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour11(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"12 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_12\"\r\n                                        id=\"hour_12\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour12}\r\n                                        value={hour12}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour12(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"13 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_13\"\r\n                                        id=\"hour_13\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour13}\r\n                                        value={hour13}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour13(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"14 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_14\"\r\n                                        id=\"hour_14\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour14}\r\n                                        value={hour14}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour14(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"15 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_15\"\r\n                                        id=\"hour_15\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour15}\r\n                                        value={hour15}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour15(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"16 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_16\"\r\n                                        id=\"hour_16\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour16}\r\n                                        value={hour16}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour16(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"17 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_17\"\r\n                                        id=\"hour_17\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour17}\r\n                                        value={hour17}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour17(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"18 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_18\"\r\n                                        id=\"hour_18\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour18}\r\n                                        value={hour18}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour18(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"19 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_19\"\r\n                                        id=\"hour_19\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour19}\r\n                                        value={hour19}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour19(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"20 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_20\"\r\n                                        id=\"hour_20\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour20}\r\n                                        value={hour20}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour20(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"21 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_21\"\r\n                                        id=\"hour_21\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour21}\r\n                                        value={hour21}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour21(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"22 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_22\"\r\n                                        id=\"hour_22\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour22}\r\n                                        value={hour22}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour22(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3} md={3}>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        label=\"23 Hour's\"\r\n                                        type=\"number\"\r\n                                        name=\"hour_23\"\r\n                                        id=\"hour_23\"\r\n                                        autoComplete=\"off\"\r\n                                        defaultValue={hour23}\r\n                                        value={hour23}\r\n                                        disabled={editPencil}\r\n                                        onChange={(e)=>{onChangeHour23(e)}}\r\n                                        onKeyDown={ e => ( e.keyCode === 69 || e.keyCode === 190 ) && e.preventDefault() }\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                        {!editPencil && \r\n                        <DialogActions className=\"text_left\">\r\n                            <div>\r\n                                <Button type=\"submit\" variant=\"contained\" className=\"btn_color\" onClick={handleClose}>\r\n                                    <span className=\"text text_color\">Submit</span>\r\n                                </Button>\r\n                            </div>\r\n                        </DialogActions>\r\n                        }\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nfunction LineChart(props) {\r\n  const [mapData, setMapData] = useState([]);\r\n  var cd = props.inCubeData && props.inCubeData.values;\r\n\r\n  const data = {\r\n    labels: [\"0\",\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\" ],\r\n    datasets: [\r\n      {\r\n        label: 'WATERING CYCLES',\r\n        data: mapData,\r\n        fill: false,\r\n        radius: 4,\r\n        pointRadius: 6,\r\n        pointHitRadius: 10,\r\n        lineTension: 0.1,\r\n        backgroundColor: \"#1E90FF\",\r\n        borderColor: \"#1E90FF\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n        display: false\r\n    },\r\n    scales: {\r\n    },\r\n    onClick: function(e, legendItem, legend) {\r\n      var index = legendItem.datasetIndex;\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.isDynamicHour) {\r\n      let tm = cd;\r\n      var tempD = tm.slice(0, props.hourVal);\r\n      setMapData(tempD);\r\n    }\r\n    if(props.inCubeData && props.inCubeData.values){\r\n      setMapData(props.inCubeData.values)\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      <Line data={data} options={options} id=\"myCanvas\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Container from '@material-ui/core/Container';\r\nimport EditWatarCycleGraphModal from '../common_view/EditWatarCycleGraphModal';\r\nimport LineChart from './LineChart';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\r\nimport baseUrl from \"../../config/config\";\r\nimport '../../styles/graph.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n        width: 500,\r\n        display: \"flex\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    card_margin_top: {\r\n        marginTop: '5px',\r\n        marginBottom: '5px',\r\n    }, \r\n  }),\r\n);\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n      fontSize: '15px',\r\n      marginTop: '8px !important',\r\n      marginLeft: '10px !important',\r\n    },\r\n}))\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} className=\"text\" {...props} />;\r\n}\r\n\r\nexport default function Graph(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [sliderHeight, setSliderHeight] = useState(100);\r\n    const [sliderWidth, setSliderWidth] = useState(100);\r\n\r\n    const [durationVal, setDurationVal] = useState(0);\r\n    const [hourVal, setHourVal] = useState(0);\r\n    const [isDynamicHour, setIsDynamicHour] = useState(false);\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n        checkedB: false,\r\n    });\r\n\r\n    const [checkedgraphAmanual, setCheckedgraphAmanual] = useState(false);\r\n    const [checkedgraphAauto, setCheckedgraphAauto] = useState(true);\r\n    const [manualWCToggle, setManualWCToggle] = useState();\r\n\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    const [garphAutoData, setGraphAutoData] = useState();\r\n    const [GraphManualData, setGraphManualData] = useState();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [scroll, setScroll] = React.useState('paper');\r\n\r\n    useEffect(()=>{\r\n        if(isActive){\r\n            setOpen(true)\r\n            props.setDelayEdit(true)\r\n        }\r\n        else{\r\n            setOpen(false);\r\n        }\r\n    },[isActive]);\r\n\r\n    useEffect(()=>{\r\n        setIsActive(props.showGraphIcon)\r\n    },[props.showGraphIcon])\r\n\r\n    useEffect(() => {\r\n        var ele = document.getElementById(\"myCanvas\");\r\n        if (ele) {\r\n        setSliderHeight(ele.height - 70);\r\n        setSliderWidth(ele.width);\r\n        }\r\n    }, [document]);\r\n\r\n    useEffect(() => {\r\n        if(checkedgraphAmanual !== null) {\r\n            // if (checkedgraphAmanual)\r\n            setCheckedgraphAauto(!checkedgraphAmanual);\r\n        }\r\n    }, [checkedgraphAmanual]);\r\n    \r\n    useEffect(() => {\r\n        if (checkedgraphAauto !== null) {\r\n        setCheckedgraphAmanual(!checkedgraphAauto);\r\n        }\r\n    }, [checkedgraphAauto]);\r\n\r\n    const handleClickOpen = (scrollType) => () => {\r\n        setOpen(true);\r\n        props.setDelayEdit(true)\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    \r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(()=>{\r\n        var togglebar = localStorage.getItem('manualWCToggle')\r\n        if(togglebar==='true'){\r\n            setCheckedgraphAmanual(true)\r\n        } else {\r\n            setCheckedgraphAmanual(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        var togglebar = localStorage.setItem('manualWCToggle', checkedgraphAmanual)\r\n    },[checkedgraphAmanual]);\r\n\r\n    function fetchGraphAutoData(){\r\n        var token = localStorage.getItem(\"token\");\r\n        var selectedId = localStorage.getItem(\"selectedId\");\r\n        var postGraphAutoData = {\r\n            incubator_id : selectedId,\r\n        };\r\n        fetch(`${baseUrl.baseUrl}water_auto/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token,\r\n            },\r\n            body: JSON.stringify(postGraphAutoData),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setGraphAutoData(results);\r\n        });\r\n        }\r\n\r\n        useEffect(()=>{\r\n        if(checkedgraphAauto){\r\n            fetchGraphAutoData()\r\n        }\r\n    },[checkedgraphAauto])\r\n \r\n    function fetchGraphManualData(){\r\n        var token = localStorage.getItem(\"token\");\r\n        var selectedId = localStorage.getItem('selectedId');\r\n        var postGraphManualdata = {\r\n            incubator_id : selectedId,\r\n        };\r\n        fetch(`${baseUrl.baseUrl}water_manual/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: token,\r\n            },\r\n            body: JSON.stringify(postGraphManualdata),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            if(results.error){\r\n                setCheckedgraphAmanual(false)\r\n                setCheckedgraphAauto(true)\r\n            }\r\n            setGraphManualData(results);\r\n        });\r\n    }\r\n \r\n    useEffect(()=>{\r\n        if(checkedgraphAmanual){\r\n            fetchGraphManualData()\r\n        }\r\n    }, [checkedgraphAmanual])\r\n \r\n    useEffect(()=>{\r\n        setCheckedgraphAauto(props.inCubeData && props.inCubeData.water_status)\r\n    }, [props.inCubeData])\r\n\r\n    return (\r\n        <Container className={classes.card_margin_top}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <Typography className=\"graph_title text\">\r\n                        WATERING CYCLES\r\n                    </Typography>\r\n                    <div className={classes.root}>\r\n                        <Typography className=\"duration_title text\">DURATION</Typography>\r\n                        <div className=\"slider_vertcial\">\r\n                            {/* <Slider\r\n                                orientation=\"vertical\"\r\n                                defaultValue={10}\r\n                                aria-labelledby=\"vertical-slider\"\r\n                                max={30}\r\n                                onChange={onChangeDurationHandler}\r\n                            /> */}\r\n                        </div>\r\n                        <div className=\"graph\">\r\n                            <LineChart isDynamicHour={isDynamicHour} hourVal={hourVal} inCubeData={props.inCubeData}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"slider_line\">\r\n                        {/* <Slider\r\n                            orientation=\"horizontal\"\r\n                            defaultValue={21}\r\n                            aria-labelledby=\"horizontal-slider\"\r\n                            min={1}\r\n                            max={21}\r\n                            onChange={onChangeHourHandler}\r\n                        /> */}\r\n                    </div>\r\n                    <Typography className=\"hour_line text\">HOUR</Typography>\r\n                </Grid>\r\n                <Grid item sm={2} md={2} lg={2}>\r\n                    <div className=\"graph_manual_toggal\">\r\n                        <label className=\"switch\">\r\n                            <input type=\"checkbox\"\r\n                                name=\"checkedA\"\r\n                                color=\"primary\"\r\n                                checked={checkedgraphAmanual}\r\n                                onChange={() => {\r\n                                    setCheckedgraphAmanual(!checkedgraphAmanual);\r\n                                }}\r\n                                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                            />\r\n                            <span className=\"sliders round\" />\r\n                        </label>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={2} md={2} lg={2}>\r\n                    <div className=\"graph_manual_title\">\r\n                        <Typography className=\"text\" color={checkedgraphAmanual ? \"primary\" : \" \"}>\r\n                            MANUAL\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={2} md={2} lg={2}>\r\n                    <div className=\"graph_auto_toggal\">\r\n                        <label className=\"switch\">\r\n                            <input type=\"checkbox\"\r\n                                name=\"checkedB\"\r\n                                checked={checkedgraphAauto}\r\n                                color=\"primary\"\r\n                                onChange={() => {\r\n                                    setCheckedgraphAauto(!checkedgraphAauto);\r\n                                }}\r\n                                inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                            />\r\n                            <span className=\"sliders round\" />\r\n                        </label>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={2} md={2} lg={2}>\r\n                    <div className=\"graph_auto_title\">\r\n                        <Typography className=\"text\" color={checkedgraphAauto ? \"primary\" : \"\"}>\r\n                            AUTO\r\n                        </Typography>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={2} md={2} lg={2}>\r\n                    {checkedgraphAmanual === true && (\r\n                        <div>\r\n                            <BootstrapTooltip classname=\"text\" title=\"Edit Program\">\r\n                                <div className=\"edit_btn_color\">\r\n                                    <div className=\"round_edit_icon\" onClick={handleClickOpen()}>\r\n                                        <InsertChartIcon className=\"graph_edit_icon\" />\r\n                                    </div>\r\n                                </div>\r\n                            </BootstrapTooltip>\r\n                        </div>\r\n                    )}\r\n                </Grid>\r\n                <EditWatarCycleGraphModal open={open} setOpen={setOpen} inCubeData={props.inCubeData} garphAutoData={garphAutoData} setGraphAutoData={setGraphAutoData} GraphManualData={GraphManualData} setGraphManualData={setGraphManualData} setDelayEdit={props.setDelayEdit} />\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Header from './Header';\r\nimport SideBar from './SideBar';\r\nimport CropDetailModal from './CropDetailModal';\r\nimport ThreeMonthCropDetail from './ThreeMonthCropDetail';\r\nimport DeleteIncubator from './DeleteIncubator';\r\nimport RunProgram from './RunProgram';\r\nimport NewEntryModal from './NewEntryModal';\r\nimport Record from './Record';\r\nimport LiveImage from './LiveImage';\r\nimport AtmosphereSlider from './AtmosphereSlider';\r\nimport LightLevelSlider from './LightLevelSlider';\r\nimport Graph from './Graph';\r\nimport Spinner from \"../Spinner\";\r\nimport baseUrl from '../../config/config';\r\nimport '../../styles/home.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        container: {\r\n            paddingTop: theme.spacing(4),\r\n            paddingBottom: theme.spacing(4),\r\n            marginTop: '80px',\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'none !important',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function Home(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [newupdate, setNewUpdate] = useState(0);\r\n\r\n    const [selectedID, setSelectedID] = useState('');\r\n\r\n    const [updateList, setUpdateList] = useState();\r\n\r\n    const [inCubeData, setInCubeData] = useState();\r\n\r\n    const [date, setDate] = useState();\r\n\r\n    const [selectedName, setSelectedName] = useState();\r\n\r\n    const [isRecord, setIsRecord] = useState(false);\r\n\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    const [deleteBtn, setDeleteBtn] = useState(false);\r\n\r\n    const [runBtn, setRunBtn] = useState(false);\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const [cropDetails, setCropDetails] = useState();\r\n\r\n    const [showEdit, setShowEdit] = useState(false);\r\n\r\n    const [showImage, setShowImage] = useState(false);\r\n\r\n    const [delayEdit, setDelayEdit] = useState(false);\r\n\r\n    const [showPen, setShowPen] = useState(false);\r\n\r\n    const [showAtmPen, setAtmShowPen] = useState(false); \r\n\r\n    const [showLightPen, setLightShowPen] = useState(false);\r\n\r\n    const [showGraphIcon, setShowGraphIcon] = useState(false);\r\n\r\n    const [loader, setLoader] = React.useState(false);\r\n\r\n    const [runData, setRunData] = React.useState({\r\n        atmosphere: {},\r\n        light: {},\r\n        water: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        var sidbar_tab = localStorage.getItem(\"selectedId\");\r\n        if (sidbar_tab) setSelectedID(Number(sidbar_tab));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!delayEdit) {\r\n            var myClock;\r\n            if (myClock) clearInterval(myClock);\r\n            myClock = setInterval(myTimer, 2000)\r\n            function myTimer() {\r\n                // if(delayEdit) return;\r\n                let sId = localStorage.getItem(\"selectedId\")   \r\n                if (sId !== null)                                \r\n                fetchApi(sId);                                \r\n            }\r\n            return (() => {\r\n                if (myClock) clearInterval(myClock);\r\n            })\r\n        }\r\n    }, [delayEdit])\r\n\r\n    useEffect(() => {\r\n    }, [inCubeData])\r\n\r\n    useEffect(() => {\r\n        if (selectedID) {\r\n            localStorage.setItem(\"selectedId\", selectedID);\r\n            localStorage.setItem(\"selectedName\", selectedName);\r\n            setLoader(true);\r\n            fetchApi(selectedID)\r\n        }\r\n    }, [selectedID]);\r\n\r\n    function fetchApi(selectedID) {\r\n        var token = localStorage.getItem(\"token\");\r\n        fetch(`${baseUrl.baseUrl}incubator/` + selectedID + \"/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            if (results && results.error) {\r\n                setInCubeData(' ');\r\n            } else if (results && results.status_key === false) {\r\n                setOpenModal(true);\r\n                setInCubeData(results.msg.results);\r\n            } else {\r\n                setOpenModal(false);\r\n                setInCubeData(results.msg.results);\r\n            }\r\n            if (results.status_key !== false) {\r\n                var tempDate = new Date(results.msg.results.updated_on);\r\n                setDate(tempDate.toUTCString());\r\n            }\r\n            setLoader(false)   \r\n        })\r\n        .catch((rej) => { });\r\n    }\r\n\r\n    function fetchCropDetails() {\r\n        setOpenModal(!openModal);\r\n        setShowEdit(true)\r\n        var token = localStorage.getItem(\"token\");\r\n        var selectedId = localStorage.getItem(\"selectedId\");\r\n        var cropDetailData = {\r\n            incubator_id: selectedId,\r\n        };\r\n        fetch(`${baseUrl.baseUrl}crop_detail/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n            },\r\n            body: JSON.stringify(cropDetailData),\r\n        })\r\n        .then((res) => res.json())\r\n        .then((results) => {\r\n            setCropDetails(results);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <div>\r\n                <Header />\r\n            </div>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3} className=\"container_top\">\r\n                        <Grid item xs={12} md={2} lg={2}>\r\n                            <Card className=\"card\">\r\n                                <CropDetailModal inCubeData={inCubeData} cb={fetchCropDetails} cropDetails={cropDetails} showEdit={showEdit} />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} lg={2}>\r\n                            <Card className=\"card\">\r\n                                <ThreeMonthCropDetail inCubeData={inCubeData} />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} lg={2}>\r\n                            <Card className=\"card\">\r\n                                <NewEntryModal setUpdateList={setUpdateList} setSelectedID={setSelectedID} />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} lg={2}>\r\n                            <Card className=\"card\">\r\n                                <RunProgram runBtn={runBtn} setRunBtn={setRunBtn} inCubeData={inCubeData} setRunData={setRunData} runData={runData} isRecord={isRecord} setIsRecord={setIsRecord} setDelayEdit={setDelayEdit} setAtmShowPen={setAtmShowPen} setLightShowPen={setLightShowPen} />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} lg={2}>\r\n                            <Card className=\"card\">\r\n                                <DeleteIncubator deleteBtn={deleteBtn} setDeleteBtn={setDeleteBtn} inCubeData={inCubeData} setInCubeData={setInCubeData} setUpdateList={setUpdateList} setSelectedID={setSelectedID} loader={loader} setLoader={setLoader} />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={2} lg={2}>\r\n                            <Card className=\"card\">\r\n                                <Record isRecord={isRecord} setIsRecord={setIsRecord} disable={disable} inCubeData={inCubeData} runData={runData} />\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={5} lg={4}>\r\n                            <Card className=\"card\">\r\n                                <LiveImage showImage={showImage} setShowImage={setShowImage} inCubeData={inCubeData} />\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={7} lg={8}>\r\n                            <Card className=\"card\">\r\n                                <AtmosphereSlider inCubeData={inCubeData} setInCubeData={setInCubeData} newupdate={newupdate} setDisable={setDisable} runData={runData} setRunData={setRunData} setSelectedID={setSelectedID} delayEdit={delayEdit} setDelayEdit={setDelayEdit} showAtmPen={showAtmPen} setAtmShowPen={setAtmShowPen} />\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className=\"card\">\r\n                                <LightLevelSlider inCubeData={inCubeData} setInCubeData={setInCubeData} setDisable={setDisable} runData={runData} setRunData={setRunData} setSelectedID={setSelectedID} delayEdit={delayEdit} setDelayEdit={setDelayEdit} showLightPen={showLightPen} setLightShowPen={setLightShowPen} />\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className=\"card\">\r\n                                {/* <Graph inCubeData={inCubeData} setInCubeData={setInCubeData} setRunData={setRunData} runData={runData}/> */}\r\n                                <Graph inCubeData={inCubeData} setInCubeData={setInCubeData} setRunData={setRunData} runData={runData} setDelayEdit={setDelayEdit} showGraphIcon={showGraphIcon} setShowGraphIcon={setShowGraphIcon} />\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <div>\r\n                <SideBar setSelectedID={setSelectedID} selectedID={selectedID} updateList={updateList} deleteBtn={deleteBtn} setDeleteBtn={setDeleteBtn} setShowImage={setShowImage} />\r\n            </div>\r\n            <Spinner loader={loader} setLoader={setLoader}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    let token = localStorage.getItem('token')\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            token ?\r\n                <Component {...props} />\r\n            : <Redirect to=\"/\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\r\n\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <Component {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Login from './components/views/Login';\r\nimport ForgotPassword from './components/views/ForgotPassword';\r\nimport ResetPassword from './components/views/ResetPassword';\r\nimport Home from './components/views/common_view/Home';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nexport default function RouteComponent() {\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute exact component={Login} path=\"/\" />\r\n                <PublicRoute exact component={ForgotPassword} path=\"/forgot_password\" />\r\n                <PrivateRoute exact component={ResetPassword} path=\"/reset_password\" />\r\n                <PrivateRoute exact component={Home} path=\"/home\" />\r\n                <PublicRoute path=\"*\" render={() => <Redirect to=\"/\" />} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import RouteComponent from './RouteComponent';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <RouteComponent />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}